{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-aurora/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-16x16.png","path":"icons/favicon-16x16.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-32x32.png","path":"icons/favicon-32x32.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/about.32dfa3b0.css","path":"static/css/about.32dfa3b0.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/404.1a6cd5bd.css","path":"static/css/404.1a6cd5bd.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/app.0d31776f.css","path":"static/css/app.0d31776f.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/archives.c0d49bd5.css","path":"static/css/archives.c0d49bd5.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/chunk-libs.eebac533.css","path":"static/css/chunk-libs.eebac533.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/categories.10e2be12.css","path":"static/css/categories.10e2be12.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/post.9f951a60.css","path":"static/css/post.9f951a60.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/page.749ad047.css","path":"static/css/page.749ad047.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/result.10e2be12.css","path":"static/css/result.10e2be12.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/css/tags.10e2be12.css","path":"static/css/tags.10e2be12.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/img/default-cover.df7c128c.jpg","path":"static/img/default-cover.df7c128c.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/about.024aacd1.js","path":"static/js/about.024aacd1.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/404.00d640a8.js","path":"static/js/404.00d640a8.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/app.6d2c358d.js","path":"static/js/app.6d2c358d.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/archives.574ac664.js","path":"static/js/archives.574ac664.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/categories.90aa5475.js","path":"static/js/categories.90aa5475.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/chunk-libs.dc6146cd.js","path":"static/js/chunk-libs.dc6146cd.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/page.a02618ad.js","path":"static/js/page.a02618ad.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/post.cebfbaa4.js","path":"static/js/post.cebfbaa4.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/result.39470350.js","path":"static/js/result.39470350.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-aurora/source/static/js/tags.2ad613f5.js","path":"static/js/tags.2ad613f5.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/HelloWorld.md","hash":"20ba2959b2a52e144a84f0a19e1718c092e7a679","modified":1693913247911},{"_id":"source/_posts/MyNew.md","hash":"49624a9c344f8f8ade38d9e1a768c49c413f2ea5","modified":1693924604758},{"_id":"source/_posts/bb.md","hash":"5c7c580364dd2e65f7f9d69c85e77ef888ab6a03","modified":1693924387641},{"_id":"source/_posts/about.md","hash":"495cc4b19b7b4b116458552fddb35f51ee183a78","modified":1693913247911},{"_id":"source/_posts/vimconfig.md","hash":"51da8beda5bb9eb847af090a1bfd199f691822ef","modified":1693913247911},{"_id":"source/tags/index.md","hash":"d8f7790330fdea63f3b8d7da53a1a045b91538a6","modified":1693913247912},{"_id":"source/_posts/AA.md","hash":"6df5b2090060b39f7c186ae5136b237a6261f0e5","modified":1693913605645},{"_id":"source/about/index.md","hash":"61451c6d6789607ea455a14b1d1f578aedf3c108","modified":1693913247912},{"_id":"source/zss1/index.md","hash":"58708506318aad3991665b494231c04e91fd29d6","modified":1693913247912},{"_id":"source/zss2/index.md","hash":"c269af7fb47909843679645bac6dbc23223d0105","modified":1693913247912},{"_id":"source/zss3/index.md","hash":"c49ffc7ee37c78e4a6268b582e007985810268c8","modified":1693913247912},{"_id":"node_modules/hexo-theme-aurora/.browserslistrc","hash":"db215b841182d2af3259a1c1d6e1957bca333970","modified":1693913555724},{"_id":"node_modules/hexo-theme-aurora/CHANGELOG.md","hash":"e68f3af8af17d326a48e1b317e01d7429193217e","modified":1693913556515},{"_id":"node_modules/hexo-theme-aurora/CHANGELOG_CN.md","hash":"5d13c251e8b77fd86870da50f3be98f8822edc66","modified":1693913556510},{"_id":"node_modules/hexo-theme-aurora/LICENSE","hash":"21cf269018b0cf04e1126b6b9b1a5e6af7c5e61f","modified":1693913555746},{"_id":"node_modules/hexo-theme-aurora/README.md","hash":"c50f58b08b75780990c18ab85761e3e24aac0d90","modified":1693913556516},{"_id":"node_modules/hexo-theme-aurora/_config.yml","hash":"e6b2335cb393444b8a1fc1ad65331f4a30bc8915","modified":1693913556522},{"_id":"node_modules/hexo-theme-aurora/jest.config.js","hash":"425f08cb718a56630ce61ae0686f35c55ef565df","modified":1693913556474},{"_id":"node_modules/hexo-theme-aurora/package.json","hash":"1b312a6a2de107ba9dc952614f1078c78664a4e4","modified":1693913556507},{"_id":"node_modules/hexo-theme-aurora/.circleci/config.yml","hash":"534051be311581f69aa8287120275a04539290e4","modified":1693913556526},{"_id":"node_modules/hexo-theme-aurora/data/cn.yml","hash":"4f5dcc1e2953df7a8e4e683c1a9115f6e0041f5e","modified":1693913556524},{"_id":"node_modules/hexo-theme-aurora/layout/index.ejs","hash":"94732830a65b718d2fa506b8598df44f14399fd8","modified":1693913556177},{"_id":"node_modules/hexo-theme-aurora/data/en.yml","hash":"7bbd6c0da0ae2f93f8a786a3be77fbe4e95a787e","modified":1693913556528},{"_id":"node_modules/hexo-theme-aurora/scripts/index.js","hash":"2a3c62a860581ee6813ca4bcaa7c952f614e818c","modified":1693913556464},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-16x16.png","hash":"849cad2a5ae49fa54c20372f7a21ae95192bafcf","modified":1693913556521},{"_id":"node_modules/hexo-theme-aurora/source/favicon.ico","hash":"c39d3ad80489cffed0d3df82c8cb05a049ab39a3","modified":1693913556222},{"_id":"node_modules/hexo-theme-aurora/source/icons/favicon-32x32.png","hash":"9dbabf6f4d825da99dcb2e91583755ae8d3b3ff4","modified":1693913556522},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/category.js","hash":"0ae21ffcf6e471ebfb72ac62a833991fae86ec8a","modified":1693913556429},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/filters/index.js","hash":"5eacff9446dd6c9a7eb0a0c84be9187055440454","modified":1693913556468},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/page.js","hash":"1be54ea9cdf8e293e67bf457075fcdd8a72b8779","modified":1693913556483},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/index.js","hash":"dfbb0fdbf990bd67684ed891a4aaa1fd8dcd23f2","modified":1693913556469},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/statistic.js","hash":"1c641956e15cec96490de16a88ccc7bec0c9d5c4","modified":1693913556494},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/post.js","hash":"76c3268e8b6887fb1fd11c4d71004aad9dc215fc","modified":1693913556489},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/tag.js","hash":"975e79e73d2503a33dbc63655b948100cc46d44f","modified":1693913556496},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/symbols-count-time.js","hash":"d1a81e31b2988edcdf4b4761cec7326a980f097a","modified":1693913556495},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/mapper.js","hash":"7a99508d910321b90b4afa0df02ad90f62336901","modified":1693913556477},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/toc.js","hash":"5c7348c550ef7f164d492847801a360cdefc60a2","modified":1693913556501},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/utils.js","hash":"93ff75f0e35a1dc40d5406cc097f5988dd820600","modified":1693913556502},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/helpers/truncate-html.js","hash":"49d4832af027eabe5b8383a24e66dceae761533e","modified":1693913556501},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/injector/index.js","hash":"7ca562ea3af3068ee925b5a8afdce0eaa1e15e64","modified":1693913556473},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/search.js","hash":"a2a636e1df76efdcaca37226b490afa539ce766b","modified":1693913556492},{"_id":"node_modules/hexo-theme-aurora/scripts/lib/generators/site.js","hash":"b5f5ce813b4b0b322eceb11b036dc65201604256","modified":1693913556493},{"_id":"node_modules/hexo-theme-aurora/source/static/css/about.32dfa3b0.css","hash":"614ef7c4e52877c76ffddb26192bf8fffddcb8d8","modified":1693913555894},{"_id":"node_modules/hexo-theme-aurora/source/static/css/404.1a6cd5bd.css","hash":"a7a4d83756520d8f6c410ac0ffe9a45d63868113","modified":1693913555854},{"_id":"node_modules/hexo-theme-aurora/source/static/css/archives.c0d49bd5.css","hash":"c56213315c57254d0a6e6301ef24c2186fef4d2b","modified":1693913556079},{"_id":"node_modules/hexo-theme-aurora/source/static/css/chunk-libs.eebac533.css","hash":"41226b6c29aadcc6190fe7c2c4c37464855b8453","modified":1693913556112},{"_id":"node_modules/hexo-theme-aurora/source/static/css/categories.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1693913556099},{"_id":"node_modules/hexo-theme-aurora/source/static/css/post.9f951a60.css","hash":"8e360582d745d6483fdfc18c46f75897b44721a6","modified":1693913556140},{"_id":"node_modules/hexo-theme-aurora/source/static/css/page.749ad047.css","hash":"6fcf0e6f3c628954c5f8105791e0e7f3e6512da6","modified":1693913556126},{"_id":"node_modules/hexo-theme-aurora/source/static/css/result.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1693913556153},{"_id":"node_modules/hexo-theme-aurora/source/static/css/tags.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1693913556158},{"_id":"node_modules/hexo-theme-aurora/source/static/js/about.024aacd1.js","hash":"7ce2b3f7d232dd3b3930ac993bb841452e2cde89","modified":1693913556349},{"_id":"node_modules/hexo-theme-aurora/source/static/js/404.00d640a8.js","hash":"74f1da9e0f953e73e4fe1a6554433f56fdcdf54d","modified":1693913556344},{"_id":"node_modules/hexo-theme-aurora/source/static/js/categories.90aa5475.js","hash":"0dde3d731fc665962a4c330338a2c663c330be26","modified":1693913556423},{"_id":"node_modules/hexo-theme-aurora/source/static/js/archives.574ac664.js","hash":"fbb094fb4f7a01bffd6975aca27142935bfdca73","modified":1693913556422},{"_id":"node_modules/hexo-theme-aurora/source/static/js/post.cebfbaa4.js","hash":"53586f9dab5886a366e9397eb17088e74af5cde1","modified":1693913556486},{"_id":"node_modules/hexo-theme-aurora/source/static/js/page.a02618ad.js","hash":"db775fbfbaa1cf8bbf4cc4f2b0a869519d508e3a","modified":1693913556480},{"_id":"node_modules/hexo-theme-aurora/source/static/js/result.39470350.js","hash":"f6f5ab2ca7274dad169ec600a419d1a2aeb2347c","modified":1693913556491},{"_id":"node_modules/hexo-theme-aurora/source/static/js/tags.2ad613f5.js","hash":"4f49139e435788710115fc884dc26a5b1e0d4833","modified":1693913556498},{"_id":"node_modules/hexo-theme-aurora/source/static/img/default-cover.df7c128c.jpg","hash":"1934ace0c6f2397d15729f9b08cc4d42e45bf437","modified":1693913556331},{"_id":"node_modules/hexo-theme-aurora/source/static/css/app.0d31776f.css","hash":"43b43acd76bd8dc22f34cc49c7e026c45c3a5004","modified":1693913556050},{"_id":"node_modules/hexo-theme-aurora/source/static/js/chunk-libs.dc6146cd.js","hash":"534266637d09abf39278f4d3a21bd36728740105","modified":1693913556461},{"_id":"node_modules/hexo-theme-aurora/source/static/js/app.6d2c358d.js","hash":"e176c20c22ce36e38935f463977e9b89b281c715","modified":1693913556418},{"_id":"public/api/posts/1.json","hash":"614ef7ac985e922f78ef948ee3b61e46ac145844","modified":1693924631562},{"_id":"public/api/articles/MyNew.json","hash":"330e34c3224902216cb3bf3e141bb13ff47edb5c","modified":1693924631562},{"_id":"public/api/articles/bb.json","hash":"b89f1516a7d566ffddeaec952399cc98ac27ef40","modified":1693924631562},{"_id":"public/api/articles/AA.json","hash":"6fd8c0b2a6f595b0a8a41a7446c7c3780254eddd","modified":1693924631562},{"_id":"public/api/articles/vimconfig.json","hash":"4b693ea77ae7bcffbb9965d395e93abc4b5697e3","modified":1693924631562},{"_id":"public/api/articles/about.json","hash":"bdf230c7db69c1385a6df3c3f30aeb0664dc1b2a","modified":1693924631562},{"_id":"public/api/articles/HelloWorld.json","hash":"53b9bf553642518de352998892f981ce6f999460","modified":1693924631562},{"_id":"public/api/features.json","hash":"facb76a4bcdf6005bc0bca149ee5fbc233b66ab5","modified":1693924631562},{"_id":"public/api/authors/blog-author.json","hash":"fd18a31f9a9653bf1356b4ba6c766e3a94ecbebf","modified":1693924631562},{"_id":"public/api/site.json","hash":"f6b463692400ae4e2b8028b2fcda1403961f05f6","modified":1693924631562},{"_id":"public/api/categories.json","hash":"97d170e1550eee4afc0af065b78cda302a97674c","modified":1693924631562},{"_id":"public/api/tags.json","hash":"ee14d29f4341ecbaa023c97df7c1b41c7b726213","modified":1693924631562},{"_id":"public/api/tags/A.json","hash":"5bb3ef3e02390357df9f8630ce2c150509bd91eb","modified":1693924631562},{"_id":"public/api/tags/about.json","hash":"a14a72b3c65ed17da2ad5308b016e7ce16ceec0e","modified":1693924631562},{"_id":"public/api/tags/vim.json","hash":"238344e9a528e3aa981be0fa634262640d511557","modified":1693924631562},{"_id":"public/api/pages/tags/index.json","hash":"a14c5e8f03b95f9d14544e10ff1ee059b7388e0f","modified":1693924631562},{"_id":"public/api/pages/about/index.json","hash":"4ec401e0dd76956adafea8c8c59ed49750233fc6","modified":1693924631562},{"_id":"public/api/pages/zss1/index.json","hash":"d125ab25eb264324f8562f9e2700837b68bbd0f4","modified":1693924631562},{"_id":"public/api/pages/zss2/index.json","hash":"72c26d8d719754777a3a33800fd8b72e3bed02b3","modified":1693924631562},{"_id":"public/api/pages/zss3/index.json","hash":"4c07059dd520527a33bca7036d0e146c911c904b","modified":1693924631562},{"_id":"public/api/statistic.json","hash":"eb656f34878977718281dedea10d007e526c3e5c","modified":1693924631562},{"_id":"public/api/search.json","hash":"2ad29b462e2a58cc6c282773fcfcfe9574157294","modified":1693924631562},{"_id":"public/post/MyNew.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/post/bb.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/post/AA.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/post/vimconfig.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/post/about.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/post/HelloWorld.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/index.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/tags/index.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/archives/index.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/page/tags/index.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/page/about/index.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/page/zss1/index.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/page/zss2/index.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/page/zss3/index.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/tags/search/index.html","hash":"e018d144ddbb301acc508a3fa58cda7eee586e31","modified":1693924631562},{"_id":"public/icons/favicon-16x16.png","hash":"849cad2a5ae49fa54c20372f7a21ae95192bafcf","modified":1693924631562},{"_id":"public/favicon.ico","hash":"c39d3ad80489cffed0d3df82c8cb05a049ab39a3","modified":1693924631562},{"_id":"public/icons/favicon-32x32.png","hash":"9dbabf6f4d825da99dcb2e91583755ae8d3b3ff4","modified":1693924631562},{"_id":"public/static/img/default-cover.df7c128c.jpg","hash":"1934ace0c6f2397d15729f9b08cc4d42e45bf437","modified":1693924631562},{"_id":"public/static/css/about.32dfa3b0.css","hash":"614ef7c4e52877c76ffddb26192bf8fffddcb8d8","modified":1693924631562},{"_id":"public/static/css/404.1a6cd5bd.css","hash":"a7a4d83756520d8f6c410ac0ffe9a45d63868113","modified":1693924631562},{"_id":"public/static/css/chunk-libs.eebac533.css","hash":"41226b6c29aadcc6190fe7c2c4c37464855b8453","modified":1693924631562},{"_id":"public/static/css/categories.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1693924631562},{"_id":"public/static/css/archives.c0d49bd5.css","hash":"c56213315c57254d0a6e6301ef24c2186fef4d2b","modified":1693924631562},{"_id":"public/static/css/post.9f951a60.css","hash":"8e360582d745d6483fdfc18c46f75897b44721a6","modified":1693924631562},{"_id":"public/static/css/page.749ad047.css","hash":"6fcf0e6f3c628954c5f8105791e0e7f3e6512da6","modified":1693924631562},{"_id":"public/static/css/result.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1693924631562},{"_id":"public/static/css/tags.10e2be12.css","hash":"e0f686c442936311dd85f11a06f3937007758b90","modified":1693924631562},{"_id":"public/static/js/about.024aacd1.js","hash":"7ce2b3f7d232dd3b3930ac993bb841452e2cde89","modified":1693924631562},{"_id":"public/static/js/404.00d640a8.js","hash":"74f1da9e0f953e73e4fe1a6554433f56fdcdf54d","modified":1693924631562},{"_id":"public/static/js/archives.574ac664.js","hash":"fbb094fb4f7a01bffd6975aca27142935bfdca73","modified":1693924631562},{"_id":"public/static/js/categories.90aa5475.js","hash":"0dde3d731fc665962a4c330338a2c663c330be26","modified":1693924631562},{"_id":"public/static/js/page.a02618ad.js","hash":"db775fbfbaa1cf8bbf4cc4f2b0a869519d508e3a","modified":1693924631562},{"_id":"public/static/js/post.cebfbaa4.js","hash":"53586f9dab5886a366e9397eb17088e74af5cde1","modified":1693924631562},{"_id":"public/static/js/result.39470350.js","hash":"f6f5ab2ca7274dad169ec600a419d1a2aeb2347c","modified":1693924631562},{"_id":"public/static/js/tags.2ad613f5.js","hash":"4f49139e435788710115fc884dc26a5b1e0d4833","modified":1693924631562},{"_id":"public/static/css/app.0d31776f.css","hash":"43b43acd76bd8dc22f34cc49c7e026c45c3a5004","modified":1693924631562},{"_id":"public/static/js/app.6d2c358d.js","hash":"e176c20c22ce36e38935f463977e9b89b281c715","modified":1693924631562},{"_id":"public/static/js/chunk-libs.dc6146cd.js","hash":"534266637d09abf39278f4d3a21bd36728740105","modified":1693924631562}],"Category":[],"Data":[],"Page":[{"title":"All tags","type":"tags","date":"2023-05-11T09:19:07.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: All tags\ntype: \"tags\"\ndate: 2023-05-11 17:19:07\n---\n","updated":"2023-09-05T11:27:27.912Z","path":"tags/index.html","comments":1,"layout":"page","_id":"clm6ezn420000g894ckse0vse","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2023-05-11T13:45:54.000Z","_content":"\nasdfasdfasdf\nasdf\nas\ndf\nasd\nf\nasdf\nas\ndf\nasd\nf\nasdf\nas\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-05-11 21:45:54\n---\n\nasdfasdfasdf\nasdf\nas\ndf\nasd\nf\nasdf\nas\ndf\nasd\nf\nasdf\nas\n","updated":"2023-09-05T11:27:27.912Z","path":"about/index.html","comments":1,"layout":"page","_id":"clm6ezn450001g8941s0ibv96","content":"<p>asdfasdfasdf<br>asdf<br>as<br>df<br>asd<br>f<br>asdf<br>as<br>df<br>asd<br>f<br>asdf<br>as</p>\n","site":{"data":{}},"excerpt":"","more":"<p>asdfasdfasdf<br>asdf<br>as<br>df<br>asd<br>f<br>asdf<br>as<br>df<br>asd<br>f<br>asdf<br>as</p>\n"},{"title":"zss1","date":"2023-06-01T06:57:09.000Z","_content":"","source":"zss1/index.md","raw":"---\ntitle: zss1\ndate: 2023-06-01 14:57:09\n---\n","updated":"2023-09-05T11:27:27.912Z","path":"zss1/index.html","comments":1,"layout":"page","_id":"clm6ezn450002g89407mrbdaq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"zss2","date":"2023-06-01T06:57:12.000Z","_content":"","source":"zss2/index.md","raw":"---\ntitle: zss2\ndate: 2023-06-01 14:57:12\n---\n","updated":"2023-09-05T11:27:27.912Z","path":"zss2/index.html","comments":1,"layout":"page","_id":"clm6ezn460003g8944i5zhz36","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"zss3","date":"2023-06-01T06:57:15.000Z","_content":"","source":"zss3/index.md","raw":"---\ntitle: zss3\ndate: 2023-06-01 14:57:15\n---\n","updated":"2023-09-05T11:27:27.912Z","path":"zss3/index.html","comments":1,"layout":"page","_id":"clm6ezn470004g8944fvw3dlf","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"HelloWorld","date":"2023-05-11T09:17:25.000Z","_content":"\n\n# HELLO WORLD  \n\n\n- https://www.youtube.com/watch?v=dq_mBJj1sjg\n\n- 间奏部分参照\nhttps://www.bilibili.com/video/BV1TQ4y1d7J1/?spm_id_from=333.337.search-card.all.click&vd_source=c3c2e2f79b08e119e00c69923ed95cbb\n","source":"_posts/HelloWorld.md","raw":"---\ntitle: HelloWorld\ndate: 2023-05-11 17:17:25\ntags: A\n---\n\n\n# HELLO WORLD  \n\n\n- https://www.youtube.com/watch?v=dq_mBJj1sjg\n\n- 间奏部分参照\nhttps://www.bilibili.com/video/BV1TQ4y1d7J1/?spm_id_from=333.337.search-card.all.click&vd_source=c3c2e2f79b08e119e00c69923ed95cbb\n","slug":"HelloWorld","published":1,"updated":"2023-09-05T11:27:27.911Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm6ezn4c0005g8948pde0p9q","content":"<h1 id=\"HELLO-WORLD\"><a href=\"#HELLO-WORLD\" class=\"headerlink\" title=\"HELLO WORLD\"></a>HELLO WORLD</h1><ul>\n<li><p><a href=\"https://www.youtube.com/watch?v=dq_mBJj1sjg\">https://www.youtube.com/watch?v=dq_mBJj1sjg</a></p>\n</li>\n<li><p>间奏部分参照<br><a href=\"https://www.bilibili.com/video/BV1TQ4y1d7J1/?spm_id_from=333.337.search-card.all.click&vd_source=c3c2e2f79b08e119e00c69923ed95cbb\">https://www.bilibili.com/video/BV1TQ4y1d7J1/?spm_id_from=333.337.search-card.all.click&amp;vd_source=c3c2e2f79b08e119e00c69923ed95cbb</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"HELLO-WORLD\"><a href=\"#HELLO-WORLD\" class=\"headerlink\" title=\"HELLO WORLD\"></a>HELLO WORLD</h1><ul>\n<li><p><a href=\"https://www.youtube.com/watch?v=dq_mBJj1sjg\">https://www.youtube.com/watch?v=dq_mBJj1sjg</a></p>\n</li>\n<li><p>间奏部分参照<br><a href=\"https://www.bilibili.com/video/BV1TQ4y1d7J1/?spm_id_from=333.337.search-card.all.click&vd_source=c3c2e2f79b08e119e00c69923ed95cbb\">https://www.bilibili.com/video/BV1TQ4y1d7J1/?spm_id_from=333.337.search-card.all.click&amp;vd_source=c3c2e2f79b08e119e00c69923ed95cbb</a></p>\n</li>\n</ul>\n"},{"title":"MyNew","date":"2023-09-05T14:36:11.000Z","_content":"\n\n## asdfasdfasdf \n\n\n\nasdfasdfasf\nasdfasdfa\nasdfasdfa\n\n\n## basdfasddfggsh\n\nafdgasdf\nasdf\nasdf\nas\n","source":"_posts/MyNew.md","raw":"---\ntitle: MyNew\ndate: 2023-09-05 22:36:11\ntags:\n---\n\n\n## asdfasdfasdf \n\n\n\nasdfasdfasf\nasdfasdfa\nasdfasdfa\n\n\n## basdfasddfggsh\n\nafdgasdf\nasdf\nasdf\nas\n","slug":"MyNew","published":1,"updated":"2023-09-05T14:36:44.758Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm6ezn4h0006g8949nzwaixu","content":"<h2 id=\"asdfasdfasdf\"><a href=\"#asdfasdfasdf\" class=\"headerlink\" title=\"asdfasdfasdf\"></a>asdfasdfasdf</h2><p>asdfasdfasf<br>asdfasdfa<br>asdfasdfa</p>\n<h2 id=\"basdfasddfggsh\"><a href=\"#basdfasddfggsh\" class=\"headerlink\" title=\"basdfasddfggsh\"></a>basdfasddfggsh</h2><p>afdgasdf<br>asdf<br>asdf<br>as</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"asdfasdfasdf\"><a href=\"#asdfasdfasdf\" class=\"headerlink\" title=\"asdfasdfasdf\"></a>asdfasdfasdf</h2><p>asdfasdfasf<br>asdfasdfa<br>asdfasdfa</p>\n<h2 id=\"basdfasddfggsh\"><a href=\"#basdfasddfggsh\" class=\"headerlink\" title=\"basdfasddfggsh\"></a>basdfasddfggsh</h2><p>afdgasdf<br>asdf<br>asdf<br>as</p>\n"},{"title":"bb","date":"2023-09-05T14:33:07.000Z","_content":"","source":"_posts/bb.md","raw":"---\ntitle: bb\ndate: 2023-09-05 22:33:07\ntags:\n---\n","slug":"bb","published":1,"updated":"2023-09-05T14:33:07.641Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm6ezn4k0008g8948rfz302u","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2023-05-11T13:42:23.000Z","_content":"\n# ABOUT ME\n\n## 111 \n\n** I am looking for a remote, part-time data warehouse development job! **\n","source":"_posts/about.md","raw":"---\ntitle: about\ndate: 2023-05-11 21:42:23\ntags: about\n---\n\n# ABOUT ME\n\n## 111 \n\n** I am looking for a remote, part-time data warehouse development job! **\n","slug":"about","published":1,"updated":"2023-09-05T11:27:27.911Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm6ezn4l0009g894g5ww0qj1","content":"<h1 id=\"ABOUT-ME\"><a href=\"#ABOUT-ME\" class=\"headerlink\" title=\"ABOUT ME\"></a>ABOUT ME</h1><h2 id=\"111\"><a href=\"#111\" class=\"headerlink\" title=\"111\"></a>111</h2><p>** I am looking for a remote, part-time data warehouse development job! **</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ABOUT-ME\"><a href=\"#ABOUT-ME\" class=\"headerlink\" title=\"ABOUT ME\"></a>ABOUT ME</h1><h2 id=\"111\"><a href=\"#111\" class=\"headerlink\" title=\"111\"></a>111</h2><p>** I am looking for a remote, part-time data warehouse development job! **</p>\n"},{"title":"vimconfig","date":"2023-06-06T06:57:14.000Z","_content":"\n# MY CONFIG FOR SPACEVIM\n\n## BASIC CONFIG \n```\n#=============================================================================\n# basic.toml --- basic configuration example for SpaceVim\n# Copyright (c) 2016-2023 Wang Shidong & Contributors\n# Author: Wang Shidong < wsdjeg@outlook.com >\n# URL: https://spacevim.org\n# License: GPLv3\n#=============================================================================\n\n# All SpaceVim option below [option] section\n[options]\n    # set spacevim theme. by default colorscheme layer is not loaded,\n    # if you want to use more colorscheme, please load the colorscheme\n    # layer\n    colorscheme = \"gruvbox\"\n\t\tcolorscheme_bg = \"dark\"\n    # Disable guicolors in basic mode, many terminal do not support 24bit\n    # true colors\n    enable_guicolors = false\n    # Disable statusline separator, if you want to use other value, please\n    # install nerd fonts\n    # statusline_separator = \"nil\"\n    # statusline_iseparator = \"bar\"\n    # buffer_index_type = 4\n    # windows_index_type = 3\n    enable_tabline_filetype_icon = false\n    enable_statusline_mode = false\n    statusline_unicode = false\n    # Enable vim compatible mode, avoid changing origin vim key bindings\n    vimcompatible = true\n\n\n[options]\n    bootstrap_before = \"myspacevim#before\"\n    bootstrap_after  = \"myspacevim#after\"\n\n\n[[custom_plugins]]\nrepo='wellle/targets.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='terryma/vim-expand-region'\nmerged=false\n\n[[custom_plugins]]\nrepo='tomtom/tlib_vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='mattn/webapi-vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='tyru/open-browser.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='mg979/vim-visual-multi'\nmerged=false\n\n[[custom_plugins]]\nrepo='tpope/vim-repeat'\nmerged=false\n\n[[custom_plugins]]\nrepo='airblade/vim-gitgutter'\nmerged=false\n\n[[custom_plugins]]\nrepo='scrooloose/nerdcommenter'\nmerged=false\n\n[[custom_plugins]]\nrepo='tpope/vim-fugitive'\nmerged=false\n\n[[custom_plugins]]\nrepo='szw/vim-maximizer'\nmerged=false\n\n[[custom_plugins]]\nrepo='mattn/emmet-vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='vim-scripts/Mark'\nmerged=false\n\n[[custom_plugins]]\nrepo='yegappan/mru'\nmerged=false\n\n[[custom_plugins]]\nrepo='junegunn/vim-easy-align'\nmerged=false\n\n[[custom_plugins]]\nrepo='j5shi/SearchComplete'\nmerged=false\n\n[[custom_plugins]]\nrepo='vim-scripts/CmdlineComplete'\nmerged=false\n\n[[custom_plugins]]\nrepo='jiangmiao/auto-pairs'\nmerged=false\n\n[[custom_plugins]]\nrepo='MattesGroeger/vim-bookmarks'\nmerged=false\n\n[[custom_plugins]]\nrepo= 'autowitch/hive.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='github/copilot.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='skywind3000/asyncrun.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo=\"XadillaX/json-formatter.vim\"\nmerged=false\n\n\n[[custom_plugins]]\nrepo=\"godlygeek/tabular\"\nmerged=false\n\n[[custom_plugins]]\nrepo=\"vim-scripts/matchit.zip\"\nmerged=false\n\n[[custom_plugins]]\nrepo='tbodt/deoplete-tabnine'\nmerged=false\n\n[[custom_plugins]]\nrepo='wellle/tmux-complete.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='jrozner/vim-antlr'\nmerged=false\n\n[[custom_plugins]]\nrepo='MattesGroeger/vim-bookmarks'\nmerged=false\n\n[[custom_plugins]]\nrepo='gennaro-tedesco/nvim-peekup'\nmerged=false\n\n[[custom_plugins]]\nrepo='tpope/vim-speeddating'\nmerged=false\n\n\n[[custom_plugins]]\nrepo='easymotion/vim-easymotion'\nmerged=false\n\n[[custom_plugins]]\nrepo='psf/black'\nmerged=false\n\n[[custom_plugins]]\nrepo='lyokha/vim-xkbswitch'\nmerged=false\n\n[[custom_plugins]]\nrepo='liuchengxu/graphviz.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='psliwka/vim-smoothie'\nmerged=false\n\n[[custom_plugins]]\nrepo='rust-lang/rust.vim'\nmerged=false\n\n\n[[custom_plugins]]\nrepo='racer-rust/vim-racer'\nmerged=false\n\n\n[[custom_plugins]]\nrepo='pangloss/vim-javascript'\nmerged=false\n\n[[custom_plugins]]\nrepo='marko-cerovac/material.nvim'\nmerged=false\n\n[[custom_plugins]]\nrepo='integralist/vim-mypy'\nmerged=false\n\n[[custom_plugins]]\nrepo='leafgarland/typescript-vim'\nmerge=false\n\n[[custom_plugins]]\nrepo='ap/vim-css-color'\nmerge=false\n```\n\n\n## CUSTOM CONFIG \n```\nfunction! myspacevim#before() abort\n call SpaceVim#custom#SPCGroupName(['G'], '+TestGroup')\n call SpaceVim#custom#SPC('nore', ['G', 't'], 'echom 1', 'echomessage 1', 1)\n  \" let profile = SpaceVim#mapping#search#getprofile('rg')\n\" let default_opt = profile.default_opts + ['--no-ignore-vcs']\n\" call SpaceVim#mapping#search#profile({'rg' : {'default_opts' : default_opt}})\n\nset clipboard+=unnamed\n\"禁止生成临时文件\nset noswapfile\n\" 光标移动到buffer的顶部和底部时保持3行距离\nmap <leader><leader>h :MRU<CR> \n\nfunc! SqlToUpper()\n    %s/\\<select\\>\\|\\<from\\>\\|\\<as\\>\\|\\<where\\>\\|\\<if\\>\\|\\<not\\>\\|\\<group\\>\\|\\<by\\>\\|\\<left\\>\\|\\<right\\>\\|\\<join\\>\\|\\<outer\\>\\|\\<full\\>\\|\\<to_date\\>\\|\\<from_unixtime\\>\\|\\<unixtime_stamp\\>\\|\\<when\\>\\|\\<case\\>\\|\\<then\\>\\|\\<max\\>\\|\\<min\\>\\|\\<avg\\>\\|\\<end\\>\\|\\<else\\>\\|\\<and\\>\\|\\<or\\>\\|\\<on\\>\\|\\<count\\>\\|\\<sum\\>|\\<use\\>|\\<limit\\>/\\U&/g\n    %s/\\<add\\>\\|\\<admin\\>\\|\\<after\\>\\|\\<analyze\\>\\|\\<archive\\>\\|\\<asc\\>\\|\\<before\\>\\|\\<bucket\\>\\|\\<buckets\\>\\|\\<cascade\\>\\|\\<change\\>\\|\\<cluster\\>\\|\\<clustered\\>\\|\\<clusterstatus\\>\\|\\<collection\\>\\|\\<columns\\>\\|\\<comment\\>\\|\\<compact\\>\\|\\<compactions\\>\\|\\<compute\\>\\|\\<concatenate\\>\\|\\<continue\\>\\|\\<data\\>\\|\\<databases\\>\\|\\<datetime\\>\\|\\<day\\>\\|\\<dbproperties\\>\\|\\<deferred\\>\\|\\<defined\\>\\|\\<delimited\\>\\|\\<dependency\\>\\|\\<desc\\>\\|\\<directories\\>\\|\\<directory\\>\\|\\<disable\\>\\|\\<distribute\\>\\|\\<elem_type\\>\\|\\<enable\\>\\|\\<escaped\\>\\|\\<exclusive\\>\\|\\<explain\\>\\|\\<export\\>\\|\\<fields\\>\\|\\<file\\>\\|\\<fileformat\\>\\|\\<first\\>\\|\\<format\\>\\|\\<formatted\\>\\|\\<functions\\>\\|\\<hold_ddltime\\>\\|\\<idxproperties\\>\\|\\<ignore\\>\\|\\<index\\>\\|\\<indexes\\>\\|\\<inpath\\>\\|\\<inputdriver\\>\\|\\<inputformat\\>\\|\\<items\\>\\|\\<jar\\>\\|\\<keys\\>\\|\\<key_type\\>\\|\\<limit\\>\\|\\<lines\\>\\|\\<load\\>\\|\\<location\\>\\|\\<lock\\>\\|\\<locks\\>\\|\\<logical\\>\\|\\<long\\>\\|\\<mapjoin\\>\\|\\<materialized\\>\\|\\<metadata\\>\\|\\<minus\\>\\|\\<minute\\>\\|\\<month\\>\\|\\<msck\\>\\|\\<noscan\\>\\|\\<no_drop\\>\\|\\<offline\\>\\|\\<option\\>\\|\\<outputdriver\\>\\|\\<outputformat\\>\\|\\<overwrite\\>\\|\\<owner\\>\\|\\<partitioned\\>\\|\\<partitions\\>\\|\\<plus\\>\\|\\<pretty\\>\\|\\<principals\\>\\|\\<protection\\>\\|\\<purge\\>\\|\\<read\\>\\|\\<readonly\\>\\|\\<rebuild\\>\\|\\<recordreader\\>\\|\\<recordwriter\\>\\|\\<regexp\\>\\|\\<reload\\>\\|\\<rename\\>\\|\\<repair\\>\\|\\<replace\\>\\|\\<replication\\>\\|\\<restrict\\>\\|\\<rewrite\\>\\|\\<rlike\\>\\|\\<role\\>\\|\\<roles\\>\\|\\<schema\\>\\|\\<schemas\\>\\|\\<second\\>\\|\\<semi\\>\\|\\<serde\\>\\|\\<serdeproperties\\>\\|\\<server\\>\\|\\<sets\\>\\|\\<shared\\>\\|\\<show\\>\\|\\<show_database\\>\\|\\<skewed\\>\\|\\<sort\\>\\|\\<sorted\\>\\|\\<ssl\\>\\|\\<statistics\\>\\|\\<stored\\>\\|\\<streamtable\\>\\|\\<string\\>\\|\\<struct\\>\\|\\<tables\\>\\|\\<tblproperties\\>\\|\\<temporary\\>\\|\\<terminated\\>\\|\\<tinyint\\>\\|\\<touch\\>\\|\\<transactions\\>\\|\\<unarchive\\>\\|\\<undo\\>\\|\\<uniontype\\>\\|\\<unlock\\>\\|\\<unset\\>\\|\\<unsigned\\>\\|\\<uri\\>\\|\\<use\\>\\|\\<utc\\>\\|\\<utctimestamp\\>\\|\\<value_type\\>\\|\\<view\\>\\|\\<while\\>\\|\\<year\\>\\<all\\>\\|\\<alter\\>\\|\\<and\\>\\|\\<array\\>\\|\\<as\\>\\|\\<authorization\\>\\|\\<between\\>\\|\\<bigint\\>\\|\\<binary\\>\\|\\<boolean\\>\\|\\<both\\>\\|\\<by\\>\\|\\<case\\>\\|\\<cast\\>\\|\\<char\\>\\|\\<column\\>\\|\\<conf\\>\\|\\<create\\>\\|\\<cross\\>\\|\\<cube\\>\\|\\<current\\>\\|\\<current_date\\>\\|\\<current_timestamp\\>\\|\\<cursor\\>\\|\\<database\\>\\|\\<decimal\\>\\|\\<delete\\>\\|\\<describe\\>\\|\\<distinct\\>\\|\\<double\\>\\|\\<drop\\>\\|\\<else\\>\\|\\<end\\>\\|\\<exchange\\>\\|\\<exists\\>\\|\\<extended\\>\\|\\<external\\>\\|\\<fetch\\>\\|\\<float\\>\\|\\<following\\>\\|\\<for\\>\\|\\<from\\>\\|\\<full\\>\\|\\<function\\>\\|\\<grant\\>\\|\\<group\\>\\|\\<grouping\\>\\|\\<having\\>\\|\\<if\\>\\|\\<import\\>\\|\\<in\\>\\|\\<inner\\>\\|\\<insert\\>\\|\\<int\\>\\|\\<intersect\\>\\|\\<interval\\>\\|\\<into\\>\\|\\<is\\>\\|\\<join\\>\\|\\<lateral\\>\\|\\<left\\>\\|\\<less\\>\\|\\<like\\>\\|\\<local\\>\\|\\<macro\\>\\|\\<map\\>\\|\\<more\\>\\|\\<not\\>\\|\\<null\\>\\|\\<of\\>\\|\\<on\\>\\|\\<or\\>\\|\\<order\\>\\|\\<out\\>\\|\\<outer\\>\\|\\<over\\>\\|\\<partialscan\\>\\|\\<partition\\>\\|\\<percent\\>\\|\\<preceding\\>\\|\\<preserve\\>\\|\\<procedure\\>\\|\\<range\\>\\|\\<reads\\>\\|\\<reduce\\>\\|\\<revoke\\>\\|\\<right\\>\\|\\<rollup\\>\\|\\<row\\>\\|\\<rows\\>\\|\\<select\\>\\|\\<set\\>\\|\\<smallint\\>\\|\\<table\\>\\|\\<tablesample\\>\\|\\<then\\>\\|\\<timestamp\\>\\|\\<to\\>\\|\\<transform\\>\\|\\<trigger\\>\\|\\<truncate\\>\\|\\<unbounded\\>\\|\\<union\\>\\|\\<uniquejoin\\>\\|\\<update\\>\\|\\<user\\>\\|\\<using\\>\\|\\<utc_tmestamp\\>\\|\\<values\\>\\|\\<varchar\\>\\|\\<when\\>\\|\\<where\\>\\|\\<window\\>\\|\\<with\\>/\\U&/g\nendfunc\n\naugroup black_on_save\n  autocmd!\n  autocmd BufWritePre *.py Black\naugroup end\n\nlet g:XkbSwitchEnabled = 1\nmap <leader>ma :ma \nxmap ga <Plug>(EasyAlign)\nnmap ga <Plug>(EasyAlign)\n\n\" fun! DeleteAllBuffersInWindow()\n    \" let s:curWinNr = winnr()\n    \" if winbufnr(s:curWinNr) == 1\n        \" ret\n    \" endif\n    \" let s:curBufNr = bufnr(\"%\")\n    \" exe \"bn\"\n    \" let s:nextBufNr = bufnr(\"%\")\n    \" while s:nextBufNr != s:curBufNr\n        \" exe \"bn\"\n        \" exe \"bdel \".s:nextBufNr\n        \" let s:nextBufNr = bufnr(\"%\")\n    \" endwhile\n\" endfun\n\n\" map <leader><leader>bda     :call DeleteAllBuffersInWindow()\nmap <leader><leader>- :ChooseWin<CR>\nlet g:choosewin_overlay_enable = 1\n\n\nmap <leader><leader>f :!black %<CR>\n\n\" map <leader><leader>s <Plug>(easymotion-s)\n\" map <leader><leader>f <Plug>(easymotion-f)\nnmap <Leader>; <Plug>(easymotion-next)\nnmap <Leader>, <Plug>(easymotion-prev)\n\" map <Leader><leader> <Plug>(easymotion-prefix)\n\" nmap gw        :InteractiveWindow<CR>\n\" nmap <leader>w :InteractiveWindow<CR>\nnmap ]h <Plug>(GitGutterNextHunk)\nnmap [h <Plug>(GitGutterPrevHunk)\n\nhi   MarkWord1    ctermbg=Cyan           ctermfg=Black    guibg=#FFDAB9 guifg=Black\nhi   MarkWord2    ctermbg=Green          ctermfg=Black    guibg=#2F4F4F guifg=Black\nhi   MarkWord3    ctermbg=Yellow         ctermfg=Black    guibg=#191970 guifg=Black\nhi   MarkWord4    ctermbg=Red            ctermfg=Black    guibg=#40E0D0 guifg=Black\nhi   MarkWord5    ctermbg=Magenta        ctermfg=Black    guibg=#00FF00 guifg=Black\nhi   MarkWord6    ctermbg=Blue           ctermfg=Black    guibg=#FFFF00 guifg=Black\nhi   MarkWord7    ctermbg=Brown          ctermfg=Black    guibg=#D2691E guifg=Black\nhi   MarkWord8    ctermbg=LightCyan      ctermfg=Red      guibg=#FF0000 guifg=Black\nhi   MarkWord9    ctermbg=LightGreen     ctermfg=Red      guibg=#9400D3 guifg=Black\nhi   MarkWord10   ctermbg=LightYellow    ctermfg=Red      guibg=#CDB38B guifg=Black\nhi   MarkWord11   ctermbg=LightRed       ctermfg=Red      guibg=#27408B guifg=Black\nhi   MarkWord12   ctermbg=LightMagenta   ctermfg=Red      guibg=#E0FFFF guifg=Black\nhi   MarkWord13   ctermbg=LightBlue      ctermfg=Red      guibg=#00CD00 guifg=Black\nhi   MarkWord14   ctermbg=DarkBlue       ctermfg=Blue     guibg=#FFEC8B guifg=Black\nhi   MarkWord15   ctermbg=DarkGreen      ctermfg=Blue     guibg=#FFD700 guifg=Black\nhi   MarkWord16   ctermbg=DarkCyan       ctermfg=Blue     guibg=#8B658B guifg=Black\nhi   MarkWord17   ctermbg=DarkRed        ctermfg=Blue     guibg=#8B3A3A guifg=Black\nhi   MarkWord18   ctermbg=DarkMagenta    ctermfg=Blue     guibg=#FF7F24 guifg=Black\nhi   MarkWord19   ctermbg=DarkYellow     ctermfg=Blue     guibg=#CD2626 guifg=Black\nhi   MarkWord20   ctermbg=DarkGray       ctermfg=Blue     guibg=#FF7F00 guifg=Black\n\n\nnoremap <leader><leader>ff :<C-U><C-R>=printf(\"Leaderf file %s\", \"\")<CR><CR>\nnoremap <leader><leader>fm :<C-U><C-R>=printf(\"Leaderf mru %s\", \"\")<CR><CR>\nnoremap <leader><leader>fh :Leaderf cmdHistory <CR>\nnoremap <leader><leader>ft :<C-U><C-R>=printf(\"Leaderf tag %s\", \"\")<CR><CR>\nnoremap <leader><leader>fr :<C-U><C-R>=printf(\"Leaderf --recall\")<CR><CR>\nnoremap <C-G> :<C-U><C-R>=printf(\"Leaderf! rg --current-buffer -e %s \", expand(\"<cword>\"))<CR>\nnoremap <C-F> :<C-U><C-R>=printf(\"Leaderf! rg --stayOpen -g '*.hql' -e %s  \", expand(\"<cword>\"))<CR>\nnoremap  fr :<C-U>Leaderf! rg --recall<CR>\n\nlet g:Lf_GtagsAutoGenerate = 0\nlet g:Lf_Gtagslabel = 'native-pygments'\n\n\n:imap <C-J> <Plug>snipMateNextOrTrigger\n:smap <C-J> <Plug>snipMateNextOrTrigger\n\nlet g:netrw_nogx = 1 \" disable netrw's gx mapping.\n\nnmap <leader>gx :OpenBrowser <c-r><c-a><CR>\nvmap <leader>gx :OpenBrowser <c-r><c-a><CR>\n\nfunction! HandleURL()\n  let s:uri = matchstr(getline(\".\"), '[a-z]*:\\/\\/[^ >,;]*')\n  echo s:uri\n  if s:uri != \"\"\n    execute \"!open '\".s:uri.\"'\"\n  else\n    echo \"No URI found in line.\"\n  endif\nendfunction\nmap <leader><leader>u :call HandleURL()<cr>\n\nmap <leader><leader>gs :Gstatus<CR> \n\n\" https://data.bytedance.net/coral/datamap/detail/table_info/HiveTable/ea_rpt/{query}/block_info#group=default\n\" https://data.bytedance.net/coral/datamap/detail/data_preview/HiveTable/ea_rpt/{query}=default\nlet g:openbrowser_search_engines = {\n\\   'stg':'https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_stg/{query}',\n\\   'ods':'https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_ods/{query}',\n\\   'mds':'https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_mds/{query}',\n\\   'dm' :'https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_dm/{query}',\n\\   'rpt':'https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_rpt/{query}',\n\\   'coral': 'https://data.bytedance.net/coral/datamap_new/result?query={query}',\n\\   'trans': 'https://translate.google.com.hk/?sl=zh-CN&tl=en&text={query}&op=translate',\n\\   'manta':'https://data.bytedance.net/manta/monitor/hive?current=1&is_trigger=false&limit=10&monitor_state=all&monitor_types=all&projects=cn_532&query={query}&search_type=db_tb_name&type=cn',\n\\   'self':'https://data.bytedance.net/manta/rule/hive/sql?alarm_level=all&is_myself=false&is_trigger=false&monitor_state=all&monitor_types=all&query={query}&search_type=monitor_name&type=cn&projects=cn_532',\n\\   'manta_report':'https://data.bytedance.net/manta/datacheck/list?is_myself=false&query={query}&search_type=db_tb_name&type=cn'\n\\}\nnmap <leader>gg :OpenBrowserSearch <C-R>=expand(\"<cword>\")<CR><CR>\nnmap <leader>gt :OpenBrowserSearch -trans <C-R>=expand(\"<cword>\")<CR><CR>\n\nfunc! MantaReport()\n    let l:engine = expand(\"<cWORD>\")\n    echom l:engine\n    execute 'silent :OpenBrowserSearch -manta_report ' . l:engine\nendfunc\n\nfunc! Manta()\n    let l:engine = expand(\"<cword>\")\n    echom l:engine\n    execute 'silent :OpenBrowserSearch -manta ' . l:engine\n    \" execute 'silent :OpenBrowserSearch -self ' . l:engine\nendfunc\n\nfunc! EchoCword()\n    let l:cword= expand(\"<cword>\")\n    echom l:cword\nendfunc\n\nfunc! AccessCoral()\n\n    let l:engine = expand(\"<cword>\")\n    echom l:engine\n    \n    if( stridx(l:engine, \"stg\") == 0 ) \n        \" echom \"stg\"\n        execute 'silent :OpenBrowserSearch -stg ' . l:engine\n        execute 'silent :OpenBrowserSearch -uatstg ' . l:engine\n    elseif(stridx(l:engine, \"ods\") == 0)\n        \" echom \"ods\"\n        execute ':OpenBrowserSearch -ods ' . l:engine\n        execute ':OpenBrowserSearch -uatods ' . l:engine\n    elseif(stridx(l:engine, \"mds\") == 0)\n        \" echom \"mds\"\n        execute ':OpenBrowserSearch -mds ' . l:engine\n        execute ':OpenBrowserSearch -uatmds ' . l:engine\n    elseif(stridx(l:engine, \"dm\") == 0)\n        \" echom \"dm\"\n        execute ':OpenBrowserSearch -dm ' . l:engine\n        execute ':OpenBrowserSearch -uatdm ' . l:engine\n    elseif(stridx(l:engine, \"rpt\") == 0)\n        \" echom \"rpt\"\n        execute ':OpenBrowserSearch -rpt ' . l:engine\n        execute ':OpenBrowserSearch -uatrpt ' . l:engine\n    elseif(stridx(l:engine, \"http\") == 0)\n        execute ':OpenBrowser()' \n    else\n        echom \"coral\"\n        execute ':OpenBrowserSearch -coral ' . l:engine\n    endif\nendfunc\n\nlet g:Lf_NumberOfHighlight=1\n\n\n\nfunc! Findtable()\n    let l:table_name = expand(\"<cword>\")\n    echo l:table_name\n    execute ':/).*' . l:table_name\nendfunc\n\n\n\" don't show the help in normal mode\nlet g:Lf_HideHelp = 1\nlet g:Lf_UseCache = 0\nlet g:Lf_UseVersionControlTool = 0\nlet g:Lf_IgnoreCurrentBufferName = 1\n\" popup mode\n\" let g:Lf_WindowPosition = 'right'\n\"\nlet g:Lf_ShowDevIcons = 1\nlet g:Lf_WindowHeight = 0.2                               \nlet g:Lf_PreviewInPopup = 1\nlet g:Lf_StlSeparator = { 'left': \"\\ue0b0\", 'right': \"\\ue0b2\", 'font': \"DejaVu Sans Mono for Powerline\" }\nlet g:Lf_ShowRelativePath = 1\nlet g:Lf_PreviewResult = {\n        \\ 'File': 1,\n        \\ 'Buffer': 1,\n        \\ 'Mru': 1,\n        \\ 'Tag': 1,\n        \\ 'BufTag': 1,\n        \\ 'Function': 1,\n        \\ 'Line': 1,\n        \\ 'Colorscheme': 1,\n        \\ 'Rg': 1,\n        \\ 'Gtags': 1\n        \\}\n\nlet g:Lf_PreviewHorizontalPosition = 'right'                    \nlet g:Lf_ShortcutF ='<leader>w'\n\nmap = <Plug>(expand_region_expand)\nmap - <Plug>(expand_region_shrink)\nlet g:mwDefaultHighlightingPalette = 'maximum'\n\" nnoremap <silent><Leader>m m\n\n\" Plugin key-mappings.\n\" Note: It must be \"imap\" and \"smap\".  It uses <Plug> mappings.\nimap <C-k>     <Plug>(neosnippet_expand_or_jump)\nsmap <C-k>     <Plug>(neosnippet_expand_or_jump)\nxmap <C-k>     <Plug>(neosnippet_expand_target)\n\n\" SuperTab like snippets behavior.\n\" Note: It must be \"imap\" and \"smap\".  It uses <Plug> mappings.\n\"imap <expr><TAB>\n\" \\ pumvisible() ? \"\\<C-n>\" :\n\" \\ neosnippet#expandable_or_jumpable() ?\n\" \\    \"\\<Plug>(neosnippet_expand_or_jump)\" : \"\\<TAB>\"\nsmap <expr><TAB> neosnippet#expandable_or_jumpable() ?\n\\ \"\\<Plug>(neosnippet_expand_or_jump)\" : \"\\<TAB>\"\n\n\" For conceal markers.\nif has('conceal')\n  set conceallevel=2 concealcursor=niv\nendif\n\n\n\" Enable snipMate compatibility feature.\nlet g:neosnippet#enable_snipmate_compatibility = 1\n\n\" Tell Neosnippet about the other snippets\nlet g:neosnippet#snippets_directory='~/.vim_back/bundle/vim-snippets/snippets'\n\nimap <silent><script><expr> <C-J> copilot#Accept(\"\\<CR>\")\nlet g:copilot_no_tab_map = v:true\n\" for .hql files\nau BufNewFile,BufRead *.hql set filetype=hive expandtab\n\nau BufNewFile,BufRead *.hql set filetype=hive expandtab\n\nlet g:Lf_ShowRelativePath=1\nmap <leader>cc <plug>NERDCommenterToggle\n\nimap <silent><script><expr> <C-J> copilot#Accept(\"\\<CR>\")\nlet g:copilot_no_tab_map = v:true\n\n\n\"\n\" Help Vim recognize *.sbt and *.sc as Scala files\nau BufRead,BufNewFile *.sbt,*.sc set filetype=scala\n\n\" Used to expand decorations in worksheets\n\" nmap <Leader>ws <Plug>(coc-metals-expand-decoration)\n\"\" Toggle panel with Tree Views\n\"nnoremap <silent> <space>t :<C-u>CocCommand metals.tvp<CR>\n\"\" Toggle Tree View 'metalsPackages'\n\"nnoremap <silent> <space>tp :<C-u>CocCommand metals.tvp metalsPackages<CR>\n\"\" Toggle Tree View 'metalsCompile'\n\"nnoremap <silent> <space>tc :<C-u>CocCommand metals.tvp metalsCompile<CR>\n\"\" Toggle Tree View 'metalsBuild'\n\"nnoremap <silent> <space>tb :<C-u>CocCommand metals.tvp metalsBuild<CR>\n\"\" Reveal current current class (trait or object) in Tree View 'metalsPackages'\n\"nnoremap <silent> <space>tf :<C-u>CocCommand metals.revealInTreeView metalsPackages<CR>\n\n\n\n\n\" How to open the generated output file.\n\" If does not exist, graphviz.vim will automatically choose the right way depending on the platform.\nlet g:graphviz_viewer = 'open'\nlet g:graphviz_output_format = 'svg'\n\n\nmap <leader>gvs :GraphvizShow<CR>\nmap <leader>gvc :GraphvizCompile<CR>\nmap <leader>gvg :!dot -Tsvg % -o ~/Desktop/output.svg && open ~/Desktop/output.svg <CR>\nfunction! MyGraphViz()\n    :Graphviz!!\nendfunction\n\n\nif exists(\":Tabularize\")\n  nmap <Leader>a= :Tabularize /=<CR>\n  vmap <Leader>a= :Tabularize /=<CR>\n  nmap <Leader>a: :Tabularize /:\\zs<CR>\n  vmap <Leader>a: :Tabularize /:\\zs<CR>\nendif\n\ninoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a\n\nfunction! s:align()\n  let p = '^\\s*|\\s.*\\s|\\s*$'\n  if exists(':Tabularize') && getline('.') =~# '^\\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)\n    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))\n    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\\s*\\zs.*'))\n    Tabularize/|/l1\n    normal! 0\n    call search(repeat('[^|]*|',column).'\\s\\{-\\}'.repeat('.',position),'ce',line('.'))\n  endif\nendfunction\n\n\n\" let g:spacevim_project_auto_root=0\n\nlet g:spacevim_project_auto_root='current'\n\nnon_root = 'current'_create.py \" . l:db . \" \" . l:tb\nendfunction \n\nfunction! DoradoOpen()\n  let l:keyword= expand(\"<cWORD>\")\n  execute \":AsyncRun python ~/opt/tools/common_open.py \" . \" dorado_open \" . l:keyword\nendfunction \n\nfunction! DoradoIdOpen()\n  let l:keyword= expand(\"<cWORD>\")\n  execute \":AsyncRun python ~/opt/tools/common_open.py \" . \" dorado_id_open \" . l:keyword\nendfunction \n\nfunction! AllCoralOpen()\n\tlet l:keyword= expand(\"<cWORD>\")\n\t\" execute \":AsyncRun python ~/opt/tools/common_open.py \" \"coral_field\"   . \" \" . l:keyword\n\t\" execute \":AsyncRun python ~/opt/tools/common_open.py \" \"coral_block\"   . \" \" . l:keyword\n\t\" execute \":AsyncRun python ~/opt/tools/common_open.py \" \"coral_preview\" . \" \" . l:keyword\n\t\" execute \":AsyncRun python ~/opt/tools/common_open.py \" \"coral_produce\" . \" \" . l:keyword\n\texecute \"!python ~/opt/tools/common_open.py \" \"coral_field\"   . \" \" . l:keyword\n\texecute \"!python ~/opt/tools/common_open.py \" \"coral_block\"   . \" \" . l:keyword\n\texecute \"!python ~/opt/tools/common_open.py \" \"coral_preview\" . \" \" . l:keyword\n\texecute \":AsyncRun python ~/opt/tools/common_open.py \" \"coral_produce\" . \" \" . l:keyword\n    \" sleep 10\nendfunction \n\nfunction! DirectUrl()\n\texecute \":!python ~/opt/tools/multi_open.py \" . @z\nendfunction \n\nfunction! VisualSelection()\n    if mode()==\"v\"\n        let [line_start, column_start] = getpos(\"v\")[1:2]\n        let [line_end, column_end] = getpos(\".\")[1:2]\n    else\n        let [line_start, column_start] = getpos(\"'<\")[1:2]\n        let [line_end, column_end] = getpos(\"'>\")[1:2]\n    end\n\n    if (line2byte(line_start)+column_start) > (line2byte(line_end)+column_end)\n        let [line_start, column_start, line_end, column_end] =\n        \\   [line_end, column_end, line_start, column_start]\n    end\n    let lines = getline(line_start, line_end)\n    if len(lines) == 0\n            return ['']\n    endif\n    if &selection ==# \"exclusive\"\n        let column_end -= 1 \"Needed to remove the last character to make it match the visual selction\n    endif\n    if visualmode() ==# \"\\<C-V>\"\n        for idx in range(len(lines))\n            let lines[idx] = lines[idx][: column_end - 1]\n            let lines[idx] = lines[idx][column_start - 1:]\n        endfor\n    else\n        let lines[-1] = lines[-1][: column_end - 1]\n        let lines[ 0] = lines[ 0][column_start - 1:]\n    endif\n\n\tlet ret = join(lines, \",\")\n    \" echo ret\n    \" echom ret\n\tcall setreg('z', ret)\n    \" execute \":!python ~/opt/tools/multi_open.py \" . @z\n\treturn ret\nendfunction\n\nfunction! GetDdl() abort\n  let l:dbtb=expand(\"<cWORD>\")\n  echo l:dbtb\n  execute \":AsyncRun python ~/opt/tools/ddl.py \" . l:dbtb \nendfunction\n\nfunction! GetTask() abort\n  let l:dbtb=expand(\"<cWORD>\")\n  echo l:dbtb\n  execute \":AsyncRun python ~/opt/tools/task.py \" . l:dbtb \nendfunction\n\nmap <leader><leader>m :MaximizerToggle <CR>\nmap <F10> :call MyGraphViz()<CR>\nmap <F2> :MaximizerToggle<CR>\nmap <F4> :call Findtable()<CR>\nmap <F5> :call TritonAuthApply()<CR>\nmap <F6> :call SqlToUpper()<CR>\nmap <F7> :call PlantumlOpen()<CR>\nmap <F8> :call Manta()<CR>\nmap <F9> :call AccessCoral()<CR>\nmap <leader>ca :call AllCoralOpen()<CR>\nmap <leader>dh :call SubStitute()<CR>\nmap <leader>do :call DoradoOpen()<CR>\nmap <leader>dp :call DataPreview()<CR>\nmap <leader>dt :call DoradoIdOpen()<CR>\nmap <leader>mc :call MantaDataExploreCreate()<CR>\nmap <leader>mp :call MantaReport()<CR>\n\nfunction! MultiOpenFunc()\n\n    let l:content = VisualSelection()\n    echom l:content \n    \" sleep 5\n    execute \":!python ~/opt/tools/multi_open.py \" . l:content\n\nendfunction \nfunction! CoralBatchOp(func_select)\n    let l:content = VisualSelection()\n\n    echom l:content\n    echom \"===================================\"\n    echom a:func_select\n    echom \"===================================\"\n\n    if a:func_select ==# \"dorado_open_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"dorado_open_batch\" . \" \" .  l:content\n    elseif a:func_select ==# \"dorado_id_open_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"dorado_id_open_batch\" . \" \" .  l:content\n    elseif a:func_select ==# \"coral_field_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"coral_field_batch\" . \" \" .  l:content\n    elseif a:func_select ==# \"coral_block_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"coral_block_batch\" . \" \" .  l:content\n    elseif a:func_select ==# \"coral_preview_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"coral_preview_batch\" . \" \" .  l:content\n    elseif a:func_select ==# \"coral_produce_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"coral_produce_batch\" . \" \" .  l:content\n    endif \n    \" sleep 5\n\nendfunction\n\nfunction! OpenInstances()\n\n    let l:content = VisualSelection()\n    echom l:content\n    execute \":!python /Users/bytedance/opt/tools/instance.py \" . l:content \n    sleep 5\n\nendfunction\n\nif !has('python3')\n  echo \"Error: Required vim compiled with +python3\"\n  finish\nendif\n\n\nxnoremap <Leader>dm :<C-u>call MultiOpenFunc()<CR> \n\nmap <leader>dg :call GenerateSQL()<CR>\nmap <leader>dd :call GetDdl()<CR>\nmap <leader>dt :call GetTask()<CR>\nxnoremap <Leader>do :<C-u>call CoralBatchOp(\"dorado_open_batch\")<CR> \nxnoremap <Leader>di :<C-u>call CoralBatchOp(\"dorado_id_open_batch\")<CR> \nxnoremap <Leader>df :<C-u>call CoralBatchOp(\"coral_field_batch\")<CR> \nxnoremap <Leader>db :<C-u>call CoralBatchOp(\"coral_block_batch\")<CR> \nxnoremap <Leader>dv :<C-u>call CoralBatchOp(\"coral_preview_batch\")<CR> \nxnoremap <Leader>dp :<C-u>call CoralBatchOp(\"coral_produce_batch\")<CR> \nxnoremap <Leader>di :<C-u>call OpenInstances()<CR> \n\n\nfunction! SubStitute()\n    :%s/ea_stg/ea_lark_expense_sensitive/g\n    :%s/ea_ods/ea_lark_expense_sensitive/g\n    :%s/ea_mds/ea_lark_expense_sensitive/g\n    :%s/mds_/dwd_/g\nendfunction \n\nmap <leader>pr :retab<CR>\n\nhighlight BookmarkSign ctermbg=NONE ctermfg=160\nhighlight BookmarkLine ctermbg=194 ctermfg=NONE\nlet g:bookmark_sign = '♥'\nlet g:bookmark_highlight_lines = 1\n\n\nfunction! LibrarySorter()\npython3 << EOF\nimport vim\nEOF\nendfunction\n\nnnoremap <c-j> <cmd>call smoothie#do(\"\\<C-D>\") <CR>\nmap <c-d> <cmd>call smoothie#downwards()<CR>\nvnoremap <c-j> <cmd>call smoothie#do(\"\\<C-D>\") <CR>\n\n\nlet g:bookmark_save_per_working_dir = 1\n\n\n\n\" let g:LanguageClient_serverCommands = {\n    \" \\ 'rust': ['~/.cargo/bin/rustup', 'run', 'stable', 'rls'],\n    \" \\ }\n\" noremap <silent> gt<Plug>(lcn-definition)\n\nlet g:LanguageClient_serverCommands = {\n\\ 'rust': ['rust-analyzer'],\n\\ }\n\nnmap <silent>ldg :call CocAction('diagnosticInfo')<CR>\nnmap <silent>ldf :call CocAction('jumpDefinition')<CR>\nnmap <silent>ljd :call CocAction('jumpDeclaration')<CR>\nnmap <silent>ltd :call CocAction('jumpTypeDefinition')<CR>\n\nlet g:material_style = \"palenight\"\n\"\n\" nnoremap <Leader>dd :call vimspector#Launch()<CR>\n\" nnoremap <Leader>de :call vimspector#Reset()<CR>\n\" nnoremap <Leader>dc :call vimspector#Continue()<CR>\n\"\n\" nnoremap <Leader>dt :call vimspector#ToggleBreakpoint()<CR>\n\" nnoremap <Leader>dT :call vimspector#ClearBreakpoints()<CR>\n\"\n\" nmap <Leader>dk <Plug>VimspectorRestart\n\" nmap <Leader>dh <Plug>VimspectorStepOut\n\" nmap <Leader>dl <Plug>VimspectorStepInto\n\" nmap <Leader>dj <Plug>VimspectorStepOver\n\"\n\"\nlet g:vimspector_enable_mappings = 'HUMAN'\nmap <leader>fdi :setlocal foldmethod=indent<CR>\nmap <leader>fdm :setLocal foldmethod=manual<CR>\nmap <leader><leader>m :Mark<CR>\n\nlet g:user_emmet_settings = {\n\\  'php' : {\n\\    'extends' : 'html',\n\\  },\n\\  'scala' : {\n\\    'extends' : 'html',\n\\  },\n\\  'java' : {\n\\    'extends' : 'html',\n\\  },\n\\}\nlet g:user_emmet_install_global = 0\nautocmd FileType html,css,java,scala,dot,tsx EmmetInstall\n\nlet g:user_emmet_leader_key='<C-Z>'\nlet g:typescript_compiler_binary = 'tsc'\nlet g:typescript_compiler_options = ''\n\nautocmd FileType typescript :set makeprg=tsc\nendfunction\n\n\nfunction! myspacevim#after() abort\n\nendfunction\n\n\n```\n","source":"_posts/vimconfig.md","raw":"---\ntitle: vimconfig\ndate: 2023-06-06 14:57:14\ntags: vim \n---\n\n# MY CONFIG FOR SPACEVIM\n\n## BASIC CONFIG \n```\n#=============================================================================\n# basic.toml --- basic configuration example for SpaceVim\n# Copyright (c) 2016-2023 Wang Shidong & Contributors\n# Author: Wang Shidong < wsdjeg@outlook.com >\n# URL: https://spacevim.org\n# License: GPLv3\n#=============================================================================\n\n# All SpaceVim option below [option] section\n[options]\n    # set spacevim theme. by default colorscheme layer is not loaded,\n    # if you want to use more colorscheme, please load the colorscheme\n    # layer\n    colorscheme = \"gruvbox\"\n\t\tcolorscheme_bg = \"dark\"\n    # Disable guicolors in basic mode, many terminal do not support 24bit\n    # true colors\n    enable_guicolors = false\n    # Disable statusline separator, if you want to use other value, please\n    # install nerd fonts\n    # statusline_separator = \"nil\"\n    # statusline_iseparator = \"bar\"\n    # buffer_index_type = 4\n    # windows_index_type = 3\n    enable_tabline_filetype_icon = false\n    enable_statusline_mode = false\n    statusline_unicode = false\n    # Enable vim compatible mode, avoid changing origin vim key bindings\n    vimcompatible = true\n\n\n[options]\n    bootstrap_before = \"myspacevim#before\"\n    bootstrap_after  = \"myspacevim#after\"\n\n\n[[custom_plugins]]\nrepo='wellle/targets.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='terryma/vim-expand-region'\nmerged=false\n\n[[custom_plugins]]\nrepo='tomtom/tlib_vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='mattn/webapi-vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='tyru/open-browser.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='mg979/vim-visual-multi'\nmerged=false\n\n[[custom_plugins]]\nrepo='tpope/vim-repeat'\nmerged=false\n\n[[custom_plugins]]\nrepo='airblade/vim-gitgutter'\nmerged=false\n\n[[custom_plugins]]\nrepo='scrooloose/nerdcommenter'\nmerged=false\n\n[[custom_plugins]]\nrepo='tpope/vim-fugitive'\nmerged=false\n\n[[custom_plugins]]\nrepo='szw/vim-maximizer'\nmerged=false\n\n[[custom_plugins]]\nrepo='mattn/emmet-vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='vim-scripts/Mark'\nmerged=false\n\n[[custom_plugins]]\nrepo='yegappan/mru'\nmerged=false\n\n[[custom_plugins]]\nrepo='junegunn/vim-easy-align'\nmerged=false\n\n[[custom_plugins]]\nrepo='j5shi/SearchComplete'\nmerged=false\n\n[[custom_plugins]]\nrepo='vim-scripts/CmdlineComplete'\nmerged=false\n\n[[custom_plugins]]\nrepo='jiangmiao/auto-pairs'\nmerged=false\n\n[[custom_plugins]]\nrepo='MattesGroeger/vim-bookmarks'\nmerged=false\n\n[[custom_plugins]]\nrepo= 'autowitch/hive.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='github/copilot.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='skywind3000/asyncrun.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo=\"XadillaX/json-formatter.vim\"\nmerged=false\n\n\n[[custom_plugins]]\nrepo=\"godlygeek/tabular\"\nmerged=false\n\n[[custom_plugins]]\nrepo=\"vim-scripts/matchit.zip\"\nmerged=false\n\n[[custom_plugins]]\nrepo='tbodt/deoplete-tabnine'\nmerged=false\n\n[[custom_plugins]]\nrepo='wellle/tmux-complete.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='jrozner/vim-antlr'\nmerged=false\n\n[[custom_plugins]]\nrepo='MattesGroeger/vim-bookmarks'\nmerged=false\n\n[[custom_plugins]]\nrepo='gennaro-tedesco/nvim-peekup'\nmerged=false\n\n[[custom_plugins]]\nrepo='tpope/vim-speeddating'\nmerged=false\n\n\n[[custom_plugins]]\nrepo='easymotion/vim-easymotion'\nmerged=false\n\n[[custom_plugins]]\nrepo='psf/black'\nmerged=false\n\n[[custom_plugins]]\nrepo='lyokha/vim-xkbswitch'\nmerged=false\n\n[[custom_plugins]]\nrepo='liuchengxu/graphviz.vim'\nmerged=false\n\n[[custom_plugins]]\nrepo='psliwka/vim-smoothie'\nmerged=false\n\n[[custom_plugins]]\nrepo='rust-lang/rust.vim'\nmerged=false\n\n\n[[custom_plugins]]\nrepo='racer-rust/vim-racer'\nmerged=false\n\n\n[[custom_plugins]]\nrepo='pangloss/vim-javascript'\nmerged=false\n\n[[custom_plugins]]\nrepo='marko-cerovac/material.nvim'\nmerged=false\n\n[[custom_plugins]]\nrepo='integralist/vim-mypy'\nmerged=false\n\n[[custom_plugins]]\nrepo='leafgarland/typescript-vim'\nmerge=false\n\n[[custom_plugins]]\nrepo='ap/vim-css-color'\nmerge=false\n```\n\n\n## CUSTOM CONFIG \n```\nfunction! myspacevim#before() abort\n call SpaceVim#custom#SPCGroupName(['G'], '+TestGroup')\n call SpaceVim#custom#SPC('nore', ['G', 't'], 'echom 1', 'echomessage 1', 1)\n  \" let profile = SpaceVim#mapping#search#getprofile('rg')\n\" let default_opt = profile.default_opts + ['--no-ignore-vcs']\n\" call SpaceVim#mapping#search#profile({'rg' : {'default_opts' : default_opt}})\n\nset clipboard+=unnamed\n\"禁止生成临时文件\nset noswapfile\n\" 光标移动到buffer的顶部和底部时保持3行距离\nmap <leader><leader>h :MRU<CR> \n\nfunc! SqlToUpper()\n    %s/\\<select\\>\\|\\<from\\>\\|\\<as\\>\\|\\<where\\>\\|\\<if\\>\\|\\<not\\>\\|\\<group\\>\\|\\<by\\>\\|\\<left\\>\\|\\<right\\>\\|\\<join\\>\\|\\<outer\\>\\|\\<full\\>\\|\\<to_date\\>\\|\\<from_unixtime\\>\\|\\<unixtime_stamp\\>\\|\\<when\\>\\|\\<case\\>\\|\\<then\\>\\|\\<max\\>\\|\\<min\\>\\|\\<avg\\>\\|\\<end\\>\\|\\<else\\>\\|\\<and\\>\\|\\<or\\>\\|\\<on\\>\\|\\<count\\>\\|\\<sum\\>|\\<use\\>|\\<limit\\>/\\U&/g\n    %s/\\<add\\>\\|\\<admin\\>\\|\\<after\\>\\|\\<analyze\\>\\|\\<archive\\>\\|\\<asc\\>\\|\\<before\\>\\|\\<bucket\\>\\|\\<buckets\\>\\|\\<cascade\\>\\|\\<change\\>\\|\\<cluster\\>\\|\\<clustered\\>\\|\\<clusterstatus\\>\\|\\<collection\\>\\|\\<columns\\>\\|\\<comment\\>\\|\\<compact\\>\\|\\<compactions\\>\\|\\<compute\\>\\|\\<concatenate\\>\\|\\<continue\\>\\|\\<data\\>\\|\\<databases\\>\\|\\<datetime\\>\\|\\<day\\>\\|\\<dbproperties\\>\\|\\<deferred\\>\\|\\<defined\\>\\|\\<delimited\\>\\|\\<dependency\\>\\|\\<desc\\>\\|\\<directories\\>\\|\\<directory\\>\\|\\<disable\\>\\|\\<distribute\\>\\|\\<elem_type\\>\\|\\<enable\\>\\|\\<escaped\\>\\|\\<exclusive\\>\\|\\<explain\\>\\|\\<export\\>\\|\\<fields\\>\\|\\<file\\>\\|\\<fileformat\\>\\|\\<first\\>\\|\\<format\\>\\|\\<formatted\\>\\|\\<functions\\>\\|\\<hold_ddltime\\>\\|\\<idxproperties\\>\\|\\<ignore\\>\\|\\<index\\>\\|\\<indexes\\>\\|\\<inpath\\>\\|\\<inputdriver\\>\\|\\<inputformat\\>\\|\\<items\\>\\|\\<jar\\>\\|\\<keys\\>\\|\\<key_type\\>\\|\\<limit\\>\\|\\<lines\\>\\|\\<load\\>\\|\\<location\\>\\|\\<lock\\>\\|\\<locks\\>\\|\\<logical\\>\\|\\<long\\>\\|\\<mapjoin\\>\\|\\<materialized\\>\\|\\<metadata\\>\\|\\<minus\\>\\|\\<minute\\>\\|\\<month\\>\\|\\<msck\\>\\|\\<noscan\\>\\|\\<no_drop\\>\\|\\<offline\\>\\|\\<option\\>\\|\\<outputdriver\\>\\|\\<outputformat\\>\\|\\<overwrite\\>\\|\\<owner\\>\\|\\<partitioned\\>\\|\\<partitions\\>\\|\\<plus\\>\\|\\<pretty\\>\\|\\<principals\\>\\|\\<protection\\>\\|\\<purge\\>\\|\\<read\\>\\|\\<readonly\\>\\|\\<rebuild\\>\\|\\<recordreader\\>\\|\\<recordwriter\\>\\|\\<regexp\\>\\|\\<reload\\>\\|\\<rename\\>\\|\\<repair\\>\\|\\<replace\\>\\|\\<replication\\>\\|\\<restrict\\>\\|\\<rewrite\\>\\|\\<rlike\\>\\|\\<role\\>\\|\\<roles\\>\\|\\<schema\\>\\|\\<schemas\\>\\|\\<second\\>\\|\\<semi\\>\\|\\<serde\\>\\|\\<serdeproperties\\>\\|\\<server\\>\\|\\<sets\\>\\|\\<shared\\>\\|\\<show\\>\\|\\<show_database\\>\\|\\<skewed\\>\\|\\<sort\\>\\|\\<sorted\\>\\|\\<ssl\\>\\|\\<statistics\\>\\|\\<stored\\>\\|\\<streamtable\\>\\|\\<string\\>\\|\\<struct\\>\\|\\<tables\\>\\|\\<tblproperties\\>\\|\\<temporary\\>\\|\\<terminated\\>\\|\\<tinyint\\>\\|\\<touch\\>\\|\\<transactions\\>\\|\\<unarchive\\>\\|\\<undo\\>\\|\\<uniontype\\>\\|\\<unlock\\>\\|\\<unset\\>\\|\\<unsigned\\>\\|\\<uri\\>\\|\\<use\\>\\|\\<utc\\>\\|\\<utctimestamp\\>\\|\\<value_type\\>\\|\\<view\\>\\|\\<while\\>\\|\\<year\\>\\<all\\>\\|\\<alter\\>\\|\\<and\\>\\|\\<array\\>\\|\\<as\\>\\|\\<authorization\\>\\|\\<between\\>\\|\\<bigint\\>\\|\\<binary\\>\\|\\<boolean\\>\\|\\<both\\>\\|\\<by\\>\\|\\<case\\>\\|\\<cast\\>\\|\\<char\\>\\|\\<column\\>\\|\\<conf\\>\\|\\<create\\>\\|\\<cross\\>\\|\\<cube\\>\\|\\<current\\>\\|\\<current_date\\>\\|\\<current_timestamp\\>\\|\\<cursor\\>\\|\\<database\\>\\|\\<decimal\\>\\|\\<delete\\>\\|\\<describe\\>\\|\\<distinct\\>\\|\\<double\\>\\|\\<drop\\>\\|\\<else\\>\\|\\<end\\>\\|\\<exchange\\>\\|\\<exists\\>\\|\\<extended\\>\\|\\<external\\>\\|\\<fetch\\>\\|\\<float\\>\\|\\<following\\>\\|\\<for\\>\\|\\<from\\>\\|\\<full\\>\\|\\<function\\>\\|\\<grant\\>\\|\\<group\\>\\|\\<grouping\\>\\|\\<having\\>\\|\\<if\\>\\|\\<import\\>\\|\\<in\\>\\|\\<inner\\>\\|\\<insert\\>\\|\\<int\\>\\|\\<intersect\\>\\|\\<interval\\>\\|\\<into\\>\\|\\<is\\>\\|\\<join\\>\\|\\<lateral\\>\\|\\<left\\>\\|\\<less\\>\\|\\<like\\>\\|\\<local\\>\\|\\<macro\\>\\|\\<map\\>\\|\\<more\\>\\|\\<not\\>\\|\\<null\\>\\|\\<of\\>\\|\\<on\\>\\|\\<or\\>\\|\\<order\\>\\|\\<out\\>\\|\\<outer\\>\\|\\<over\\>\\|\\<partialscan\\>\\|\\<partition\\>\\|\\<percent\\>\\|\\<preceding\\>\\|\\<preserve\\>\\|\\<procedure\\>\\|\\<range\\>\\|\\<reads\\>\\|\\<reduce\\>\\|\\<revoke\\>\\|\\<right\\>\\|\\<rollup\\>\\|\\<row\\>\\|\\<rows\\>\\|\\<select\\>\\|\\<set\\>\\|\\<smallint\\>\\|\\<table\\>\\|\\<tablesample\\>\\|\\<then\\>\\|\\<timestamp\\>\\|\\<to\\>\\|\\<transform\\>\\|\\<trigger\\>\\|\\<truncate\\>\\|\\<unbounded\\>\\|\\<union\\>\\|\\<uniquejoin\\>\\|\\<update\\>\\|\\<user\\>\\|\\<using\\>\\|\\<utc_tmestamp\\>\\|\\<values\\>\\|\\<varchar\\>\\|\\<when\\>\\|\\<where\\>\\|\\<window\\>\\|\\<with\\>/\\U&/g\nendfunc\n\naugroup black_on_save\n  autocmd!\n  autocmd BufWritePre *.py Black\naugroup end\n\nlet g:XkbSwitchEnabled = 1\nmap <leader>ma :ma \nxmap ga <Plug>(EasyAlign)\nnmap ga <Plug>(EasyAlign)\n\n\" fun! DeleteAllBuffersInWindow()\n    \" let s:curWinNr = winnr()\n    \" if winbufnr(s:curWinNr) == 1\n        \" ret\n    \" endif\n    \" let s:curBufNr = bufnr(\"%\")\n    \" exe \"bn\"\n    \" let s:nextBufNr = bufnr(\"%\")\n    \" while s:nextBufNr != s:curBufNr\n        \" exe \"bn\"\n        \" exe \"bdel \".s:nextBufNr\n        \" let s:nextBufNr = bufnr(\"%\")\n    \" endwhile\n\" endfun\n\n\" map <leader><leader>bda     :call DeleteAllBuffersInWindow()\nmap <leader><leader>- :ChooseWin<CR>\nlet g:choosewin_overlay_enable = 1\n\n\nmap <leader><leader>f :!black %<CR>\n\n\" map <leader><leader>s <Plug>(easymotion-s)\n\" map <leader><leader>f <Plug>(easymotion-f)\nnmap <Leader>; <Plug>(easymotion-next)\nnmap <Leader>, <Plug>(easymotion-prev)\n\" map <Leader><leader> <Plug>(easymotion-prefix)\n\" nmap gw        :InteractiveWindow<CR>\n\" nmap <leader>w :InteractiveWindow<CR>\nnmap ]h <Plug>(GitGutterNextHunk)\nnmap [h <Plug>(GitGutterPrevHunk)\n\nhi   MarkWord1    ctermbg=Cyan           ctermfg=Black    guibg=#FFDAB9 guifg=Black\nhi   MarkWord2    ctermbg=Green          ctermfg=Black    guibg=#2F4F4F guifg=Black\nhi   MarkWord3    ctermbg=Yellow         ctermfg=Black    guibg=#191970 guifg=Black\nhi   MarkWord4    ctermbg=Red            ctermfg=Black    guibg=#40E0D0 guifg=Black\nhi   MarkWord5    ctermbg=Magenta        ctermfg=Black    guibg=#00FF00 guifg=Black\nhi   MarkWord6    ctermbg=Blue           ctermfg=Black    guibg=#FFFF00 guifg=Black\nhi   MarkWord7    ctermbg=Brown          ctermfg=Black    guibg=#D2691E guifg=Black\nhi   MarkWord8    ctermbg=LightCyan      ctermfg=Red      guibg=#FF0000 guifg=Black\nhi   MarkWord9    ctermbg=LightGreen     ctermfg=Red      guibg=#9400D3 guifg=Black\nhi   MarkWord10   ctermbg=LightYellow    ctermfg=Red      guibg=#CDB38B guifg=Black\nhi   MarkWord11   ctermbg=LightRed       ctermfg=Red      guibg=#27408B guifg=Black\nhi   MarkWord12   ctermbg=LightMagenta   ctermfg=Red      guibg=#E0FFFF guifg=Black\nhi   MarkWord13   ctermbg=LightBlue      ctermfg=Red      guibg=#00CD00 guifg=Black\nhi   MarkWord14   ctermbg=DarkBlue       ctermfg=Blue     guibg=#FFEC8B guifg=Black\nhi   MarkWord15   ctermbg=DarkGreen      ctermfg=Blue     guibg=#FFD700 guifg=Black\nhi   MarkWord16   ctermbg=DarkCyan       ctermfg=Blue     guibg=#8B658B guifg=Black\nhi   MarkWord17   ctermbg=DarkRed        ctermfg=Blue     guibg=#8B3A3A guifg=Black\nhi   MarkWord18   ctermbg=DarkMagenta    ctermfg=Blue     guibg=#FF7F24 guifg=Black\nhi   MarkWord19   ctermbg=DarkYellow     ctermfg=Blue     guibg=#CD2626 guifg=Black\nhi   MarkWord20   ctermbg=DarkGray       ctermfg=Blue     guibg=#FF7F00 guifg=Black\n\n\nnoremap <leader><leader>ff :<C-U><C-R>=printf(\"Leaderf file %s\", \"\")<CR><CR>\nnoremap <leader><leader>fm :<C-U><C-R>=printf(\"Leaderf mru %s\", \"\")<CR><CR>\nnoremap <leader><leader>fh :Leaderf cmdHistory <CR>\nnoremap <leader><leader>ft :<C-U><C-R>=printf(\"Leaderf tag %s\", \"\")<CR><CR>\nnoremap <leader><leader>fr :<C-U><C-R>=printf(\"Leaderf --recall\")<CR><CR>\nnoremap <C-G> :<C-U><C-R>=printf(\"Leaderf! rg --current-buffer -e %s \", expand(\"<cword>\"))<CR>\nnoremap <C-F> :<C-U><C-R>=printf(\"Leaderf! rg --stayOpen -g '*.hql' -e %s  \", expand(\"<cword>\"))<CR>\nnoremap  fr :<C-U>Leaderf! rg --recall<CR>\n\nlet g:Lf_GtagsAutoGenerate = 0\nlet g:Lf_Gtagslabel = 'native-pygments'\n\n\n:imap <C-J> <Plug>snipMateNextOrTrigger\n:smap <C-J> <Plug>snipMateNextOrTrigger\n\nlet g:netrw_nogx = 1 \" disable netrw's gx mapping.\n\nnmap <leader>gx :OpenBrowser <c-r><c-a><CR>\nvmap <leader>gx :OpenBrowser <c-r><c-a><CR>\n\nfunction! HandleURL()\n  let s:uri = matchstr(getline(\".\"), '[a-z]*:\\/\\/[^ >,;]*')\n  echo s:uri\n  if s:uri != \"\"\n    execute \"!open '\".s:uri.\"'\"\n  else\n    echo \"No URI found in line.\"\n  endif\nendfunction\nmap <leader><leader>u :call HandleURL()<cr>\n\nmap <leader><leader>gs :Gstatus<CR> \n\n\" https://data.bytedance.net/coral/datamap/detail/table_info/HiveTable/ea_rpt/{query}/block_info#group=default\n\" https://data.bytedance.net/coral/datamap/detail/data_preview/HiveTable/ea_rpt/{query}=default\nlet g:openbrowser_search_engines = {\n\\   'stg':'https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_stg/{query}',\n\\   'ods':'https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_ods/{query}',\n\\   'mds':'https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_mds/{query}',\n\\   'dm' :'https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_dm/{query}',\n\\   'rpt':'https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_rpt/{query}',\n\\   'coral': 'https://data.bytedance.net/coral/datamap_new/result?query={query}',\n\\   'trans': 'https://translate.google.com.hk/?sl=zh-CN&tl=en&text={query}&op=translate',\n\\   'manta':'https://data.bytedance.net/manta/monitor/hive?current=1&is_trigger=false&limit=10&monitor_state=all&monitor_types=all&projects=cn_532&query={query}&search_type=db_tb_name&type=cn',\n\\   'self':'https://data.bytedance.net/manta/rule/hive/sql?alarm_level=all&is_myself=false&is_trigger=false&monitor_state=all&monitor_types=all&query={query}&search_type=monitor_name&type=cn&projects=cn_532',\n\\   'manta_report':'https://data.bytedance.net/manta/datacheck/list?is_myself=false&query={query}&search_type=db_tb_name&type=cn'\n\\}\nnmap <leader>gg :OpenBrowserSearch <C-R>=expand(\"<cword>\")<CR><CR>\nnmap <leader>gt :OpenBrowserSearch -trans <C-R>=expand(\"<cword>\")<CR><CR>\n\nfunc! MantaReport()\n    let l:engine = expand(\"<cWORD>\")\n    echom l:engine\n    execute 'silent :OpenBrowserSearch -manta_report ' . l:engine\nendfunc\n\nfunc! Manta()\n    let l:engine = expand(\"<cword>\")\n    echom l:engine\n    execute 'silent :OpenBrowserSearch -manta ' . l:engine\n    \" execute 'silent :OpenBrowserSearch -self ' . l:engine\nendfunc\n\nfunc! EchoCword()\n    let l:cword= expand(\"<cword>\")\n    echom l:cword\nendfunc\n\nfunc! AccessCoral()\n\n    let l:engine = expand(\"<cword>\")\n    echom l:engine\n    \n    if( stridx(l:engine, \"stg\") == 0 ) \n        \" echom \"stg\"\n        execute 'silent :OpenBrowserSearch -stg ' . l:engine\n        execute 'silent :OpenBrowserSearch -uatstg ' . l:engine\n    elseif(stridx(l:engine, \"ods\") == 0)\n        \" echom \"ods\"\n        execute ':OpenBrowserSearch -ods ' . l:engine\n        execute ':OpenBrowserSearch -uatods ' . l:engine\n    elseif(stridx(l:engine, \"mds\") == 0)\n        \" echom \"mds\"\n        execute ':OpenBrowserSearch -mds ' . l:engine\n        execute ':OpenBrowserSearch -uatmds ' . l:engine\n    elseif(stridx(l:engine, \"dm\") == 0)\n        \" echom \"dm\"\n        execute ':OpenBrowserSearch -dm ' . l:engine\n        execute ':OpenBrowserSearch -uatdm ' . l:engine\n    elseif(stridx(l:engine, \"rpt\") == 0)\n        \" echom \"rpt\"\n        execute ':OpenBrowserSearch -rpt ' . l:engine\n        execute ':OpenBrowserSearch -uatrpt ' . l:engine\n    elseif(stridx(l:engine, \"http\") == 0)\n        execute ':OpenBrowser()' \n    else\n        echom \"coral\"\n        execute ':OpenBrowserSearch -coral ' . l:engine\n    endif\nendfunc\n\nlet g:Lf_NumberOfHighlight=1\n\n\n\nfunc! Findtable()\n    let l:table_name = expand(\"<cword>\")\n    echo l:table_name\n    execute ':/).*' . l:table_name\nendfunc\n\n\n\" don't show the help in normal mode\nlet g:Lf_HideHelp = 1\nlet g:Lf_UseCache = 0\nlet g:Lf_UseVersionControlTool = 0\nlet g:Lf_IgnoreCurrentBufferName = 1\n\" popup mode\n\" let g:Lf_WindowPosition = 'right'\n\"\nlet g:Lf_ShowDevIcons = 1\nlet g:Lf_WindowHeight = 0.2                               \nlet g:Lf_PreviewInPopup = 1\nlet g:Lf_StlSeparator = { 'left': \"\\ue0b0\", 'right': \"\\ue0b2\", 'font': \"DejaVu Sans Mono for Powerline\" }\nlet g:Lf_ShowRelativePath = 1\nlet g:Lf_PreviewResult = {\n        \\ 'File': 1,\n        \\ 'Buffer': 1,\n        \\ 'Mru': 1,\n        \\ 'Tag': 1,\n        \\ 'BufTag': 1,\n        \\ 'Function': 1,\n        \\ 'Line': 1,\n        \\ 'Colorscheme': 1,\n        \\ 'Rg': 1,\n        \\ 'Gtags': 1\n        \\}\n\nlet g:Lf_PreviewHorizontalPosition = 'right'                    \nlet g:Lf_ShortcutF ='<leader>w'\n\nmap = <Plug>(expand_region_expand)\nmap - <Plug>(expand_region_shrink)\nlet g:mwDefaultHighlightingPalette = 'maximum'\n\" nnoremap <silent><Leader>m m\n\n\" Plugin key-mappings.\n\" Note: It must be \"imap\" and \"smap\".  It uses <Plug> mappings.\nimap <C-k>     <Plug>(neosnippet_expand_or_jump)\nsmap <C-k>     <Plug>(neosnippet_expand_or_jump)\nxmap <C-k>     <Plug>(neosnippet_expand_target)\n\n\" SuperTab like snippets behavior.\n\" Note: It must be \"imap\" and \"smap\".  It uses <Plug> mappings.\n\"imap <expr><TAB>\n\" \\ pumvisible() ? \"\\<C-n>\" :\n\" \\ neosnippet#expandable_or_jumpable() ?\n\" \\    \"\\<Plug>(neosnippet_expand_or_jump)\" : \"\\<TAB>\"\nsmap <expr><TAB> neosnippet#expandable_or_jumpable() ?\n\\ \"\\<Plug>(neosnippet_expand_or_jump)\" : \"\\<TAB>\"\n\n\" For conceal markers.\nif has('conceal')\n  set conceallevel=2 concealcursor=niv\nendif\n\n\n\" Enable snipMate compatibility feature.\nlet g:neosnippet#enable_snipmate_compatibility = 1\n\n\" Tell Neosnippet about the other snippets\nlet g:neosnippet#snippets_directory='~/.vim_back/bundle/vim-snippets/snippets'\n\nimap <silent><script><expr> <C-J> copilot#Accept(\"\\<CR>\")\nlet g:copilot_no_tab_map = v:true\n\" for .hql files\nau BufNewFile,BufRead *.hql set filetype=hive expandtab\n\nau BufNewFile,BufRead *.hql set filetype=hive expandtab\n\nlet g:Lf_ShowRelativePath=1\nmap <leader>cc <plug>NERDCommenterToggle\n\nimap <silent><script><expr> <C-J> copilot#Accept(\"\\<CR>\")\nlet g:copilot_no_tab_map = v:true\n\n\n\"\n\" Help Vim recognize *.sbt and *.sc as Scala files\nau BufRead,BufNewFile *.sbt,*.sc set filetype=scala\n\n\" Used to expand decorations in worksheets\n\" nmap <Leader>ws <Plug>(coc-metals-expand-decoration)\n\"\" Toggle panel with Tree Views\n\"nnoremap <silent> <space>t :<C-u>CocCommand metals.tvp<CR>\n\"\" Toggle Tree View 'metalsPackages'\n\"nnoremap <silent> <space>tp :<C-u>CocCommand metals.tvp metalsPackages<CR>\n\"\" Toggle Tree View 'metalsCompile'\n\"nnoremap <silent> <space>tc :<C-u>CocCommand metals.tvp metalsCompile<CR>\n\"\" Toggle Tree View 'metalsBuild'\n\"nnoremap <silent> <space>tb :<C-u>CocCommand metals.tvp metalsBuild<CR>\n\"\" Reveal current current class (trait or object) in Tree View 'metalsPackages'\n\"nnoremap <silent> <space>tf :<C-u>CocCommand metals.revealInTreeView metalsPackages<CR>\n\n\n\n\n\" How to open the generated output file.\n\" If does not exist, graphviz.vim will automatically choose the right way depending on the platform.\nlet g:graphviz_viewer = 'open'\nlet g:graphviz_output_format = 'svg'\n\n\nmap <leader>gvs :GraphvizShow<CR>\nmap <leader>gvc :GraphvizCompile<CR>\nmap <leader>gvg :!dot -Tsvg % -o ~/Desktop/output.svg && open ~/Desktop/output.svg <CR>\nfunction! MyGraphViz()\n    :Graphviz!!\nendfunction\n\n\nif exists(\":Tabularize\")\n  nmap <Leader>a= :Tabularize /=<CR>\n  vmap <Leader>a= :Tabularize /=<CR>\n  nmap <Leader>a: :Tabularize /:\\zs<CR>\n  vmap <Leader>a: :Tabularize /:\\zs<CR>\nendif\n\ninoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a\n\nfunction! s:align()\n  let p = '^\\s*|\\s.*\\s|\\s*$'\n  if exists(':Tabularize') && getline('.') =~# '^\\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)\n    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))\n    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\\s*\\zs.*'))\n    Tabularize/|/l1\n    normal! 0\n    call search(repeat('[^|]*|',column).'\\s\\{-\\}'.repeat('.',position),'ce',line('.'))\n  endif\nendfunction\n\n\n\" let g:spacevim_project_auto_root=0\n\nlet g:spacevim_project_auto_root='current'\n\nnon_root = 'current'_create.py \" . l:db . \" \" . l:tb\nendfunction \n\nfunction! DoradoOpen()\n  let l:keyword= expand(\"<cWORD>\")\n  execute \":AsyncRun python ~/opt/tools/common_open.py \" . \" dorado_open \" . l:keyword\nendfunction \n\nfunction! DoradoIdOpen()\n  let l:keyword= expand(\"<cWORD>\")\n  execute \":AsyncRun python ~/opt/tools/common_open.py \" . \" dorado_id_open \" . l:keyword\nendfunction \n\nfunction! AllCoralOpen()\n\tlet l:keyword= expand(\"<cWORD>\")\n\t\" execute \":AsyncRun python ~/opt/tools/common_open.py \" \"coral_field\"   . \" \" . l:keyword\n\t\" execute \":AsyncRun python ~/opt/tools/common_open.py \" \"coral_block\"   . \" \" . l:keyword\n\t\" execute \":AsyncRun python ~/opt/tools/common_open.py \" \"coral_preview\" . \" \" . l:keyword\n\t\" execute \":AsyncRun python ~/opt/tools/common_open.py \" \"coral_produce\" . \" \" . l:keyword\n\texecute \"!python ~/opt/tools/common_open.py \" \"coral_field\"   . \" \" . l:keyword\n\texecute \"!python ~/opt/tools/common_open.py \" \"coral_block\"   . \" \" . l:keyword\n\texecute \"!python ~/opt/tools/common_open.py \" \"coral_preview\" . \" \" . l:keyword\n\texecute \":AsyncRun python ~/opt/tools/common_open.py \" \"coral_produce\" . \" \" . l:keyword\n    \" sleep 10\nendfunction \n\nfunction! DirectUrl()\n\texecute \":!python ~/opt/tools/multi_open.py \" . @z\nendfunction \n\nfunction! VisualSelection()\n    if mode()==\"v\"\n        let [line_start, column_start] = getpos(\"v\")[1:2]\n        let [line_end, column_end] = getpos(\".\")[1:2]\n    else\n        let [line_start, column_start] = getpos(\"'<\")[1:2]\n        let [line_end, column_end] = getpos(\"'>\")[1:2]\n    end\n\n    if (line2byte(line_start)+column_start) > (line2byte(line_end)+column_end)\n        let [line_start, column_start, line_end, column_end] =\n        \\   [line_end, column_end, line_start, column_start]\n    end\n    let lines = getline(line_start, line_end)\n    if len(lines) == 0\n            return ['']\n    endif\n    if &selection ==# \"exclusive\"\n        let column_end -= 1 \"Needed to remove the last character to make it match the visual selction\n    endif\n    if visualmode() ==# \"\\<C-V>\"\n        for idx in range(len(lines))\n            let lines[idx] = lines[idx][: column_end - 1]\n            let lines[idx] = lines[idx][column_start - 1:]\n        endfor\n    else\n        let lines[-1] = lines[-1][: column_end - 1]\n        let lines[ 0] = lines[ 0][column_start - 1:]\n    endif\n\n\tlet ret = join(lines, \",\")\n    \" echo ret\n    \" echom ret\n\tcall setreg('z', ret)\n    \" execute \":!python ~/opt/tools/multi_open.py \" . @z\n\treturn ret\nendfunction\n\nfunction! GetDdl() abort\n  let l:dbtb=expand(\"<cWORD>\")\n  echo l:dbtb\n  execute \":AsyncRun python ~/opt/tools/ddl.py \" . l:dbtb \nendfunction\n\nfunction! GetTask() abort\n  let l:dbtb=expand(\"<cWORD>\")\n  echo l:dbtb\n  execute \":AsyncRun python ~/opt/tools/task.py \" . l:dbtb \nendfunction\n\nmap <leader><leader>m :MaximizerToggle <CR>\nmap <F10> :call MyGraphViz()<CR>\nmap <F2> :MaximizerToggle<CR>\nmap <F4> :call Findtable()<CR>\nmap <F5> :call TritonAuthApply()<CR>\nmap <F6> :call SqlToUpper()<CR>\nmap <F7> :call PlantumlOpen()<CR>\nmap <F8> :call Manta()<CR>\nmap <F9> :call AccessCoral()<CR>\nmap <leader>ca :call AllCoralOpen()<CR>\nmap <leader>dh :call SubStitute()<CR>\nmap <leader>do :call DoradoOpen()<CR>\nmap <leader>dp :call DataPreview()<CR>\nmap <leader>dt :call DoradoIdOpen()<CR>\nmap <leader>mc :call MantaDataExploreCreate()<CR>\nmap <leader>mp :call MantaReport()<CR>\n\nfunction! MultiOpenFunc()\n\n    let l:content = VisualSelection()\n    echom l:content \n    \" sleep 5\n    execute \":!python ~/opt/tools/multi_open.py \" . l:content\n\nendfunction \nfunction! CoralBatchOp(func_select)\n    let l:content = VisualSelection()\n\n    echom l:content\n    echom \"===================================\"\n    echom a:func_select\n    echom \"===================================\"\n\n    if a:func_select ==# \"dorado_open_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"dorado_open_batch\" . \" \" .  l:content\n    elseif a:func_select ==# \"dorado_id_open_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"dorado_id_open_batch\" . \" \" .  l:content\n    elseif a:func_select ==# \"coral_field_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"coral_field_batch\" . \" \" .  l:content\n    elseif a:func_select ==# \"coral_block_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"coral_block_batch\" . \" \" .  l:content\n    elseif a:func_select ==# \"coral_preview_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"coral_preview_batch\" . \" \" .  l:content\n    elseif a:func_select ==# \"coral_produce_batch\"\n        execute \":!python ~/opt/tools/common_open.py \" . \"coral_produce_batch\" . \" \" .  l:content\n    endif \n    \" sleep 5\n\nendfunction\n\nfunction! OpenInstances()\n\n    let l:content = VisualSelection()\n    echom l:content\n    execute \":!python /Users/bytedance/opt/tools/instance.py \" . l:content \n    sleep 5\n\nendfunction\n\nif !has('python3')\n  echo \"Error: Required vim compiled with +python3\"\n  finish\nendif\n\n\nxnoremap <Leader>dm :<C-u>call MultiOpenFunc()<CR> \n\nmap <leader>dg :call GenerateSQL()<CR>\nmap <leader>dd :call GetDdl()<CR>\nmap <leader>dt :call GetTask()<CR>\nxnoremap <Leader>do :<C-u>call CoralBatchOp(\"dorado_open_batch\")<CR> \nxnoremap <Leader>di :<C-u>call CoralBatchOp(\"dorado_id_open_batch\")<CR> \nxnoremap <Leader>df :<C-u>call CoralBatchOp(\"coral_field_batch\")<CR> \nxnoremap <Leader>db :<C-u>call CoralBatchOp(\"coral_block_batch\")<CR> \nxnoremap <Leader>dv :<C-u>call CoralBatchOp(\"coral_preview_batch\")<CR> \nxnoremap <Leader>dp :<C-u>call CoralBatchOp(\"coral_produce_batch\")<CR> \nxnoremap <Leader>di :<C-u>call OpenInstances()<CR> \n\n\nfunction! SubStitute()\n    :%s/ea_stg/ea_lark_expense_sensitive/g\n    :%s/ea_ods/ea_lark_expense_sensitive/g\n    :%s/ea_mds/ea_lark_expense_sensitive/g\n    :%s/mds_/dwd_/g\nendfunction \n\nmap <leader>pr :retab<CR>\n\nhighlight BookmarkSign ctermbg=NONE ctermfg=160\nhighlight BookmarkLine ctermbg=194 ctermfg=NONE\nlet g:bookmark_sign = '♥'\nlet g:bookmark_highlight_lines = 1\n\n\nfunction! LibrarySorter()\npython3 << EOF\nimport vim\nEOF\nendfunction\n\nnnoremap <c-j> <cmd>call smoothie#do(\"\\<C-D>\") <CR>\nmap <c-d> <cmd>call smoothie#downwards()<CR>\nvnoremap <c-j> <cmd>call smoothie#do(\"\\<C-D>\") <CR>\n\n\nlet g:bookmark_save_per_working_dir = 1\n\n\n\n\" let g:LanguageClient_serverCommands = {\n    \" \\ 'rust': ['~/.cargo/bin/rustup', 'run', 'stable', 'rls'],\n    \" \\ }\n\" noremap <silent> gt<Plug>(lcn-definition)\n\nlet g:LanguageClient_serverCommands = {\n\\ 'rust': ['rust-analyzer'],\n\\ }\n\nnmap <silent>ldg :call CocAction('diagnosticInfo')<CR>\nnmap <silent>ldf :call CocAction('jumpDefinition')<CR>\nnmap <silent>ljd :call CocAction('jumpDeclaration')<CR>\nnmap <silent>ltd :call CocAction('jumpTypeDefinition')<CR>\n\nlet g:material_style = \"palenight\"\n\"\n\" nnoremap <Leader>dd :call vimspector#Launch()<CR>\n\" nnoremap <Leader>de :call vimspector#Reset()<CR>\n\" nnoremap <Leader>dc :call vimspector#Continue()<CR>\n\"\n\" nnoremap <Leader>dt :call vimspector#ToggleBreakpoint()<CR>\n\" nnoremap <Leader>dT :call vimspector#ClearBreakpoints()<CR>\n\"\n\" nmap <Leader>dk <Plug>VimspectorRestart\n\" nmap <Leader>dh <Plug>VimspectorStepOut\n\" nmap <Leader>dl <Plug>VimspectorStepInto\n\" nmap <Leader>dj <Plug>VimspectorStepOver\n\"\n\"\nlet g:vimspector_enable_mappings = 'HUMAN'\nmap <leader>fdi :setlocal foldmethod=indent<CR>\nmap <leader>fdm :setLocal foldmethod=manual<CR>\nmap <leader><leader>m :Mark<CR>\n\nlet g:user_emmet_settings = {\n\\  'php' : {\n\\    'extends' : 'html',\n\\  },\n\\  'scala' : {\n\\    'extends' : 'html',\n\\  },\n\\  'java' : {\n\\    'extends' : 'html',\n\\  },\n\\}\nlet g:user_emmet_install_global = 0\nautocmd FileType html,css,java,scala,dot,tsx EmmetInstall\n\nlet g:user_emmet_leader_key='<C-Z>'\nlet g:typescript_compiler_binary = 'tsc'\nlet g:typescript_compiler_options = ''\n\nautocmd FileType typescript :set makeprg=tsc\nendfunction\n\n\nfunction! myspacevim#after() abort\n\nendfunction\n\n\n```\n","slug":"vimconfig","published":1,"updated":"2023-09-05T11:27:27.911Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm6ezn4m000ag894afti810j","content":"<h1 id=\"MY-CONFIG-FOR-SPACEVIM\"><a href=\"#MY-CONFIG-FOR-SPACEVIM\" class=\"headerlink\" title=\"MY CONFIG FOR SPACEVIM\"></a>MY CONFIG FOR SPACEVIM</h1><h2 id=\"BASIC-CONFIG\"><a href=\"#BASIC-CONFIG\" class=\"headerlink\" title=\"BASIC CONFIG\"></a>BASIC CONFIG</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#=============================================================================</span><br><span class=\"line\"># basic.toml --- basic configuration example for SpaceVim</span><br><span class=\"line\"># Copyright (c) 2016-2023 Wang Shidong &amp; Contributors</span><br><span class=\"line\"># Author: Wang Shidong &lt; wsdjeg@outlook.com &gt;</span><br><span class=\"line\"># URL: https://spacevim.org</span><br><span class=\"line\"># License: GPLv3</span><br><span class=\"line\">#=============================================================================</span><br><span class=\"line\"></span><br><span class=\"line\"># All SpaceVim option below [option] section</span><br><span class=\"line\">[options]</span><br><span class=\"line\">    # set spacevim theme. by default colorscheme layer is not loaded,</span><br><span class=\"line\">    # if you want to use more colorscheme, please load the colorscheme</span><br><span class=\"line\">    # layer</span><br><span class=\"line\">    colorscheme = &quot;gruvbox&quot;</span><br><span class=\"line\">\t\tcolorscheme_bg = &quot;dark&quot;</span><br><span class=\"line\">    # Disable guicolors in basic mode, many terminal do not support 24bit</span><br><span class=\"line\">    # true colors</span><br><span class=\"line\">    enable_guicolors = false</span><br><span class=\"line\">    # Disable statusline separator, if you want to use other value, please</span><br><span class=\"line\">    # install nerd fonts</span><br><span class=\"line\">    # statusline_separator = &quot;nil&quot;</span><br><span class=\"line\">    # statusline_iseparator = &quot;bar&quot;</span><br><span class=\"line\">    # buffer_index_type = 4</span><br><span class=\"line\">    # windows_index_type = 3</span><br><span class=\"line\">    enable_tabline_filetype_icon = false</span><br><span class=\"line\">    enable_statusline_mode = false</span><br><span class=\"line\">    statusline_unicode = false</span><br><span class=\"line\">    # Enable vim compatible mode, avoid changing origin vim key bindings</span><br><span class=\"line\">    vimcompatible = true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[options]</span><br><span class=\"line\">    bootstrap_before = &quot;myspacevim#before&quot;</span><br><span class=\"line\">    bootstrap_after  = &quot;myspacevim#after&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;wellle/targets.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;terryma/vim-expand-region&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tomtom/tlib_vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;mattn/webapi-vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tyru/open-browser.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;mg979/vim-visual-multi&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tpope/vim-repeat&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;airblade/vim-gitgutter&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;scrooloose/nerdcommenter&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tpope/vim-fugitive&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;szw/vim-maximizer&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;mattn/emmet-vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;vim-scripts/Mark&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;yegappan/mru&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;junegunn/vim-easy-align&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;j5shi/SearchComplete&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;vim-scripts/CmdlineComplete&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;jiangmiao/auto-pairs&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;MattesGroeger/vim-bookmarks&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo= &#x27;autowitch/hive.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;github/copilot.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;skywind3000/asyncrun.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&quot;XadillaX/json-formatter.vim&quot;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&quot;godlygeek/tabular&quot;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&quot;vim-scripts/matchit.zip&quot;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tbodt/deoplete-tabnine&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;wellle/tmux-complete.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;jrozner/vim-antlr&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;MattesGroeger/vim-bookmarks&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;gennaro-tedesco/nvim-peekup&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tpope/vim-speeddating&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;easymotion/vim-easymotion&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;psf/black&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;lyokha/vim-xkbswitch&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;liuchengxu/graphviz.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;psliwka/vim-smoothie&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;rust-lang/rust.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;racer-rust/vim-racer&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;pangloss/vim-javascript&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;marko-cerovac/material.nvim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;integralist/vim-mypy&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;leafgarland/typescript-vim&#x27;</span><br><span class=\"line\">merge=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;ap/vim-css-color&#x27;</span><br><span class=\"line\">merge=false</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"CUSTOM-CONFIG\"><a href=\"#CUSTOM-CONFIG\" class=\"headerlink\" title=\"CUSTOM CONFIG\"></a>CUSTOM CONFIG</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function! myspacevim#before() abort</span><br><span class=\"line\"> call SpaceVim#custom#SPCGroupName([&#x27;G&#x27;], &#x27;+TestGroup&#x27;)</span><br><span class=\"line\"> call SpaceVim#custom#SPC(&#x27;nore&#x27;, [&#x27;G&#x27;, &#x27;t&#x27;], &#x27;echom 1&#x27;, &#x27;echomessage 1&#x27;, 1)</span><br><span class=\"line\">  &quot; let profile = SpaceVim#mapping#search#getprofile(&#x27;rg&#x27;)</span><br><span class=\"line\">&quot; let default_opt = profile.default_opts + [&#x27;--no-ignore-vcs&#x27;]</span><br><span class=\"line\">&quot; call SpaceVim#mapping#search#profile(&#123;&#x27;rg&#x27; : &#123;&#x27;default_opts&#x27; : default_opt&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">set clipboard+=unnamed</span><br><span class=\"line\">&quot;禁止生成临时文件</span><br><span class=\"line\">set noswapfile</span><br><span class=\"line\">&quot; 光标移动到buffer的顶部和底部时保持3行距离</span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;h :MRU&lt;CR&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">func! SqlToUpper()</span><br><span class=\"line\">    %s/\\&lt;select\\&gt;\\|\\&lt;from\\&gt;\\|\\&lt;as\\&gt;\\|\\&lt;where\\&gt;\\|\\&lt;if\\&gt;\\|\\&lt;not\\&gt;\\|\\&lt;group\\&gt;\\|\\&lt;by\\&gt;\\|\\&lt;left\\&gt;\\|\\&lt;right\\&gt;\\|\\&lt;join\\&gt;\\|\\&lt;outer\\&gt;\\|\\&lt;full\\&gt;\\|\\&lt;to_date\\&gt;\\|\\&lt;from_unixtime\\&gt;\\|\\&lt;unixtime_stamp\\&gt;\\|\\&lt;when\\&gt;\\|\\&lt;case\\&gt;\\|\\&lt;then\\&gt;\\|\\&lt;max\\&gt;\\|\\&lt;min\\&gt;\\|\\&lt;avg\\&gt;\\|\\&lt;end\\&gt;\\|\\&lt;else\\&gt;\\|\\&lt;and\\&gt;\\|\\&lt;or\\&gt;\\|\\&lt;on\\&gt;\\|\\&lt;count\\&gt;\\|\\&lt;sum\\&gt;|\\&lt;use\\&gt;|\\&lt;limit\\&gt;/\\U&amp;/g</span><br><span class=\"line\">    %s/\\&lt;add\\&gt;\\|\\&lt;admin\\&gt;\\|\\&lt;after\\&gt;\\|\\&lt;analyze\\&gt;\\|\\&lt;archive\\&gt;\\|\\&lt;asc\\&gt;\\|\\&lt;before\\&gt;\\|\\&lt;bucket\\&gt;\\|\\&lt;buckets\\&gt;\\|\\&lt;cascade\\&gt;\\|\\&lt;change\\&gt;\\|\\&lt;cluster\\&gt;\\|\\&lt;clustered\\&gt;\\|\\&lt;clusterstatus\\&gt;\\|\\&lt;collection\\&gt;\\|\\&lt;columns\\&gt;\\|\\&lt;comment\\&gt;\\|\\&lt;compact\\&gt;\\|\\&lt;compactions\\&gt;\\|\\&lt;compute\\&gt;\\|\\&lt;concatenate\\&gt;\\|\\&lt;continue\\&gt;\\|\\&lt;data\\&gt;\\|\\&lt;databases\\&gt;\\|\\&lt;datetime\\&gt;\\|\\&lt;day\\&gt;\\|\\&lt;dbproperties\\&gt;\\|\\&lt;deferred\\&gt;\\|\\&lt;defined\\&gt;\\|\\&lt;delimited\\&gt;\\|\\&lt;dependency\\&gt;\\|\\&lt;desc\\&gt;\\|\\&lt;directories\\&gt;\\|\\&lt;directory\\&gt;\\|\\&lt;disable\\&gt;\\|\\&lt;distribute\\&gt;\\|\\&lt;elem_type\\&gt;\\|\\&lt;enable\\&gt;\\|\\&lt;escaped\\&gt;\\|\\&lt;exclusive\\&gt;\\|\\&lt;explain\\&gt;\\|\\&lt;export\\&gt;\\|\\&lt;fields\\&gt;\\|\\&lt;file\\&gt;\\|\\&lt;fileformat\\&gt;\\|\\&lt;first\\&gt;\\|\\&lt;format\\&gt;\\|\\&lt;formatted\\&gt;\\|\\&lt;functions\\&gt;\\|\\&lt;hold_ddltime\\&gt;\\|\\&lt;idxproperties\\&gt;\\|\\&lt;ignore\\&gt;\\|\\&lt;index\\&gt;\\|\\&lt;indexes\\&gt;\\|\\&lt;inpath\\&gt;\\|\\&lt;inputdriver\\&gt;\\|\\&lt;inputformat\\&gt;\\|\\&lt;items\\&gt;\\|\\&lt;jar\\&gt;\\|\\&lt;keys\\&gt;\\|\\&lt;key_type\\&gt;\\|\\&lt;limit\\&gt;\\|\\&lt;lines\\&gt;\\|\\&lt;load\\&gt;\\|\\&lt;location\\&gt;\\|\\&lt;lock\\&gt;\\|\\&lt;locks\\&gt;\\|\\&lt;logical\\&gt;\\|\\&lt;long\\&gt;\\|\\&lt;mapjoin\\&gt;\\|\\&lt;materialized\\&gt;\\|\\&lt;metadata\\&gt;\\|\\&lt;minus\\&gt;\\|\\&lt;minute\\&gt;\\|\\&lt;month\\&gt;\\|\\&lt;msck\\&gt;\\|\\&lt;noscan\\&gt;\\|\\&lt;no_drop\\&gt;\\|\\&lt;offline\\&gt;\\|\\&lt;option\\&gt;\\|\\&lt;outputdriver\\&gt;\\|\\&lt;outputformat\\&gt;\\|\\&lt;overwrite\\&gt;\\|\\&lt;owner\\&gt;\\|\\&lt;partitioned\\&gt;\\|\\&lt;partitions\\&gt;\\|\\&lt;plus\\&gt;\\|\\&lt;pretty\\&gt;\\|\\&lt;principals\\&gt;\\|\\&lt;protection\\&gt;\\|\\&lt;purge\\&gt;\\|\\&lt;read\\&gt;\\|\\&lt;readonly\\&gt;\\|\\&lt;rebuild\\&gt;\\|\\&lt;recordreader\\&gt;\\|\\&lt;recordwriter\\&gt;\\|\\&lt;regexp\\&gt;\\|\\&lt;reload\\&gt;\\|\\&lt;rename\\&gt;\\|\\&lt;repair\\&gt;\\|\\&lt;replace\\&gt;\\|\\&lt;replication\\&gt;\\|\\&lt;restrict\\&gt;\\|\\&lt;rewrite\\&gt;\\|\\&lt;rlike\\&gt;\\|\\&lt;role\\&gt;\\|\\&lt;roles\\&gt;\\|\\&lt;schema\\&gt;\\|\\&lt;schemas\\&gt;\\|\\&lt;second\\&gt;\\|\\&lt;semi\\&gt;\\|\\&lt;serde\\&gt;\\|\\&lt;serdeproperties\\&gt;\\|\\&lt;server\\&gt;\\|\\&lt;sets\\&gt;\\|\\&lt;shared\\&gt;\\|\\&lt;show\\&gt;\\|\\&lt;show_database\\&gt;\\|\\&lt;skewed\\&gt;\\|\\&lt;sort\\&gt;\\|\\&lt;sorted\\&gt;\\|\\&lt;ssl\\&gt;\\|\\&lt;statistics\\&gt;\\|\\&lt;stored\\&gt;\\|\\&lt;streamtable\\&gt;\\|\\&lt;string\\&gt;\\|\\&lt;struct\\&gt;\\|\\&lt;tables\\&gt;\\|\\&lt;tblproperties\\&gt;\\|\\&lt;temporary\\&gt;\\|\\&lt;terminated\\&gt;\\|\\&lt;tinyint\\&gt;\\|\\&lt;touch\\&gt;\\|\\&lt;transactions\\&gt;\\|\\&lt;unarchive\\&gt;\\|\\&lt;undo\\&gt;\\|\\&lt;uniontype\\&gt;\\|\\&lt;unlock\\&gt;\\|\\&lt;unset\\&gt;\\|\\&lt;unsigned\\&gt;\\|\\&lt;uri\\&gt;\\|\\&lt;use\\&gt;\\|\\&lt;utc\\&gt;\\|\\&lt;utctimestamp\\&gt;\\|\\&lt;value_type\\&gt;\\|\\&lt;view\\&gt;\\|\\&lt;while\\&gt;\\|\\&lt;year\\&gt;\\&lt;all\\&gt;\\|\\&lt;alter\\&gt;\\|\\&lt;and\\&gt;\\|\\&lt;array\\&gt;\\|\\&lt;as\\&gt;\\|\\&lt;authorization\\&gt;\\|\\&lt;between\\&gt;\\|\\&lt;bigint\\&gt;\\|\\&lt;binary\\&gt;\\|\\&lt;boolean\\&gt;\\|\\&lt;both\\&gt;\\|\\&lt;by\\&gt;\\|\\&lt;case\\&gt;\\|\\&lt;cast\\&gt;\\|\\&lt;char\\&gt;\\|\\&lt;column\\&gt;\\|\\&lt;conf\\&gt;\\|\\&lt;create\\&gt;\\|\\&lt;cross\\&gt;\\|\\&lt;cube\\&gt;\\|\\&lt;current\\&gt;\\|\\&lt;current_date\\&gt;\\|\\&lt;current_timestamp\\&gt;\\|\\&lt;cursor\\&gt;\\|\\&lt;database\\&gt;\\|\\&lt;decimal\\&gt;\\|\\&lt;delete\\&gt;\\|\\&lt;describe\\&gt;\\|\\&lt;distinct\\&gt;\\|\\&lt;double\\&gt;\\|\\&lt;drop\\&gt;\\|\\&lt;else\\&gt;\\|\\&lt;end\\&gt;\\|\\&lt;exchange\\&gt;\\|\\&lt;exists\\&gt;\\|\\&lt;extended\\&gt;\\|\\&lt;external\\&gt;\\|\\&lt;fetch\\&gt;\\|\\&lt;float\\&gt;\\|\\&lt;following\\&gt;\\|\\&lt;for\\&gt;\\|\\&lt;from\\&gt;\\|\\&lt;full\\&gt;\\|\\&lt;function\\&gt;\\|\\&lt;grant\\&gt;\\|\\&lt;group\\&gt;\\|\\&lt;grouping\\&gt;\\|\\&lt;having\\&gt;\\|\\&lt;if\\&gt;\\|\\&lt;import\\&gt;\\|\\&lt;in\\&gt;\\|\\&lt;inner\\&gt;\\|\\&lt;insert\\&gt;\\|\\&lt;int\\&gt;\\|\\&lt;intersect\\&gt;\\|\\&lt;interval\\&gt;\\|\\&lt;into\\&gt;\\|\\&lt;is\\&gt;\\|\\&lt;join\\&gt;\\|\\&lt;lateral\\&gt;\\|\\&lt;left\\&gt;\\|\\&lt;less\\&gt;\\|\\&lt;like\\&gt;\\|\\&lt;local\\&gt;\\|\\&lt;macro\\&gt;\\|\\&lt;map\\&gt;\\|\\&lt;more\\&gt;\\|\\&lt;not\\&gt;\\|\\&lt;null\\&gt;\\|\\&lt;of\\&gt;\\|\\&lt;on\\&gt;\\|\\&lt;or\\&gt;\\|\\&lt;order\\&gt;\\|\\&lt;out\\&gt;\\|\\&lt;outer\\&gt;\\|\\&lt;over\\&gt;\\|\\&lt;partialscan\\&gt;\\|\\&lt;partition\\&gt;\\|\\&lt;percent\\&gt;\\|\\&lt;preceding\\&gt;\\|\\&lt;preserve\\&gt;\\|\\&lt;procedure\\&gt;\\|\\&lt;range\\&gt;\\|\\&lt;reads\\&gt;\\|\\&lt;reduce\\&gt;\\|\\&lt;revoke\\&gt;\\|\\&lt;right\\&gt;\\|\\&lt;rollup\\&gt;\\|\\&lt;row\\&gt;\\|\\&lt;rows\\&gt;\\|\\&lt;select\\&gt;\\|\\&lt;set\\&gt;\\|\\&lt;smallint\\&gt;\\|\\&lt;table\\&gt;\\|\\&lt;tablesample\\&gt;\\|\\&lt;then\\&gt;\\|\\&lt;timestamp\\&gt;\\|\\&lt;to\\&gt;\\|\\&lt;transform\\&gt;\\|\\&lt;trigger\\&gt;\\|\\&lt;truncate\\&gt;\\|\\&lt;unbounded\\&gt;\\|\\&lt;union\\&gt;\\|\\&lt;uniquejoin\\&gt;\\|\\&lt;update\\&gt;\\|\\&lt;user\\&gt;\\|\\&lt;using\\&gt;\\|\\&lt;utc_tmestamp\\&gt;\\|\\&lt;values\\&gt;\\|\\&lt;varchar\\&gt;\\|\\&lt;when\\&gt;\\|\\&lt;where\\&gt;\\|\\&lt;window\\&gt;\\|\\&lt;with\\&gt;/\\U&amp;/g</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">augroup black_on_save</span><br><span class=\"line\">  autocmd!</span><br><span class=\"line\">  autocmd BufWritePre *.py Black</span><br><span class=\"line\">augroup end</span><br><span class=\"line\"></span><br><span class=\"line\">let g:XkbSwitchEnabled = 1</span><br><span class=\"line\">map &lt;leader&gt;ma :ma </span><br><span class=\"line\">xmap ga &lt;Plug&gt;(EasyAlign)</span><br><span class=\"line\">nmap ga &lt;Plug&gt;(EasyAlign)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; fun! DeleteAllBuffersInWindow()</span><br><span class=\"line\">    &quot; let s:curWinNr = winnr()</span><br><span class=\"line\">    &quot; if winbufnr(s:curWinNr) == 1</span><br><span class=\"line\">        &quot; ret</span><br><span class=\"line\">    &quot; endif</span><br><span class=\"line\">    &quot; let s:curBufNr = bufnr(&quot;%&quot;)</span><br><span class=\"line\">    &quot; exe &quot;bn&quot;</span><br><span class=\"line\">    &quot; let s:nextBufNr = bufnr(&quot;%&quot;)</span><br><span class=\"line\">    &quot; while s:nextBufNr != s:curBufNr</span><br><span class=\"line\">        &quot; exe &quot;bn&quot;</span><br><span class=\"line\">        &quot; exe &quot;bdel &quot;.s:nextBufNr</span><br><span class=\"line\">        &quot; let s:nextBufNr = bufnr(&quot;%&quot;)</span><br><span class=\"line\">    &quot; endwhile</span><br><span class=\"line\">&quot; endfun</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; map &lt;leader&gt;&lt;leader&gt;bda     :call DeleteAllBuffersInWindow()</span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;- :ChooseWin&lt;CR&gt;</span><br><span class=\"line\">let g:choosewin_overlay_enable = 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;f :!black %&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; map &lt;leader&gt;&lt;leader&gt;s &lt;Plug&gt;(easymotion-s)</span><br><span class=\"line\">&quot; map &lt;leader&gt;&lt;leader&gt;f &lt;Plug&gt;(easymotion-f)</span><br><span class=\"line\">nmap &lt;Leader&gt;; &lt;Plug&gt;(easymotion-next)</span><br><span class=\"line\">nmap &lt;Leader&gt;, &lt;Plug&gt;(easymotion-prev)</span><br><span class=\"line\">&quot; map &lt;Leader&gt;&lt;leader&gt; &lt;Plug&gt;(easymotion-prefix)</span><br><span class=\"line\">&quot; nmap gw        :InteractiveWindow&lt;CR&gt;</span><br><span class=\"line\">&quot; nmap &lt;leader&gt;w :InteractiveWindow&lt;CR&gt;</span><br><span class=\"line\">nmap ]h &lt;Plug&gt;(GitGutterNextHunk)</span><br><span class=\"line\">nmap [h &lt;Plug&gt;(GitGutterPrevHunk)</span><br><span class=\"line\"></span><br><span class=\"line\">hi   MarkWord1    ctermbg=Cyan           ctermfg=Black    guibg=#FFDAB9 guifg=Black</span><br><span class=\"line\">hi   MarkWord2    ctermbg=Green          ctermfg=Black    guibg=#2F4F4F guifg=Black</span><br><span class=\"line\">hi   MarkWord3    ctermbg=Yellow         ctermfg=Black    guibg=#191970 guifg=Black</span><br><span class=\"line\">hi   MarkWord4    ctermbg=Red            ctermfg=Black    guibg=#40E0D0 guifg=Black</span><br><span class=\"line\">hi   MarkWord5    ctermbg=Magenta        ctermfg=Black    guibg=#00FF00 guifg=Black</span><br><span class=\"line\">hi   MarkWord6    ctermbg=Blue           ctermfg=Black    guibg=#FFFF00 guifg=Black</span><br><span class=\"line\">hi   MarkWord7    ctermbg=Brown          ctermfg=Black    guibg=#D2691E guifg=Black</span><br><span class=\"line\">hi   MarkWord8    ctermbg=LightCyan      ctermfg=Red      guibg=#FF0000 guifg=Black</span><br><span class=\"line\">hi   MarkWord9    ctermbg=LightGreen     ctermfg=Red      guibg=#9400D3 guifg=Black</span><br><span class=\"line\">hi   MarkWord10   ctermbg=LightYellow    ctermfg=Red      guibg=#CDB38B guifg=Black</span><br><span class=\"line\">hi   MarkWord11   ctermbg=LightRed       ctermfg=Red      guibg=#27408B guifg=Black</span><br><span class=\"line\">hi   MarkWord12   ctermbg=LightMagenta   ctermfg=Red      guibg=#E0FFFF guifg=Black</span><br><span class=\"line\">hi   MarkWord13   ctermbg=LightBlue      ctermfg=Red      guibg=#00CD00 guifg=Black</span><br><span class=\"line\">hi   MarkWord14   ctermbg=DarkBlue       ctermfg=Blue     guibg=#FFEC8B guifg=Black</span><br><span class=\"line\">hi   MarkWord15   ctermbg=DarkGreen      ctermfg=Blue     guibg=#FFD700 guifg=Black</span><br><span class=\"line\">hi   MarkWord16   ctermbg=DarkCyan       ctermfg=Blue     guibg=#8B658B guifg=Black</span><br><span class=\"line\">hi   MarkWord17   ctermbg=DarkRed        ctermfg=Blue     guibg=#8B3A3A guifg=Black</span><br><span class=\"line\">hi   MarkWord18   ctermbg=DarkMagenta    ctermfg=Blue     guibg=#FF7F24 guifg=Black</span><br><span class=\"line\">hi   MarkWord19   ctermbg=DarkYellow     ctermfg=Blue     guibg=#CD2626 guifg=Black</span><br><span class=\"line\">hi   MarkWord20   ctermbg=DarkGray       ctermfg=Blue     guibg=#FF7F00 guifg=Black</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">noremap &lt;leader&gt;&lt;leader&gt;ff :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf file %s&quot;, &quot;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;leader&gt;&lt;leader&gt;fm :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf mru %s&quot;, &quot;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;leader&gt;&lt;leader&gt;fh :Leaderf cmdHistory &lt;CR&gt;</span><br><span class=\"line\">noremap &lt;leader&gt;&lt;leader&gt;ft :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf tag %s&quot;, &quot;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;leader&gt;&lt;leader&gt;fr :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf --recall&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;C-G&gt; :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf! rg --current-buffer -e %s &quot;, expand(&quot;&lt;cword&gt;&quot;))&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;C-F&gt; :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf! rg --stayOpen -g &#x27;*.hql&#x27; -e %s  &quot;, expand(&quot;&lt;cword&gt;&quot;))&lt;CR&gt;</span><br><span class=\"line\">noremap  fr :&lt;C-U&gt;Leaderf! rg --recall&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">let g:Lf_GtagsAutoGenerate = 0</span><br><span class=\"line\">let g:Lf_Gtagslabel = &#x27;native-pygments&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">:imap &lt;C-J&gt; &lt;Plug&gt;snipMateNextOrTrigger</span><br><span class=\"line\">:smap &lt;C-J&gt; &lt;Plug&gt;snipMateNextOrTrigger</span><br><span class=\"line\"></span><br><span class=\"line\">let g:netrw_nogx = 1 &quot; disable netrw&#x27;s gx mapping.</span><br><span class=\"line\"></span><br><span class=\"line\">nmap &lt;leader&gt;gx :OpenBrowser &lt;c-r&gt;&lt;c-a&gt;&lt;CR&gt;</span><br><span class=\"line\">vmap &lt;leader&gt;gx :OpenBrowser &lt;c-r&gt;&lt;c-a&gt;&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">function! HandleURL()</span><br><span class=\"line\">  let s:uri = matchstr(getline(&quot;.&quot;), &#x27;[a-z]*:\\/\\/[^ &gt;,;]*&#x27;)</span><br><span class=\"line\">  echo s:uri</span><br><span class=\"line\">  if s:uri != &quot;&quot;</span><br><span class=\"line\">    execute &quot;!open &#x27;&quot;.s:uri.&quot;&#x27;&quot;</span><br><span class=\"line\">  else</span><br><span class=\"line\">    echo &quot;No URI found in line.&quot;</span><br><span class=\"line\">  endif</span><br><span class=\"line\">endfunction</span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;u :call HandleURL()&lt;cr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;gs :Gstatus&lt;CR&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">&quot; https://data.bytedance.net/coral/datamap/detail/table_info/HiveTable/ea_rpt/&#123;query&#125;/block_info#group=default</span><br><span class=\"line\">&quot; https://data.bytedance.net/coral/datamap/detail/data_preview/HiveTable/ea_rpt/&#123;query&#125;=default</span><br><span class=\"line\">let g:openbrowser_search_engines = &#123;</span><br><span class=\"line\">\\   &#x27;stg&#x27;:&#x27;https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_stg/&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;ods&#x27;:&#x27;https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_ods/&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;mds&#x27;:&#x27;https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_mds/&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;dm&#x27; :&#x27;https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_dm/&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;rpt&#x27;:&#x27;https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_rpt/&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;coral&#x27;: &#x27;https://data.bytedance.net/coral/datamap_new/result?query=&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;trans&#x27;: &#x27;https://translate.google.com.hk/?sl=zh-CN&amp;tl=en&amp;text=&#123;query&#125;&amp;op=translate&#x27;,</span><br><span class=\"line\">\\   &#x27;manta&#x27;:&#x27;https://data.bytedance.net/manta/monitor/hive?current=1&amp;is_trigger=false&amp;limit=10&amp;monitor_state=all&amp;monitor_types=all&amp;projects=cn_532&amp;query=&#123;query&#125;&amp;search_type=db_tb_name&amp;type=cn&#x27;,</span><br><span class=\"line\">\\   &#x27;self&#x27;:&#x27;https://data.bytedance.net/manta/rule/hive/sql?alarm_level=all&amp;is_myself=false&amp;is_trigger=false&amp;monitor_state=all&amp;monitor_types=all&amp;query=&#123;query&#125;&amp;search_type=monitor_name&amp;type=cn&amp;projects=cn_532&#x27;,</span><br><span class=\"line\">\\   &#x27;manta_report&#x27;:&#x27;https://data.bytedance.net/manta/datacheck/list?is_myself=false&amp;query=&#123;query&#125;&amp;search_type=db_tb_name&amp;type=cn&#x27;</span><br><span class=\"line\">\\&#125;</span><br><span class=\"line\">nmap &lt;leader&gt;gg :OpenBrowserSearch &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;leader&gt;gt :OpenBrowserSearch -trans &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">func! MantaReport()</span><br><span class=\"line\">    let l:engine = expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">    echom l:engine</span><br><span class=\"line\">    execute &#x27;silent :OpenBrowserSearch -manta_report &#x27; . l:engine</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">func! Manta()</span><br><span class=\"line\">    let l:engine = expand(&quot;&lt;cword&gt;&quot;)</span><br><span class=\"line\">    echom l:engine</span><br><span class=\"line\">    execute &#x27;silent :OpenBrowserSearch -manta &#x27; . l:engine</span><br><span class=\"line\">    &quot; execute &#x27;silent :OpenBrowserSearch -self &#x27; . l:engine</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">func! EchoCword()</span><br><span class=\"line\">    let l:cword= expand(&quot;&lt;cword&gt;&quot;)</span><br><span class=\"line\">    echom l:cword</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">func! AccessCoral()</span><br><span class=\"line\"></span><br><span class=\"line\">    let l:engine = expand(&quot;&lt;cword&gt;&quot;)</span><br><span class=\"line\">    echom l:engine</span><br><span class=\"line\">    </span><br><span class=\"line\">    if( stridx(l:engine, &quot;stg&quot;) == 0 ) </span><br><span class=\"line\">        &quot; echom &quot;stg&quot;</span><br><span class=\"line\">        execute &#x27;silent :OpenBrowserSearch -stg &#x27; . l:engine</span><br><span class=\"line\">        execute &#x27;silent :OpenBrowserSearch -uatstg &#x27; . l:engine</span><br><span class=\"line\">    elseif(stridx(l:engine, &quot;ods&quot;) == 0)</span><br><span class=\"line\">        &quot; echom &quot;ods&quot;</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -ods &#x27; . l:engine</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -uatods &#x27; . l:engine</span><br><span class=\"line\">    elseif(stridx(l:engine, &quot;mds&quot;) == 0)</span><br><span class=\"line\">        &quot; echom &quot;mds&quot;</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -mds &#x27; . l:engine</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -uatmds &#x27; . l:engine</span><br><span class=\"line\">    elseif(stridx(l:engine, &quot;dm&quot;) == 0)</span><br><span class=\"line\">        &quot; echom &quot;dm&quot;</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -dm &#x27; . l:engine</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -uatdm &#x27; . l:engine</span><br><span class=\"line\">    elseif(stridx(l:engine, &quot;rpt&quot;) == 0)</span><br><span class=\"line\">        &quot; echom &quot;rpt&quot;</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -rpt &#x27; . l:engine</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -uatrpt &#x27; . l:engine</span><br><span class=\"line\">    elseif(stridx(l:engine, &quot;http&quot;) == 0)</span><br><span class=\"line\">        execute &#x27;:OpenBrowser()&#x27; </span><br><span class=\"line\">    else</span><br><span class=\"line\">        echom &quot;coral&quot;</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -coral &#x27; . l:engine</span><br><span class=\"line\">    endif</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">let g:Lf_NumberOfHighlight=1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">func! Findtable()</span><br><span class=\"line\">    let l:table_name = expand(&quot;&lt;cword&gt;&quot;)</span><br><span class=\"line\">    echo l:table_name</span><br><span class=\"line\">    execute &#x27;:/).*&#x27; . l:table_name</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; don&#x27;t show the help in normal mode</span><br><span class=\"line\">let g:Lf_HideHelp = 1</span><br><span class=\"line\">let g:Lf_UseCache = 0</span><br><span class=\"line\">let g:Lf_UseVersionControlTool = 0</span><br><span class=\"line\">let g:Lf_IgnoreCurrentBufferName = 1</span><br><span class=\"line\">&quot; popup mode</span><br><span class=\"line\">&quot; let g:Lf_WindowPosition = &#x27;right&#x27;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">let g:Lf_ShowDevIcons = 1</span><br><span class=\"line\">let g:Lf_WindowHeight = 0.2                               </span><br><span class=\"line\">let g:Lf_PreviewInPopup = 1</span><br><span class=\"line\">let g:Lf_StlSeparator = &#123; &#x27;left&#x27;: &quot;\\ue0b0&quot;, &#x27;right&#x27;: &quot;\\ue0b2&quot;, &#x27;font&#x27;: &quot;DejaVu Sans Mono for Powerline&quot; &#125;</span><br><span class=\"line\">let g:Lf_ShowRelativePath = 1</span><br><span class=\"line\">let g:Lf_PreviewResult = &#123;</span><br><span class=\"line\">        \\ &#x27;File&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Buffer&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Mru&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Tag&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;BufTag&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Function&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Line&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Colorscheme&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Rg&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Gtags&#x27;: 1</span><br><span class=\"line\">        \\&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">let g:Lf_PreviewHorizontalPosition = &#x27;right&#x27;                    </span><br><span class=\"line\">let g:Lf_ShortcutF =&#x27;&lt;leader&gt;w&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">map = &lt;Plug&gt;(expand_region_expand)</span><br><span class=\"line\">map - &lt;Plug&gt;(expand_region_shrink)</span><br><span class=\"line\">let g:mwDefaultHighlightingPalette = &#x27;maximum&#x27;</span><br><span class=\"line\">&quot; nnoremap &lt;silent&gt;&lt;Leader&gt;m m</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Plugin key-mappings.</span><br><span class=\"line\">&quot; Note: It must be &quot;imap&quot; and &quot;smap&quot;.  It uses &lt;Plug&gt; mappings.</span><br><span class=\"line\">imap &lt;C-k&gt;     &lt;Plug&gt;(neosnippet_expand_or_jump)</span><br><span class=\"line\">smap &lt;C-k&gt;     &lt;Plug&gt;(neosnippet_expand_or_jump)</span><br><span class=\"line\">xmap &lt;C-k&gt;     &lt;Plug&gt;(neosnippet_expand_target)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; SuperTab like snippets behavior.</span><br><span class=\"line\">&quot; Note: It must be &quot;imap&quot; and &quot;smap&quot;.  It uses &lt;Plug&gt; mappings.</span><br><span class=\"line\">&quot;imap &lt;expr&gt;&lt;TAB&gt;</span><br><span class=\"line\">&quot; \\ pumvisible() ? &quot;\\&lt;C-n&gt;&quot; :</span><br><span class=\"line\">&quot; \\ neosnippet#expandable_or_jumpable() ?</span><br><span class=\"line\">&quot; \\    &quot;\\&lt;Plug&gt;(neosnippet_expand_or_jump)&quot; : &quot;\\&lt;TAB&gt;&quot;</span><br><span class=\"line\">smap &lt;expr&gt;&lt;TAB&gt; neosnippet#expandable_or_jumpable() ?</span><br><span class=\"line\">\\ &quot;\\&lt;Plug&gt;(neosnippet_expand_or_jump)&quot; : &quot;\\&lt;TAB&gt;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; For conceal markers.</span><br><span class=\"line\">if has(&#x27;conceal&#x27;)</span><br><span class=\"line\">  set conceallevel=2 concealcursor=niv</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Enable snipMate compatibility feature.</span><br><span class=\"line\">let g:neosnippet#enable_snipmate_compatibility = 1</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Tell Neosnippet about the other snippets</span><br><span class=\"line\">let g:neosnippet#snippets_directory=&#x27;~/.vim_back/bundle/vim-snippets/snippets&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">imap &lt;silent&gt;&lt;script&gt;&lt;expr&gt; &lt;C-J&gt; copilot#Accept(&quot;\\&lt;CR&gt;&quot;)</span><br><span class=\"line\">let g:copilot_no_tab_map = v:true</span><br><span class=\"line\">&quot; for .hql files</span><br><span class=\"line\">au BufNewFile,BufRead *.hql set filetype=hive expandtab</span><br><span class=\"line\"></span><br><span class=\"line\">au BufNewFile,BufRead *.hql set filetype=hive expandtab</span><br><span class=\"line\"></span><br><span class=\"line\">let g:Lf_ShowRelativePath=1</span><br><span class=\"line\">map &lt;leader&gt;cc &lt;plug&gt;NERDCommenterToggle</span><br><span class=\"line\"></span><br><span class=\"line\">imap &lt;silent&gt;&lt;script&gt;&lt;expr&gt; &lt;C-J&gt; copilot#Accept(&quot;\\&lt;CR&gt;&quot;)</span><br><span class=\"line\">let g:copilot_no_tab_map = v:true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; Help Vim recognize *.sbt and *.sc as Scala files</span><br><span class=\"line\">au BufRead,BufNewFile *.sbt,*.sc set filetype=scala</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Used to expand decorations in worksheets</span><br><span class=\"line\">&quot; nmap &lt;Leader&gt;ws &lt;Plug&gt;(coc-metals-expand-decoration)</span><br><span class=\"line\">&quot;&quot; Toggle panel with Tree Views</span><br><span class=\"line\">&quot;nnoremap &lt;silent&gt; &lt;space&gt;t :&lt;C-u&gt;CocCommand metals.tvp&lt;CR&gt;</span><br><span class=\"line\">&quot;&quot; Toggle Tree View &#x27;metalsPackages&#x27;</span><br><span class=\"line\">&quot;nnoremap &lt;silent&gt; &lt;space&gt;tp :&lt;C-u&gt;CocCommand metals.tvp metalsPackages&lt;CR&gt;</span><br><span class=\"line\">&quot;&quot; Toggle Tree View &#x27;metalsCompile&#x27;</span><br><span class=\"line\">&quot;nnoremap &lt;silent&gt; &lt;space&gt;tc :&lt;C-u&gt;CocCommand metals.tvp metalsCompile&lt;CR&gt;</span><br><span class=\"line\">&quot;&quot; Toggle Tree View &#x27;metalsBuild&#x27;</span><br><span class=\"line\">&quot;nnoremap &lt;silent&gt; &lt;space&gt;tb :&lt;C-u&gt;CocCommand metals.tvp metalsBuild&lt;CR&gt;</span><br><span class=\"line\">&quot;&quot; Reveal current current class (trait or object) in Tree View &#x27;metalsPackages&#x27;</span><br><span class=\"line\">&quot;nnoremap &lt;silent&gt; &lt;space&gt;tf :&lt;C-u&gt;CocCommand metals.revealInTreeView metalsPackages&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; How to open the generated output file.</span><br><span class=\"line\">&quot; If does not exist, graphviz.vim will automatically choose the right way depending on the platform.</span><br><span class=\"line\">let g:graphviz_viewer = &#x27;open&#x27;</span><br><span class=\"line\">let g:graphviz_output_format = &#x27;svg&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;gvs :GraphvizShow&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;gvc :GraphvizCompile&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;gvg :!dot -Tsvg % -o ~/Desktop/output.svg &amp;&amp; open ~/Desktop/output.svg &lt;CR&gt;</span><br><span class=\"line\">function! MyGraphViz()</span><br><span class=\"line\">    :Graphviz!!</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if exists(&quot;:Tabularize&quot;)</span><br><span class=\"line\">  nmap &lt;Leader&gt;a= :Tabularize /=&lt;CR&gt;</span><br><span class=\"line\">  vmap &lt;Leader&gt;a= :Tabularize /=&lt;CR&gt;</span><br><span class=\"line\">  nmap &lt;Leader&gt;a: :Tabularize /:\\zs&lt;CR&gt;</span><br><span class=\"line\">  vmap &lt;Leader&gt;a: :Tabularize /:\\zs&lt;CR&gt;</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\">inoremap &lt;silent&gt; &lt;Bar&gt;   &lt;Bar&gt;&lt;Esc&gt;:call &lt;SID&gt;align()&lt;CR&gt;a</span><br><span class=\"line\"></span><br><span class=\"line\">function! s:align()</span><br><span class=\"line\">  let p = &#x27;^\\s*|\\s.*\\s|\\s*$&#x27;</span><br><span class=\"line\">  if exists(&#x27;:Tabularize&#x27;) &amp;&amp; getline(&#x27;.&#x27;) =~# &#x27;^\\s*|&#x27; &amp;&amp; (getline(line(&#x27;.&#x27;)-1) =~# p || getline(line(&#x27;.&#x27;)+1) =~# p)</span><br><span class=\"line\">    let column = strlen(substitute(getline(&#x27;.&#x27;)[0:col(&#x27;.&#x27;)],&#x27;[^|]&#x27;,&#x27;&#x27;,&#x27;g&#x27;))</span><br><span class=\"line\">    let position = strlen(matchstr(getline(&#x27;.&#x27;)[0:col(&#x27;.&#x27;)],&#x27;.*|\\s*\\zs.*&#x27;))</span><br><span class=\"line\">    Tabularize/|/l1</span><br><span class=\"line\">    normal! 0</span><br><span class=\"line\">    call search(repeat(&#x27;[^|]*|&#x27;,column).&#x27;\\s\\&#123;-\\&#125;&#x27;.repeat(&#x27;.&#x27;,position),&#x27;ce&#x27;,line(&#x27;.&#x27;))</span><br><span class=\"line\">  endif</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; let g:spacevim_project_auto_root=0</span><br><span class=\"line\"></span><br><span class=\"line\">let g:spacevim_project_auto_root=&#x27;current&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">non_root = &#x27;current&#x27;_create.py &quot; . l:db . &quot; &quot; . l:tb</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function! DoradoOpen()</span><br><span class=\"line\">  let l:keyword= expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">  execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; . &quot; dorado_open &quot; . l:keyword</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function! DoradoIdOpen()</span><br><span class=\"line\">  let l:keyword= expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">  execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; . &quot; dorado_id_open &quot; . l:keyword</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function! AllCoralOpen()</span><br><span class=\"line\">\tlet l:keyword= expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">\t&quot; execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; &quot;coral_field&quot;   . &quot; &quot; . l:keyword</span><br><span class=\"line\">\t&quot; execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; &quot;coral_block&quot;   . &quot; &quot; . l:keyword</span><br><span class=\"line\">\t&quot; execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; &quot;coral_preview&quot; . &quot; &quot; . l:keyword</span><br><span class=\"line\">\t&quot; execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; &quot;coral_produce&quot; . &quot; &quot; . l:keyword</span><br><span class=\"line\">\texecute &quot;!python ~/opt/tools/common_open.py &quot; &quot;coral_field&quot;   . &quot; &quot; . l:keyword</span><br><span class=\"line\">\texecute &quot;!python ~/opt/tools/common_open.py &quot; &quot;coral_block&quot;   . &quot; &quot; . l:keyword</span><br><span class=\"line\">\texecute &quot;!python ~/opt/tools/common_open.py &quot; &quot;coral_preview&quot; . &quot; &quot; . l:keyword</span><br><span class=\"line\">\texecute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; &quot;coral_produce&quot; . &quot; &quot; . l:keyword</span><br><span class=\"line\">    &quot; sleep 10</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function! DirectUrl()</span><br><span class=\"line\">\texecute &quot;:!python ~/opt/tools/multi_open.py &quot; . @z</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function! VisualSelection()</span><br><span class=\"line\">    if mode()==&quot;v&quot;</span><br><span class=\"line\">        let [line_start, column_start] = getpos(&quot;v&quot;)[1:2]</span><br><span class=\"line\">        let [line_end, column_end] = getpos(&quot;.&quot;)[1:2]</span><br><span class=\"line\">    else</span><br><span class=\"line\">        let [line_start, column_start] = getpos(&quot;&#x27;&lt;&quot;)[1:2]</span><br><span class=\"line\">        let [line_end, column_end] = getpos(&quot;&#x27;&gt;&quot;)[1:2]</span><br><span class=\"line\">    end</span><br><span class=\"line\"></span><br><span class=\"line\">    if (line2byte(line_start)+column_start) &gt; (line2byte(line_end)+column_end)</span><br><span class=\"line\">        let [line_start, column_start, line_end, column_end] =</span><br><span class=\"line\">        \\   [line_end, column_end, line_start, column_start]</span><br><span class=\"line\">    end</span><br><span class=\"line\">    let lines = getline(line_start, line_end)</span><br><span class=\"line\">    if len(lines) == 0</span><br><span class=\"line\">            return [&#x27;&#x27;]</span><br><span class=\"line\">    endif</span><br><span class=\"line\">    if &amp;selection ==# &quot;exclusive&quot;</span><br><span class=\"line\">        let column_end -= 1 &quot;Needed to remove the last character to make it match the visual selction</span><br><span class=\"line\">    endif</span><br><span class=\"line\">    if visualmode() ==# &quot;\\&lt;C-V&gt;&quot;</span><br><span class=\"line\">        for idx in range(len(lines))</span><br><span class=\"line\">            let lines[idx] = lines[idx][: column_end - 1]</span><br><span class=\"line\">            let lines[idx] = lines[idx][column_start - 1:]</span><br><span class=\"line\">        endfor</span><br><span class=\"line\">    else</span><br><span class=\"line\">        let lines[-1] = lines[-1][: column_end - 1]</span><br><span class=\"line\">        let lines[ 0] = lines[ 0][column_start - 1:]</span><br><span class=\"line\">    endif</span><br><span class=\"line\"></span><br><span class=\"line\">\tlet ret = join(lines, &quot;,&quot;)</span><br><span class=\"line\">    &quot; echo ret</span><br><span class=\"line\">    &quot; echom ret</span><br><span class=\"line\">\tcall setreg(&#x27;z&#x27;, ret)</span><br><span class=\"line\">    &quot; execute &quot;:!python ~/opt/tools/multi_open.py &quot; . @z</span><br><span class=\"line\">\treturn ret</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">function! GetDdl() abort</span><br><span class=\"line\">  let l:dbtb=expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">  echo l:dbtb</span><br><span class=\"line\">  execute &quot;:AsyncRun python ~/opt/tools/ddl.py &quot; . l:dbtb </span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">function! GetTask() abort</span><br><span class=\"line\">  let l:dbtb=expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">  echo l:dbtb</span><br><span class=\"line\">  execute &quot;:AsyncRun python ~/opt/tools/task.py &quot; . l:dbtb </span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;m :MaximizerToggle &lt;CR&gt;</span><br><span class=\"line\">map &lt;F10&gt; :call MyGraphViz()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F2&gt; :MaximizerToggle&lt;CR&gt;</span><br><span class=\"line\">map &lt;F4&gt; :call Findtable()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F5&gt; :call TritonAuthApply()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F6&gt; :call SqlToUpper()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F7&gt; :call PlantumlOpen()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F8&gt; :call Manta()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F9&gt; :call AccessCoral()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;ca :call AllCoralOpen()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;dh :call SubStitute()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;do :call DoradoOpen()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;dp :call DataPreview()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;dt :call DoradoIdOpen()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;mc :call MantaDataExploreCreate()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;mp :call MantaReport()&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">function! MultiOpenFunc()</span><br><span class=\"line\"></span><br><span class=\"line\">    let l:content = VisualSelection()</span><br><span class=\"line\">    echom l:content </span><br><span class=\"line\">    &quot; sleep 5</span><br><span class=\"line\">    execute &quot;:!python ~/opt/tools/multi_open.py &quot; . l:content</span><br><span class=\"line\"></span><br><span class=\"line\">endfunction </span><br><span class=\"line\">function! CoralBatchOp(func_select)</span><br><span class=\"line\">    let l:content = VisualSelection()</span><br><span class=\"line\"></span><br><span class=\"line\">    echom l:content</span><br><span class=\"line\">    echom &quot;===================================&quot;</span><br><span class=\"line\">    echom a:func_select</span><br><span class=\"line\">    echom &quot;===================================&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    if a:func_select ==# &quot;dorado_open_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;dorado_open_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    elseif a:func_select ==# &quot;dorado_id_open_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;dorado_id_open_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    elseif a:func_select ==# &quot;coral_field_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;coral_field_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    elseif a:func_select ==# &quot;coral_block_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;coral_block_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    elseif a:func_select ==# &quot;coral_preview_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;coral_preview_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    elseif a:func_select ==# &quot;coral_produce_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;coral_produce_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    endif </span><br><span class=\"line\">    &quot; sleep 5</span><br><span class=\"line\"></span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">function! OpenInstances()</span><br><span class=\"line\"></span><br><span class=\"line\">    let l:content = VisualSelection()</span><br><span class=\"line\">    echom l:content</span><br><span class=\"line\">    execute &quot;:!python /Users/bytedance/opt/tools/instance.py &quot; . l:content </span><br><span class=\"line\">    sleep 5</span><br><span class=\"line\"></span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">if !has(&#x27;python3&#x27;)</span><br><span class=\"line\">  echo &quot;Error: Required vim compiled with +python3&quot;</span><br><span class=\"line\">  finish</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">xnoremap &lt;Leader&gt;dm :&lt;C-u&gt;call MultiOpenFunc()&lt;CR&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;dg :call GenerateSQL()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;dd :call GetDdl()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;dt :call GetTask()&lt;CR&gt;</span><br><span class=\"line\">xnoremap &lt;Leader&gt;do :&lt;C-u&gt;call CoralBatchOp(&quot;dorado_open_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;di :&lt;C-u&gt;call CoralBatchOp(&quot;dorado_id_open_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;df :&lt;C-u&gt;call CoralBatchOp(&quot;coral_field_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;db :&lt;C-u&gt;call CoralBatchOp(&quot;coral_block_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;dv :&lt;C-u&gt;call CoralBatchOp(&quot;coral_preview_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;dp :&lt;C-u&gt;call CoralBatchOp(&quot;coral_produce_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;di :&lt;C-u&gt;call OpenInstances()&lt;CR&gt; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">function! SubStitute()</span><br><span class=\"line\">    :%s/ea_stg/ea_lark_expense_sensitive/g</span><br><span class=\"line\">    :%s/ea_ods/ea_lark_expense_sensitive/g</span><br><span class=\"line\">    :%s/ea_mds/ea_lark_expense_sensitive/g</span><br><span class=\"line\">    :%s/mds_/dwd_/g</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;pr :retab&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">highlight BookmarkSign ctermbg=NONE ctermfg=160</span><br><span class=\"line\">highlight BookmarkLine ctermbg=194 ctermfg=NONE</span><br><span class=\"line\">let g:bookmark_sign = &#x27;♥&#x27;</span><br><span class=\"line\">let g:bookmark_highlight_lines = 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">function! LibrarySorter()</span><br><span class=\"line\">python3 &lt;&lt; EOF</span><br><span class=\"line\">import vim</span><br><span class=\"line\">EOF</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">nnoremap &lt;c-j&gt; &lt;cmd&gt;call smoothie#do(&quot;\\&lt;C-D&gt;&quot;) &lt;CR&gt;</span><br><span class=\"line\">map &lt;c-d&gt; &lt;cmd&gt;call smoothie#downwards()&lt;CR&gt;</span><br><span class=\"line\">vnoremap &lt;c-j&gt; &lt;cmd&gt;call smoothie#do(&quot;\\&lt;C-D&gt;&quot;) &lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">let g:bookmark_save_per_working_dir = 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; let g:LanguageClient_serverCommands = &#123;</span><br><span class=\"line\">    &quot; \\ &#x27;rust&#x27;: [&#x27;~/.cargo/bin/rustup&#x27;, &#x27;run&#x27;, &#x27;stable&#x27;, &#x27;rls&#x27;],</span><br><span class=\"line\">    &quot; \\ &#125;</span><br><span class=\"line\">&quot; noremap &lt;silent&gt; gt&lt;Plug&gt;(lcn-definition)</span><br><span class=\"line\"></span><br><span class=\"line\">let g:LanguageClient_serverCommands = &#123;</span><br><span class=\"line\">\\ &#x27;rust&#x27;: [&#x27;rust-analyzer&#x27;],</span><br><span class=\"line\">\\ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">nmap &lt;silent&gt;ldg :call CocAction(&#x27;diagnosticInfo&#x27;)&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;silent&gt;ldf :call CocAction(&#x27;jumpDefinition&#x27;)&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;silent&gt;ljd :call CocAction(&#x27;jumpDeclaration&#x27;)&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;silent&gt;ltd :call CocAction(&#x27;jumpTypeDefinition&#x27;)&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">let g:material_style = &quot;palenight&quot;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; nnoremap &lt;Leader&gt;dd :call vimspector#Launch()&lt;CR&gt;</span><br><span class=\"line\">&quot; nnoremap &lt;Leader&gt;de :call vimspector#Reset()&lt;CR&gt;</span><br><span class=\"line\">&quot; nnoremap &lt;Leader&gt;dc :call vimspector#Continue()&lt;CR&gt;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; nnoremap &lt;Leader&gt;dt :call vimspector#ToggleBreakpoint()&lt;CR&gt;</span><br><span class=\"line\">&quot; nnoremap &lt;Leader&gt;dT :call vimspector#ClearBreakpoints()&lt;CR&gt;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; nmap &lt;Leader&gt;dk &lt;Plug&gt;VimspectorRestart</span><br><span class=\"line\">&quot; nmap &lt;Leader&gt;dh &lt;Plug&gt;VimspectorStepOut</span><br><span class=\"line\">&quot; nmap &lt;Leader&gt;dl &lt;Plug&gt;VimspectorStepInto</span><br><span class=\"line\">&quot; nmap &lt;Leader&gt;dj &lt;Plug&gt;VimspectorStepOver</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">let g:vimspector_enable_mappings = &#x27;HUMAN&#x27;</span><br><span class=\"line\">map &lt;leader&gt;fdi :setlocal foldmethod=indent&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;fdm :setLocal foldmethod=manual&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;m :Mark&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">let g:user_emmet_settings = &#123;</span><br><span class=\"line\">\\  &#x27;php&#x27; : &#123;</span><br><span class=\"line\">\\    &#x27;extends&#x27; : &#x27;html&#x27;,</span><br><span class=\"line\">\\  &#125;,</span><br><span class=\"line\">\\  &#x27;scala&#x27; : &#123;</span><br><span class=\"line\">\\    &#x27;extends&#x27; : &#x27;html&#x27;,</span><br><span class=\"line\">\\  &#125;,</span><br><span class=\"line\">\\  &#x27;java&#x27; : &#123;</span><br><span class=\"line\">\\    &#x27;extends&#x27; : &#x27;html&#x27;,</span><br><span class=\"line\">\\  &#125;,</span><br><span class=\"line\">\\&#125;</span><br><span class=\"line\">let g:user_emmet_install_global = 0</span><br><span class=\"line\">autocmd FileType html,css,java,scala,dot,tsx EmmetInstall</span><br><span class=\"line\"></span><br><span class=\"line\">let g:user_emmet_leader_key=&#x27;&lt;C-Z&gt;&#x27;</span><br><span class=\"line\">let g:typescript_compiler_binary = &#x27;tsc&#x27;</span><br><span class=\"line\">let g:typescript_compiler_options = &#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">autocmd FileType typescript :set makeprg=tsc</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">function! myspacevim#after() abort</span><br><span class=\"line\"></span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"MY-CONFIG-FOR-SPACEVIM\"><a href=\"#MY-CONFIG-FOR-SPACEVIM\" class=\"headerlink\" title=\"MY CONFIG FOR SPACEVIM\"></a>MY CONFIG FOR SPACEVIM</h1><h2 id=\"BASIC-CONFIG\"><a href=\"#BASIC-CONFIG\" class=\"headerlink\" title=\"BASIC CONFIG\"></a>BASIC CONFIG</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#=============================================================================</span><br><span class=\"line\"># basic.toml --- basic configuration example for SpaceVim</span><br><span class=\"line\"># Copyright (c) 2016-2023 Wang Shidong &amp; Contributors</span><br><span class=\"line\"># Author: Wang Shidong &lt; wsdjeg@outlook.com &gt;</span><br><span class=\"line\"># URL: https://spacevim.org</span><br><span class=\"line\"># License: GPLv3</span><br><span class=\"line\">#=============================================================================</span><br><span class=\"line\"></span><br><span class=\"line\"># All SpaceVim option below [option] section</span><br><span class=\"line\">[options]</span><br><span class=\"line\">    # set spacevim theme. by default colorscheme layer is not loaded,</span><br><span class=\"line\">    # if you want to use more colorscheme, please load the colorscheme</span><br><span class=\"line\">    # layer</span><br><span class=\"line\">    colorscheme = &quot;gruvbox&quot;</span><br><span class=\"line\">\t\tcolorscheme_bg = &quot;dark&quot;</span><br><span class=\"line\">    # Disable guicolors in basic mode, many terminal do not support 24bit</span><br><span class=\"line\">    # true colors</span><br><span class=\"line\">    enable_guicolors = false</span><br><span class=\"line\">    # Disable statusline separator, if you want to use other value, please</span><br><span class=\"line\">    # install nerd fonts</span><br><span class=\"line\">    # statusline_separator = &quot;nil&quot;</span><br><span class=\"line\">    # statusline_iseparator = &quot;bar&quot;</span><br><span class=\"line\">    # buffer_index_type = 4</span><br><span class=\"line\">    # windows_index_type = 3</span><br><span class=\"line\">    enable_tabline_filetype_icon = false</span><br><span class=\"line\">    enable_statusline_mode = false</span><br><span class=\"line\">    statusline_unicode = false</span><br><span class=\"line\">    # Enable vim compatible mode, avoid changing origin vim key bindings</span><br><span class=\"line\">    vimcompatible = true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[options]</span><br><span class=\"line\">    bootstrap_before = &quot;myspacevim#before&quot;</span><br><span class=\"line\">    bootstrap_after  = &quot;myspacevim#after&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;wellle/targets.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;terryma/vim-expand-region&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tomtom/tlib_vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;mattn/webapi-vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tyru/open-browser.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;mg979/vim-visual-multi&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tpope/vim-repeat&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;airblade/vim-gitgutter&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;scrooloose/nerdcommenter&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tpope/vim-fugitive&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;szw/vim-maximizer&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;mattn/emmet-vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;vim-scripts/Mark&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;yegappan/mru&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;junegunn/vim-easy-align&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;j5shi/SearchComplete&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;vim-scripts/CmdlineComplete&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;jiangmiao/auto-pairs&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;MattesGroeger/vim-bookmarks&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo= &#x27;autowitch/hive.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;github/copilot.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;skywind3000/asyncrun.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&quot;XadillaX/json-formatter.vim&quot;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&quot;godlygeek/tabular&quot;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&quot;vim-scripts/matchit.zip&quot;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tbodt/deoplete-tabnine&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;wellle/tmux-complete.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;jrozner/vim-antlr&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;MattesGroeger/vim-bookmarks&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;gennaro-tedesco/nvim-peekup&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;tpope/vim-speeddating&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;easymotion/vim-easymotion&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;psf/black&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;lyokha/vim-xkbswitch&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;liuchengxu/graphviz.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;psliwka/vim-smoothie&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;rust-lang/rust.vim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;racer-rust/vim-racer&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;pangloss/vim-javascript&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;marko-cerovac/material.nvim&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;integralist/vim-mypy&#x27;</span><br><span class=\"line\">merged=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;leafgarland/typescript-vim&#x27;</span><br><span class=\"line\">merge=false</span><br><span class=\"line\"></span><br><span class=\"line\">[[custom_plugins]]</span><br><span class=\"line\">repo=&#x27;ap/vim-css-color&#x27;</span><br><span class=\"line\">merge=false</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"CUSTOM-CONFIG\"><a href=\"#CUSTOM-CONFIG\" class=\"headerlink\" title=\"CUSTOM CONFIG\"></a>CUSTOM CONFIG</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function! myspacevim#before() abort</span><br><span class=\"line\"> call SpaceVim#custom#SPCGroupName([&#x27;G&#x27;], &#x27;+TestGroup&#x27;)</span><br><span class=\"line\"> call SpaceVim#custom#SPC(&#x27;nore&#x27;, [&#x27;G&#x27;, &#x27;t&#x27;], &#x27;echom 1&#x27;, &#x27;echomessage 1&#x27;, 1)</span><br><span class=\"line\">  &quot; let profile = SpaceVim#mapping#search#getprofile(&#x27;rg&#x27;)</span><br><span class=\"line\">&quot; let default_opt = profile.default_opts + [&#x27;--no-ignore-vcs&#x27;]</span><br><span class=\"line\">&quot; call SpaceVim#mapping#search#profile(&#123;&#x27;rg&#x27; : &#123;&#x27;default_opts&#x27; : default_opt&#125;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">set clipboard+=unnamed</span><br><span class=\"line\">&quot;禁止生成临时文件</span><br><span class=\"line\">set noswapfile</span><br><span class=\"line\">&quot; 光标移动到buffer的顶部和底部时保持3行距离</span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;h :MRU&lt;CR&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">func! SqlToUpper()</span><br><span class=\"line\">    %s/\\&lt;select\\&gt;\\|\\&lt;from\\&gt;\\|\\&lt;as\\&gt;\\|\\&lt;where\\&gt;\\|\\&lt;if\\&gt;\\|\\&lt;not\\&gt;\\|\\&lt;group\\&gt;\\|\\&lt;by\\&gt;\\|\\&lt;left\\&gt;\\|\\&lt;right\\&gt;\\|\\&lt;join\\&gt;\\|\\&lt;outer\\&gt;\\|\\&lt;full\\&gt;\\|\\&lt;to_date\\&gt;\\|\\&lt;from_unixtime\\&gt;\\|\\&lt;unixtime_stamp\\&gt;\\|\\&lt;when\\&gt;\\|\\&lt;case\\&gt;\\|\\&lt;then\\&gt;\\|\\&lt;max\\&gt;\\|\\&lt;min\\&gt;\\|\\&lt;avg\\&gt;\\|\\&lt;end\\&gt;\\|\\&lt;else\\&gt;\\|\\&lt;and\\&gt;\\|\\&lt;or\\&gt;\\|\\&lt;on\\&gt;\\|\\&lt;count\\&gt;\\|\\&lt;sum\\&gt;|\\&lt;use\\&gt;|\\&lt;limit\\&gt;/\\U&amp;/g</span><br><span class=\"line\">    %s/\\&lt;add\\&gt;\\|\\&lt;admin\\&gt;\\|\\&lt;after\\&gt;\\|\\&lt;analyze\\&gt;\\|\\&lt;archive\\&gt;\\|\\&lt;asc\\&gt;\\|\\&lt;before\\&gt;\\|\\&lt;bucket\\&gt;\\|\\&lt;buckets\\&gt;\\|\\&lt;cascade\\&gt;\\|\\&lt;change\\&gt;\\|\\&lt;cluster\\&gt;\\|\\&lt;clustered\\&gt;\\|\\&lt;clusterstatus\\&gt;\\|\\&lt;collection\\&gt;\\|\\&lt;columns\\&gt;\\|\\&lt;comment\\&gt;\\|\\&lt;compact\\&gt;\\|\\&lt;compactions\\&gt;\\|\\&lt;compute\\&gt;\\|\\&lt;concatenate\\&gt;\\|\\&lt;continue\\&gt;\\|\\&lt;data\\&gt;\\|\\&lt;databases\\&gt;\\|\\&lt;datetime\\&gt;\\|\\&lt;day\\&gt;\\|\\&lt;dbproperties\\&gt;\\|\\&lt;deferred\\&gt;\\|\\&lt;defined\\&gt;\\|\\&lt;delimited\\&gt;\\|\\&lt;dependency\\&gt;\\|\\&lt;desc\\&gt;\\|\\&lt;directories\\&gt;\\|\\&lt;directory\\&gt;\\|\\&lt;disable\\&gt;\\|\\&lt;distribute\\&gt;\\|\\&lt;elem_type\\&gt;\\|\\&lt;enable\\&gt;\\|\\&lt;escaped\\&gt;\\|\\&lt;exclusive\\&gt;\\|\\&lt;explain\\&gt;\\|\\&lt;export\\&gt;\\|\\&lt;fields\\&gt;\\|\\&lt;file\\&gt;\\|\\&lt;fileformat\\&gt;\\|\\&lt;first\\&gt;\\|\\&lt;format\\&gt;\\|\\&lt;formatted\\&gt;\\|\\&lt;functions\\&gt;\\|\\&lt;hold_ddltime\\&gt;\\|\\&lt;idxproperties\\&gt;\\|\\&lt;ignore\\&gt;\\|\\&lt;index\\&gt;\\|\\&lt;indexes\\&gt;\\|\\&lt;inpath\\&gt;\\|\\&lt;inputdriver\\&gt;\\|\\&lt;inputformat\\&gt;\\|\\&lt;items\\&gt;\\|\\&lt;jar\\&gt;\\|\\&lt;keys\\&gt;\\|\\&lt;key_type\\&gt;\\|\\&lt;limit\\&gt;\\|\\&lt;lines\\&gt;\\|\\&lt;load\\&gt;\\|\\&lt;location\\&gt;\\|\\&lt;lock\\&gt;\\|\\&lt;locks\\&gt;\\|\\&lt;logical\\&gt;\\|\\&lt;long\\&gt;\\|\\&lt;mapjoin\\&gt;\\|\\&lt;materialized\\&gt;\\|\\&lt;metadata\\&gt;\\|\\&lt;minus\\&gt;\\|\\&lt;minute\\&gt;\\|\\&lt;month\\&gt;\\|\\&lt;msck\\&gt;\\|\\&lt;noscan\\&gt;\\|\\&lt;no_drop\\&gt;\\|\\&lt;offline\\&gt;\\|\\&lt;option\\&gt;\\|\\&lt;outputdriver\\&gt;\\|\\&lt;outputformat\\&gt;\\|\\&lt;overwrite\\&gt;\\|\\&lt;owner\\&gt;\\|\\&lt;partitioned\\&gt;\\|\\&lt;partitions\\&gt;\\|\\&lt;plus\\&gt;\\|\\&lt;pretty\\&gt;\\|\\&lt;principals\\&gt;\\|\\&lt;protection\\&gt;\\|\\&lt;purge\\&gt;\\|\\&lt;read\\&gt;\\|\\&lt;readonly\\&gt;\\|\\&lt;rebuild\\&gt;\\|\\&lt;recordreader\\&gt;\\|\\&lt;recordwriter\\&gt;\\|\\&lt;regexp\\&gt;\\|\\&lt;reload\\&gt;\\|\\&lt;rename\\&gt;\\|\\&lt;repair\\&gt;\\|\\&lt;replace\\&gt;\\|\\&lt;replication\\&gt;\\|\\&lt;restrict\\&gt;\\|\\&lt;rewrite\\&gt;\\|\\&lt;rlike\\&gt;\\|\\&lt;role\\&gt;\\|\\&lt;roles\\&gt;\\|\\&lt;schema\\&gt;\\|\\&lt;schemas\\&gt;\\|\\&lt;second\\&gt;\\|\\&lt;semi\\&gt;\\|\\&lt;serde\\&gt;\\|\\&lt;serdeproperties\\&gt;\\|\\&lt;server\\&gt;\\|\\&lt;sets\\&gt;\\|\\&lt;shared\\&gt;\\|\\&lt;show\\&gt;\\|\\&lt;show_database\\&gt;\\|\\&lt;skewed\\&gt;\\|\\&lt;sort\\&gt;\\|\\&lt;sorted\\&gt;\\|\\&lt;ssl\\&gt;\\|\\&lt;statistics\\&gt;\\|\\&lt;stored\\&gt;\\|\\&lt;streamtable\\&gt;\\|\\&lt;string\\&gt;\\|\\&lt;struct\\&gt;\\|\\&lt;tables\\&gt;\\|\\&lt;tblproperties\\&gt;\\|\\&lt;temporary\\&gt;\\|\\&lt;terminated\\&gt;\\|\\&lt;tinyint\\&gt;\\|\\&lt;touch\\&gt;\\|\\&lt;transactions\\&gt;\\|\\&lt;unarchive\\&gt;\\|\\&lt;undo\\&gt;\\|\\&lt;uniontype\\&gt;\\|\\&lt;unlock\\&gt;\\|\\&lt;unset\\&gt;\\|\\&lt;unsigned\\&gt;\\|\\&lt;uri\\&gt;\\|\\&lt;use\\&gt;\\|\\&lt;utc\\&gt;\\|\\&lt;utctimestamp\\&gt;\\|\\&lt;value_type\\&gt;\\|\\&lt;view\\&gt;\\|\\&lt;while\\&gt;\\|\\&lt;year\\&gt;\\&lt;all\\&gt;\\|\\&lt;alter\\&gt;\\|\\&lt;and\\&gt;\\|\\&lt;array\\&gt;\\|\\&lt;as\\&gt;\\|\\&lt;authorization\\&gt;\\|\\&lt;between\\&gt;\\|\\&lt;bigint\\&gt;\\|\\&lt;binary\\&gt;\\|\\&lt;boolean\\&gt;\\|\\&lt;both\\&gt;\\|\\&lt;by\\&gt;\\|\\&lt;case\\&gt;\\|\\&lt;cast\\&gt;\\|\\&lt;char\\&gt;\\|\\&lt;column\\&gt;\\|\\&lt;conf\\&gt;\\|\\&lt;create\\&gt;\\|\\&lt;cross\\&gt;\\|\\&lt;cube\\&gt;\\|\\&lt;current\\&gt;\\|\\&lt;current_date\\&gt;\\|\\&lt;current_timestamp\\&gt;\\|\\&lt;cursor\\&gt;\\|\\&lt;database\\&gt;\\|\\&lt;decimal\\&gt;\\|\\&lt;delete\\&gt;\\|\\&lt;describe\\&gt;\\|\\&lt;distinct\\&gt;\\|\\&lt;double\\&gt;\\|\\&lt;drop\\&gt;\\|\\&lt;else\\&gt;\\|\\&lt;end\\&gt;\\|\\&lt;exchange\\&gt;\\|\\&lt;exists\\&gt;\\|\\&lt;extended\\&gt;\\|\\&lt;external\\&gt;\\|\\&lt;fetch\\&gt;\\|\\&lt;float\\&gt;\\|\\&lt;following\\&gt;\\|\\&lt;for\\&gt;\\|\\&lt;from\\&gt;\\|\\&lt;full\\&gt;\\|\\&lt;function\\&gt;\\|\\&lt;grant\\&gt;\\|\\&lt;group\\&gt;\\|\\&lt;grouping\\&gt;\\|\\&lt;having\\&gt;\\|\\&lt;if\\&gt;\\|\\&lt;import\\&gt;\\|\\&lt;in\\&gt;\\|\\&lt;inner\\&gt;\\|\\&lt;insert\\&gt;\\|\\&lt;int\\&gt;\\|\\&lt;intersect\\&gt;\\|\\&lt;interval\\&gt;\\|\\&lt;into\\&gt;\\|\\&lt;is\\&gt;\\|\\&lt;join\\&gt;\\|\\&lt;lateral\\&gt;\\|\\&lt;left\\&gt;\\|\\&lt;less\\&gt;\\|\\&lt;like\\&gt;\\|\\&lt;local\\&gt;\\|\\&lt;macro\\&gt;\\|\\&lt;map\\&gt;\\|\\&lt;more\\&gt;\\|\\&lt;not\\&gt;\\|\\&lt;null\\&gt;\\|\\&lt;of\\&gt;\\|\\&lt;on\\&gt;\\|\\&lt;or\\&gt;\\|\\&lt;order\\&gt;\\|\\&lt;out\\&gt;\\|\\&lt;outer\\&gt;\\|\\&lt;over\\&gt;\\|\\&lt;partialscan\\&gt;\\|\\&lt;partition\\&gt;\\|\\&lt;percent\\&gt;\\|\\&lt;preceding\\&gt;\\|\\&lt;preserve\\&gt;\\|\\&lt;procedure\\&gt;\\|\\&lt;range\\&gt;\\|\\&lt;reads\\&gt;\\|\\&lt;reduce\\&gt;\\|\\&lt;revoke\\&gt;\\|\\&lt;right\\&gt;\\|\\&lt;rollup\\&gt;\\|\\&lt;row\\&gt;\\|\\&lt;rows\\&gt;\\|\\&lt;select\\&gt;\\|\\&lt;set\\&gt;\\|\\&lt;smallint\\&gt;\\|\\&lt;table\\&gt;\\|\\&lt;tablesample\\&gt;\\|\\&lt;then\\&gt;\\|\\&lt;timestamp\\&gt;\\|\\&lt;to\\&gt;\\|\\&lt;transform\\&gt;\\|\\&lt;trigger\\&gt;\\|\\&lt;truncate\\&gt;\\|\\&lt;unbounded\\&gt;\\|\\&lt;union\\&gt;\\|\\&lt;uniquejoin\\&gt;\\|\\&lt;update\\&gt;\\|\\&lt;user\\&gt;\\|\\&lt;using\\&gt;\\|\\&lt;utc_tmestamp\\&gt;\\|\\&lt;values\\&gt;\\|\\&lt;varchar\\&gt;\\|\\&lt;when\\&gt;\\|\\&lt;where\\&gt;\\|\\&lt;window\\&gt;\\|\\&lt;with\\&gt;/\\U&amp;/g</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">augroup black_on_save</span><br><span class=\"line\">  autocmd!</span><br><span class=\"line\">  autocmd BufWritePre *.py Black</span><br><span class=\"line\">augroup end</span><br><span class=\"line\"></span><br><span class=\"line\">let g:XkbSwitchEnabled = 1</span><br><span class=\"line\">map &lt;leader&gt;ma :ma </span><br><span class=\"line\">xmap ga &lt;Plug&gt;(EasyAlign)</span><br><span class=\"line\">nmap ga &lt;Plug&gt;(EasyAlign)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; fun! DeleteAllBuffersInWindow()</span><br><span class=\"line\">    &quot; let s:curWinNr = winnr()</span><br><span class=\"line\">    &quot; if winbufnr(s:curWinNr) == 1</span><br><span class=\"line\">        &quot; ret</span><br><span class=\"line\">    &quot; endif</span><br><span class=\"line\">    &quot; let s:curBufNr = bufnr(&quot;%&quot;)</span><br><span class=\"line\">    &quot; exe &quot;bn&quot;</span><br><span class=\"line\">    &quot; let s:nextBufNr = bufnr(&quot;%&quot;)</span><br><span class=\"line\">    &quot; while s:nextBufNr != s:curBufNr</span><br><span class=\"line\">        &quot; exe &quot;bn&quot;</span><br><span class=\"line\">        &quot; exe &quot;bdel &quot;.s:nextBufNr</span><br><span class=\"line\">        &quot; let s:nextBufNr = bufnr(&quot;%&quot;)</span><br><span class=\"line\">    &quot; endwhile</span><br><span class=\"line\">&quot; endfun</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; map &lt;leader&gt;&lt;leader&gt;bda     :call DeleteAllBuffersInWindow()</span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;- :ChooseWin&lt;CR&gt;</span><br><span class=\"line\">let g:choosewin_overlay_enable = 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;f :!black %&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; map &lt;leader&gt;&lt;leader&gt;s &lt;Plug&gt;(easymotion-s)</span><br><span class=\"line\">&quot; map &lt;leader&gt;&lt;leader&gt;f &lt;Plug&gt;(easymotion-f)</span><br><span class=\"line\">nmap &lt;Leader&gt;; &lt;Plug&gt;(easymotion-next)</span><br><span class=\"line\">nmap &lt;Leader&gt;, &lt;Plug&gt;(easymotion-prev)</span><br><span class=\"line\">&quot; map &lt;Leader&gt;&lt;leader&gt; &lt;Plug&gt;(easymotion-prefix)</span><br><span class=\"line\">&quot; nmap gw        :InteractiveWindow&lt;CR&gt;</span><br><span class=\"line\">&quot; nmap &lt;leader&gt;w :InteractiveWindow&lt;CR&gt;</span><br><span class=\"line\">nmap ]h &lt;Plug&gt;(GitGutterNextHunk)</span><br><span class=\"line\">nmap [h &lt;Plug&gt;(GitGutterPrevHunk)</span><br><span class=\"line\"></span><br><span class=\"line\">hi   MarkWord1    ctermbg=Cyan           ctermfg=Black    guibg=#FFDAB9 guifg=Black</span><br><span class=\"line\">hi   MarkWord2    ctermbg=Green          ctermfg=Black    guibg=#2F4F4F guifg=Black</span><br><span class=\"line\">hi   MarkWord3    ctermbg=Yellow         ctermfg=Black    guibg=#191970 guifg=Black</span><br><span class=\"line\">hi   MarkWord4    ctermbg=Red            ctermfg=Black    guibg=#40E0D0 guifg=Black</span><br><span class=\"line\">hi   MarkWord5    ctermbg=Magenta        ctermfg=Black    guibg=#00FF00 guifg=Black</span><br><span class=\"line\">hi   MarkWord6    ctermbg=Blue           ctermfg=Black    guibg=#FFFF00 guifg=Black</span><br><span class=\"line\">hi   MarkWord7    ctermbg=Brown          ctermfg=Black    guibg=#D2691E guifg=Black</span><br><span class=\"line\">hi   MarkWord8    ctermbg=LightCyan      ctermfg=Red      guibg=#FF0000 guifg=Black</span><br><span class=\"line\">hi   MarkWord9    ctermbg=LightGreen     ctermfg=Red      guibg=#9400D3 guifg=Black</span><br><span class=\"line\">hi   MarkWord10   ctermbg=LightYellow    ctermfg=Red      guibg=#CDB38B guifg=Black</span><br><span class=\"line\">hi   MarkWord11   ctermbg=LightRed       ctermfg=Red      guibg=#27408B guifg=Black</span><br><span class=\"line\">hi   MarkWord12   ctermbg=LightMagenta   ctermfg=Red      guibg=#E0FFFF guifg=Black</span><br><span class=\"line\">hi   MarkWord13   ctermbg=LightBlue      ctermfg=Red      guibg=#00CD00 guifg=Black</span><br><span class=\"line\">hi   MarkWord14   ctermbg=DarkBlue       ctermfg=Blue     guibg=#FFEC8B guifg=Black</span><br><span class=\"line\">hi   MarkWord15   ctermbg=DarkGreen      ctermfg=Blue     guibg=#FFD700 guifg=Black</span><br><span class=\"line\">hi   MarkWord16   ctermbg=DarkCyan       ctermfg=Blue     guibg=#8B658B guifg=Black</span><br><span class=\"line\">hi   MarkWord17   ctermbg=DarkRed        ctermfg=Blue     guibg=#8B3A3A guifg=Black</span><br><span class=\"line\">hi   MarkWord18   ctermbg=DarkMagenta    ctermfg=Blue     guibg=#FF7F24 guifg=Black</span><br><span class=\"line\">hi   MarkWord19   ctermbg=DarkYellow     ctermfg=Blue     guibg=#CD2626 guifg=Black</span><br><span class=\"line\">hi   MarkWord20   ctermbg=DarkGray       ctermfg=Blue     guibg=#FF7F00 guifg=Black</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">noremap &lt;leader&gt;&lt;leader&gt;ff :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf file %s&quot;, &quot;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;leader&gt;&lt;leader&gt;fm :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf mru %s&quot;, &quot;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;leader&gt;&lt;leader&gt;fh :Leaderf cmdHistory &lt;CR&gt;</span><br><span class=\"line\">noremap &lt;leader&gt;&lt;leader&gt;ft :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf tag %s&quot;, &quot;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;leader&gt;&lt;leader&gt;fr :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf --recall&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;C-G&gt; :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf! rg --current-buffer -e %s &quot;, expand(&quot;&lt;cword&gt;&quot;))&lt;CR&gt;</span><br><span class=\"line\">noremap &lt;C-F&gt; :&lt;C-U&gt;&lt;C-R&gt;=printf(&quot;Leaderf! rg --stayOpen -g &#x27;*.hql&#x27; -e %s  &quot;, expand(&quot;&lt;cword&gt;&quot;))&lt;CR&gt;</span><br><span class=\"line\">noremap  fr :&lt;C-U&gt;Leaderf! rg --recall&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">let g:Lf_GtagsAutoGenerate = 0</span><br><span class=\"line\">let g:Lf_Gtagslabel = &#x27;native-pygments&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">:imap &lt;C-J&gt; &lt;Plug&gt;snipMateNextOrTrigger</span><br><span class=\"line\">:smap &lt;C-J&gt; &lt;Plug&gt;snipMateNextOrTrigger</span><br><span class=\"line\"></span><br><span class=\"line\">let g:netrw_nogx = 1 &quot; disable netrw&#x27;s gx mapping.</span><br><span class=\"line\"></span><br><span class=\"line\">nmap &lt;leader&gt;gx :OpenBrowser &lt;c-r&gt;&lt;c-a&gt;&lt;CR&gt;</span><br><span class=\"line\">vmap &lt;leader&gt;gx :OpenBrowser &lt;c-r&gt;&lt;c-a&gt;&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">function! HandleURL()</span><br><span class=\"line\">  let s:uri = matchstr(getline(&quot;.&quot;), &#x27;[a-z]*:\\/\\/[^ &gt;,;]*&#x27;)</span><br><span class=\"line\">  echo s:uri</span><br><span class=\"line\">  if s:uri != &quot;&quot;</span><br><span class=\"line\">    execute &quot;!open &#x27;&quot;.s:uri.&quot;&#x27;&quot;</span><br><span class=\"line\">  else</span><br><span class=\"line\">    echo &quot;No URI found in line.&quot;</span><br><span class=\"line\">  endif</span><br><span class=\"line\">endfunction</span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;u :call HandleURL()&lt;cr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;gs :Gstatus&lt;CR&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">&quot; https://data.bytedance.net/coral/datamap/detail/table_info/HiveTable/ea_rpt/&#123;query&#125;/block_info#group=default</span><br><span class=\"line\">&quot; https://data.bytedance.net/coral/datamap/detail/data_preview/HiveTable/ea_rpt/&#123;query&#125;=default</span><br><span class=\"line\">let g:openbrowser_search_engines = &#123;</span><br><span class=\"line\">\\   &#x27;stg&#x27;:&#x27;https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_stg/&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;ods&#x27;:&#x27;https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_ods/&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;mds&#x27;:&#x27;https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_mds/&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;dm&#x27; :&#x27;https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_dm/&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;rpt&#x27;:&#x27;https://data.bytedance.net/coral/datamap/detail/table_info/hive/ea_rpt/&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;coral&#x27;: &#x27;https://data.bytedance.net/coral/datamap_new/result?query=&#123;query&#125;&#x27;,</span><br><span class=\"line\">\\   &#x27;trans&#x27;: &#x27;https://translate.google.com.hk/?sl=zh-CN&amp;tl=en&amp;text=&#123;query&#125;&amp;op=translate&#x27;,</span><br><span class=\"line\">\\   &#x27;manta&#x27;:&#x27;https://data.bytedance.net/manta/monitor/hive?current=1&amp;is_trigger=false&amp;limit=10&amp;monitor_state=all&amp;monitor_types=all&amp;projects=cn_532&amp;query=&#123;query&#125;&amp;search_type=db_tb_name&amp;type=cn&#x27;,</span><br><span class=\"line\">\\   &#x27;self&#x27;:&#x27;https://data.bytedance.net/manta/rule/hive/sql?alarm_level=all&amp;is_myself=false&amp;is_trigger=false&amp;monitor_state=all&amp;monitor_types=all&amp;query=&#123;query&#125;&amp;search_type=monitor_name&amp;type=cn&amp;projects=cn_532&#x27;,</span><br><span class=\"line\">\\   &#x27;manta_report&#x27;:&#x27;https://data.bytedance.net/manta/datacheck/list?is_myself=false&amp;query=&#123;query&#125;&amp;search_type=db_tb_name&amp;type=cn&#x27;</span><br><span class=\"line\">\\&#125;</span><br><span class=\"line\">nmap &lt;leader&gt;gg :OpenBrowserSearch &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;leader&gt;gt :OpenBrowserSearch -trans &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">func! MantaReport()</span><br><span class=\"line\">    let l:engine = expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">    echom l:engine</span><br><span class=\"line\">    execute &#x27;silent :OpenBrowserSearch -manta_report &#x27; . l:engine</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">func! Manta()</span><br><span class=\"line\">    let l:engine = expand(&quot;&lt;cword&gt;&quot;)</span><br><span class=\"line\">    echom l:engine</span><br><span class=\"line\">    execute &#x27;silent :OpenBrowserSearch -manta &#x27; . l:engine</span><br><span class=\"line\">    &quot; execute &#x27;silent :OpenBrowserSearch -self &#x27; . l:engine</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">func! EchoCword()</span><br><span class=\"line\">    let l:cword= expand(&quot;&lt;cword&gt;&quot;)</span><br><span class=\"line\">    echom l:cword</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">func! AccessCoral()</span><br><span class=\"line\"></span><br><span class=\"line\">    let l:engine = expand(&quot;&lt;cword&gt;&quot;)</span><br><span class=\"line\">    echom l:engine</span><br><span class=\"line\">    </span><br><span class=\"line\">    if( stridx(l:engine, &quot;stg&quot;) == 0 ) </span><br><span class=\"line\">        &quot; echom &quot;stg&quot;</span><br><span class=\"line\">        execute &#x27;silent :OpenBrowserSearch -stg &#x27; . l:engine</span><br><span class=\"line\">        execute &#x27;silent :OpenBrowserSearch -uatstg &#x27; . l:engine</span><br><span class=\"line\">    elseif(stridx(l:engine, &quot;ods&quot;) == 0)</span><br><span class=\"line\">        &quot; echom &quot;ods&quot;</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -ods &#x27; . l:engine</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -uatods &#x27; . l:engine</span><br><span class=\"line\">    elseif(stridx(l:engine, &quot;mds&quot;) == 0)</span><br><span class=\"line\">        &quot; echom &quot;mds&quot;</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -mds &#x27; . l:engine</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -uatmds &#x27; . l:engine</span><br><span class=\"line\">    elseif(stridx(l:engine, &quot;dm&quot;) == 0)</span><br><span class=\"line\">        &quot; echom &quot;dm&quot;</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -dm &#x27; . l:engine</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -uatdm &#x27; . l:engine</span><br><span class=\"line\">    elseif(stridx(l:engine, &quot;rpt&quot;) == 0)</span><br><span class=\"line\">        &quot; echom &quot;rpt&quot;</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -rpt &#x27; . l:engine</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -uatrpt &#x27; . l:engine</span><br><span class=\"line\">    elseif(stridx(l:engine, &quot;http&quot;) == 0)</span><br><span class=\"line\">        execute &#x27;:OpenBrowser()&#x27; </span><br><span class=\"line\">    else</span><br><span class=\"line\">        echom &quot;coral&quot;</span><br><span class=\"line\">        execute &#x27;:OpenBrowserSearch -coral &#x27; . l:engine</span><br><span class=\"line\">    endif</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">let g:Lf_NumberOfHighlight=1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">func! Findtable()</span><br><span class=\"line\">    let l:table_name = expand(&quot;&lt;cword&gt;&quot;)</span><br><span class=\"line\">    echo l:table_name</span><br><span class=\"line\">    execute &#x27;:/).*&#x27; . l:table_name</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; don&#x27;t show the help in normal mode</span><br><span class=\"line\">let g:Lf_HideHelp = 1</span><br><span class=\"line\">let g:Lf_UseCache = 0</span><br><span class=\"line\">let g:Lf_UseVersionControlTool = 0</span><br><span class=\"line\">let g:Lf_IgnoreCurrentBufferName = 1</span><br><span class=\"line\">&quot; popup mode</span><br><span class=\"line\">&quot; let g:Lf_WindowPosition = &#x27;right&#x27;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">let g:Lf_ShowDevIcons = 1</span><br><span class=\"line\">let g:Lf_WindowHeight = 0.2                               </span><br><span class=\"line\">let g:Lf_PreviewInPopup = 1</span><br><span class=\"line\">let g:Lf_StlSeparator = &#123; &#x27;left&#x27;: &quot;\\ue0b0&quot;, &#x27;right&#x27;: &quot;\\ue0b2&quot;, &#x27;font&#x27;: &quot;DejaVu Sans Mono for Powerline&quot; &#125;</span><br><span class=\"line\">let g:Lf_ShowRelativePath = 1</span><br><span class=\"line\">let g:Lf_PreviewResult = &#123;</span><br><span class=\"line\">        \\ &#x27;File&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Buffer&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Mru&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Tag&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;BufTag&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Function&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Line&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Colorscheme&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Rg&#x27;: 1,</span><br><span class=\"line\">        \\ &#x27;Gtags&#x27;: 1</span><br><span class=\"line\">        \\&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">let g:Lf_PreviewHorizontalPosition = &#x27;right&#x27;                    </span><br><span class=\"line\">let g:Lf_ShortcutF =&#x27;&lt;leader&gt;w&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">map = &lt;Plug&gt;(expand_region_expand)</span><br><span class=\"line\">map - &lt;Plug&gt;(expand_region_shrink)</span><br><span class=\"line\">let g:mwDefaultHighlightingPalette = &#x27;maximum&#x27;</span><br><span class=\"line\">&quot; nnoremap &lt;silent&gt;&lt;Leader&gt;m m</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Plugin key-mappings.</span><br><span class=\"line\">&quot; Note: It must be &quot;imap&quot; and &quot;smap&quot;.  It uses &lt;Plug&gt; mappings.</span><br><span class=\"line\">imap &lt;C-k&gt;     &lt;Plug&gt;(neosnippet_expand_or_jump)</span><br><span class=\"line\">smap &lt;C-k&gt;     &lt;Plug&gt;(neosnippet_expand_or_jump)</span><br><span class=\"line\">xmap &lt;C-k&gt;     &lt;Plug&gt;(neosnippet_expand_target)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; SuperTab like snippets behavior.</span><br><span class=\"line\">&quot; Note: It must be &quot;imap&quot; and &quot;smap&quot;.  It uses &lt;Plug&gt; mappings.</span><br><span class=\"line\">&quot;imap &lt;expr&gt;&lt;TAB&gt;</span><br><span class=\"line\">&quot; \\ pumvisible() ? &quot;\\&lt;C-n&gt;&quot; :</span><br><span class=\"line\">&quot; \\ neosnippet#expandable_or_jumpable() ?</span><br><span class=\"line\">&quot; \\    &quot;\\&lt;Plug&gt;(neosnippet_expand_or_jump)&quot; : &quot;\\&lt;TAB&gt;&quot;</span><br><span class=\"line\">smap &lt;expr&gt;&lt;TAB&gt; neosnippet#expandable_or_jumpable() ?</span><br><span class=\"line\">\\ &quot;\\&lt;Plug&gt;(neosnippet_expand_or_jump)&quot; : &quot;\\&lt;TAB&gt;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; For conceal markers.</span><br><span class=\"line\">if has(&#x27;conceal&#x27;)</span><br><span class=\"line\">  set conceallevel=2 concealcursor=niv</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Enable snipMate compatibility feature.</span><br><span class=\"line\">let g:neosnippet#enable_snipmate_compatibility = 1</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Tell Neosnippet about the other snippets</span><br><span class=\"line\">let g:neosnippet#snippets_directory=&#x27;~/.vim_back/bundle/vim-snippets/snippets&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">imap &lt;silent&gt;&lt;script&gt;&lt;expr&gt; &lt;C-J&gt; copilot#Accept(&quot;\\&lt;CR&gt;&quot;)</span><br><span class=\"line\">let g:copilot_no_tab_map = v:true</span><br><span class=\"line\">&quot; for .hql files</span><br><span class=\"line\">au BufNewFile,BufRead *.hql set filetype=hive expandtab</span><br><span class=\"line\"></span><br><span class=\"line\">au BufNewFile,BufRead *.hql set filetype=hive expandtab</span><br><span class=\"line\"></span><br><span class=\"line\">let g:Lf_ShowRelativePath=1</span><br><span class=\"line\">map &lt;leader&gt;cc &lt;plug&gt;NERDCommenterToggle</span><br><span class=\"line\"></span><br><span class=\"line\">imap &lt;silent&gt;&lt;script&gt;&lt;expr&gt; &lt;C-J&gt; copilot#Accept(&quot;\\&lt;CR&gt;&quot;)</span><br><span class=\"line\">let g:copilot_no_tab_map = v:true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; Help Vim recognize *.sbt and *.sc as Scala files</span><br><span class=\"line\">au BufRead,BufNewFile *.sbt,*.sc set filetype=scala</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Used to expand decorations in worksheets</span><br><span class=\"line\">&quot; nmap &lt;Leader&gt;ws &lt;Plug&gt;(coc-metals-expand-decoration)</span><br><span class=\"line\">&quot;&quot; Toggle panel with Tree Views</span><br><span class=\"line\">&quot;nnoremap &lt;silent&gt; &lt;space&gt;t :&lt;C-u&gt;CocCommand metals.tvp&lt;CR&gt;</span><br><span class=\"line\">&quot;&quot; Toggle Tree View &#x27;metalsPackages&#x27;</span><br><span class=\"line\">&quot;nnoremap &lt;silent&gt; &lt;space&gt;tp :&lt;C-u&gt;CocCommand metals.tvp metalsPackages&lt;CR&gt;</span><br><span class=\"line\">&quot;&quot; Toggle Tree View &#x27;metalsCompile&#x27;</span><br><span class=\"line\">&quot;nnoremap &lt;silent&gt; &lt;space&gt;tc :&lt;C-u&gt;CocCommand metals.tvp metalsCompile&lt;CR&gt;</span><br><span class=\"line\">&quot;&quot; Toggle Tree View &#x27;metalsBuild&#x27;</span><br><span class=\"line\">&quot;nnoremap &lt;silent&gt; &lt;space&gt;tb :&lt;C-u&gt;CocCommand metals.tvp metalsBuild&lt;CR&gt;</span><br><span class=\"line\">&quot;&quot; Reveal current current class (trait or object) in Tree View &#x27;metalsPackages&#x27;</span><br><span class=\"line\">&quot;nnoremap &lt;silent&gt; &lt;space&gt;tf :&lt;C-u&gt;CocCommand metals.revealInTreeView metalsPackages&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; How to open the generated output file.</span><br><span class=\"line\">&quot; If does not exist, graphviz.vim will automatically choose the right way depending on the platform.</span><br><span class=\"line\">let g:graphviz_viewer = &#x27;open&#x27;</span><br><span class=\"line\">let g:graphviz_output_format = &#x27;svg&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;gvs :GraphvizShow&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;gvc :GraphvizCompile&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;gvg :!dot -Tsvg % -o ~/Desktop/output.svg &amp;&amp; open ~/Desktop/output.svg &lt;CR&gt;</span><br><span class=\"line\">function! MyGraphViz()</span><br><span class=\"line\">    :Graphviz!!</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if exists(&quot;:Tabularize&quot;)</span><br><span class=\"line\">  nmap &lt;Leader&gt;a= :Tabularize /=&lt;CR&gt;</span><br><span class=\"line\">  vmap &lt;Leader&gt;a= :Tabularize /=&lt;CR&gt;</span><br><span class=\"line\">  nmap &lt;Leader&gt;a: :Tabularize /:\\zs&lt;CR&gt;</span><br><span class=\"line\">  vmap &lt;Leader&gt;a: :Tabularize /:\\zs&lt;CR&gt;</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\">inoremap &lt;silent&gt; &lt;Bar&gt;   &lt;Bar&gt;&lt;Esc&gt;:call &lt;SID&gt;align()&lt;CR&gt;a</span><br><span class=\"line\"></span><br><span class=\"line\">function! s:align()</span><br><span class=\"line\">  let p = &#x27;^\\s*|\\s.*\\s|\\s*$&#x27;</span><br><span class=\"line\">  if exists(&#x27;:Tabularize&#x27;) &amp;&amp; getline(&#x27;.&#x27;) =~# &#x27;^\\s*|&#x27; &amp;&amp; (getline(line(&#x27;.&#x27;)-1) =~# p || getline(line(&#x27;.&#x27;)+1) =~# p)</span><br><span class=\"line\">    let column = strlen(substitute(getline(&#x27;.&#x27;)[0:col(&#x27;.&#x27;)],&#x27;[^|]&#x27;,&#x27;&#x27;,&#x27;g&#x27;))</span><br><span class=\"line\">    let position = strlen(matchstr(getline(&#x27;.&#x27;)[0:col(&#x27;.&#x27;)],&#x27;.*|\\s*\\zs.*&#x27;))</span><br><span class=\"line\">    Tabularize/|/l1</span><br><span class=\"line\">    normal! 0</span><br><span class=\"line\">    call search(repeat(&#x27;[^|]*|&#x27;,column).&#x27;\\s\\&#123;-\\&#125;&#x27;.repeat(&#x27;.&#x27;,position),&#x27;ce&#x27;,line(&#x27;.&#x27;))</span><br><span class=\"line\">  endif</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; let g:spacevim_project_auto_root=0</span><br><span class=\"line\"></span><br><span class=\"line\">let g:spacevim_project_auto_root=&#x27;current&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">non_root = &#x27;current&#x27;_create.py &quot; . l:db . &quot; &quot; . l:tb</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function! DoradoOpen()</span><br><span class=\"line\">  let l:keyword= expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">  execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; . &quot; dorado_open &quot; . l:keyword</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function! DoradoIdOpen()</span><br><span class=\"line\">  let l:keyword= expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">  execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; . &quot; dorado_id_open &quot; . l:keyword</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function! AllCoralOpen()</span><br><span class=\"line\">\tlet l:keyword= expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">\t&quot; execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; &quot;coral_field&quot;   . &quot; &quot; . l:keyword</span><br><span class=\"line\">\t&quot; execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; &quot;coral_block&quot;   . &quot; &quot; . l:keyword</span><br><span class=\"line\">\t&quot; execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; &quot;coral_preview&quot; . &quot; &quot; . l:keyword</span><br><span class=\"line\">\t&quot; execute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; &quot;coral_produce&quot; . &quot; &quot; . l:keyword</span><br><span class=\"line\">\texecute &quot;!python ~/opt/tools/common_open.py &quot; &quot;coral_field&quot;   . &quot; &quot; . l:keyword</span><br><span class=\"line\">\texecute &quot;!python ~/opt/tools/common_open.py &quot; &quot;coral_block&quot;   . &quot; &quot; . l:keyword</span><br><span class=\"line\">\texecute &quot;!python ~/opt/tools/common_open.py &quot; &quot;coral_preview&quot; . &quot; &quot; . l:keyword</span><br><span class=\"line\">\texecute &quot;:AsyncRun python ~/opt/tools/common_open.py &quot; &quot;coral_produce&quot; . &quot; &quot; . l:keyword</span><br><span class=\"line\">    &quot; sleep 10</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function! DirectUrl()</span><br><span class=\"line\">\texecute &quot;:!python ~/opt/tools/multi_open.py &quot; . @z</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">function! VisualSelection()</span><br><span class=\"line\">    if mode()==&quot;v&quot;</span><br><span class=\"line\">        let [line_start, column_start] = getpos(&quot;v&quot;)[1:2]</span><br><span class=\"line\">        let [line_end, column_end] = getpos(&quot;.&quot;)[1:2]</span><br><span class=\"line\">    else</span><br><span class=\"line\">        let [line_start, column_start] = getpos(&quot;&#x27;&lt;&quot;)[1:2]</span><br><span class=\"line\">        let [line_end, column_end] = getpos(&quot;&#x27;&gt;&quot;)[1:2]</span><br><span class=\"line\">    end</span><br><span class=\"line\"></span><br><span class=\"line\">    if (line2byte(line_start)+column_start) &gt; (line2byte(line_end)+column_end)</span><br><span class=\"line\">        let [line_start, column_start, line_end, column_end] =</span><br><span class=\"line\">        \\   [line_end, column_end, line_start, column_start]</span><br><span class=\"line\">    end</span><br><span class=\"line\">    let lines = getline(line_start, line_end)</span><br><span class=\"line\">    if len(lines) == 0</span><br><span class=\"line\">            return [&#x27;&#x27;]</span><br><span class=\"line\">    endif</span><br><span class=\"line\">    if &amp;selection ==# &quot;exclusive&quot;</span><br><span class=\"line\">        let column_end -= 1 &quot;Needed to remove the last character to make it match the visual selction</span><br><span class=\"line\">    endif</span><br><span class=\"line\">    if visualmode() ==# &quot;\\&lt;C-V&gt;&quot;</span><br><span class=\"line\">        for idx in range(len(lines))</span><br><span class=\"line\">            let lines[idx] = lines[idx][: column_end - 1]</span><br><span class=\"line\">            let lines[idx] = lines[idx][column_start - 1:]</span><br><span class=\"line\">        endfor</span><br><span class=\"line\">    else</span><br><span class=\"line\">        let lines[-1] = lines[-1][: column_end - 1]</span><br><span class=\"line\">        let lines[ 0] = lines[ 0][column_start - 1:]</span><br><span class=\"line\">    endif</span><br><span class=\"line\"></span><br><span class=\"line\">\tlet ret = join(lines, &quot;,&quot;)</span><br><span class=\"line\">    &quot; echo ret</span><br><span class=\"line\">    &quot; echom ret</span><br><span class=\"line\">\tcall setreg(&#x27;z&#x27;, ret)</span><br><span class=\"line\">    &quot; execute &quot;:!python ~/opt/tools/multi_open.py &quot; . @z</span><br><span class=\"line\">\treturn ret</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">function! GetDdl() abort</span><br><span class=\"line\">  let l:dbtb=expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">  echo l:dbtb</span><br><span class=\"line\">  execute &quot;:AsyncRun python ~/opt/tools/ddl.py &quot; . l:dbtb </span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">function! GetTask() abort</span><br><span class=\"line\">  let l:dbtb=expand(&quot;&lt;cWORD&gt;&quot;)</span><br><span class=\"line\">  echo l:dbtb</span><br><span class=\"line\">  execute &quot;:AsyncRun python ~/opt/tools/task.py &quot; . l:dbtb </span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;m :MaximizerToggle &lt;CR&gt;</span><br><span class=\"line\">map &lt;F10&gt; :call MyGraphViz()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F2&gt; :MaximizerToggle&lt;CR&gt;</span><br><span class=\"line\">map &lt;F4&gt; :call Findtable()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F5&gt; :call TritonAuthApply()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F6&gt; :call SqlToUpper()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F7&gt; :call PlantumlOpen()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F8&gt; :call Manta()&lt;CR&gt;</span><br><span class=\"line\">map &lt;F9&gt; :call AccessCoral()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;ca :call AllCoralOpen()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;dh :call SubStitute()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;do :call DoradoOpen()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;dp :call DataPreview()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;dt :call DoradoIdOpen()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;mc :call MantaDataExploreCreate()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;mp :call MantaReport()&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">function! MultiOpenFunc()</span><br><span class=\"line\"></span><br><span class=\"line\">    let l:content = VisualSelection()</span><br><span class=\"line\">    echom l:content </span><br><span class=\"line\">    &quot; sleep 5</span><br><span class=\"line\">    execute &quot;:!python ~/opt/tools/multi_open.py &quot; . l:content</span><br><span class=\"line\"></span><br><span class=\"line\">endfunction </span><br><span class=\"line\">function! CoralBatchOp(func_select)</span><br><span class=\"line\">    let l:content = VisualSelection()</span><br><span class=\"line\"></span><br><span class=\"line\">    echom l:content</span><br><span class=\"line\">    echom &quot;===================================&quot;</span><br><span class=\"line\">    echom a:func_select</span><br><span class=\"line\">    echom &quot;===================================&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    if a:func_select ==# &quot;dorado_open_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;dorado_open_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    elseif a:func_select ==# &quot;dorado_id_open_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;dorado_id_open_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    elseif a:func_select ==# &quot;coral_field_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;coral_field_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    elseif a:func_select ==# &quot;coral_block_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;coral_block_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    elseif a:func_select ==# &quot;coral_preview_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;coral_preview_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    elseif a:func_select ==# &quot;coral_produce_batch&quot;</span><br><span class=\"line\">        execute &quot;:!python ~/opt/tools/common_open.py &quot; . &quot;coral_produce_batch&quot; . &quot; &quot; .  l:content</span><br><span class=\"line\">    endif </span><br><span class=\"line\">    &quot; sleep 5</span><br><span class=\"line\"></span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">function! OpenInstances()</span><br><span class=\"line\"></span><br><span class=\"line\">    let l:content = VisualSelection()</span><br><span class=\"line\">    echom l:content</span><br><span class=\"line\">    execute &quot;:!python /Users/bytedance/opt/tools/instance.py &quot; . l:content </span><br><span class=\"line\">    sleep 5</span><br><span class=\"line\"></span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">if !has(&#x27;python3&#x27;)</span><br><span class=\"line\">  echo &quot;Error: Required vim compiled with +python3&quot;</span><br><span class=\"line\">  finish</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">xnoremap &lt;Leader&gt;dm :&lt;C-u&gt;call MultiOpenFunc()&lt;CR&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;dg :call GenerateSQL()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;dd :call GetDdl()&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;dt :call GetTask()&lt;CR&gt;</span><br><span class=\"line\">xnoremap &lt;Leader&gt;do :&lt;C-u&gt;call CoralBatchOp(&quot;dorado_open_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;di :&lt;C-u&gt;call CoralBatchOp(&quot;dorado_id_open_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;df :&lt;C-u&gt;call CoralBatchOp(&quot;coral_field_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;db :&lt;C-u&gt;call CoralBatchOp(&quot;coral_block_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;dv :&lt;C-u&gt;call CoralBatchOp(&quot;coral_preview_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;dp :&lt;C-u&gt;call CoralBatchOp(&quot;coral_produce_batch&quot;)&lt;CR&gt; </span><br><span class=\"line\">xnoremap &lt;Leader&gt;di :&lt;C-u&gt;call OpenInstances()&lt;CR&gt; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">function! SubStitute()</span><br><span class=\"line\">    :%s/ea_stg/ea_lark_expense_sensitive/g</span><br><span class=\"line\">    :%s/ea_ods/ea_lark_expense_sensitive/g</span><br><span class=\"line\">    :%s/ea_mds/ea_lark_expense_sensitive/g</span><br><span class=\"line\">    :%s/mds_/dwd_/g</span><br><span class=\"line\">endfunction </span><br><span class=\"line\"></span><br><span class=\"line\">map &lt;leader&gt;pr :retab&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">highlight BookmarkSign ctermbg=NONE ctermfg=160</span><br><span class=\"line\">highlight BookmarkLine ctermbg=194 ctermfg=NONE</span><br><span class=\"line\">let g:bookmark_sign = &#x27;♥&#x27;</span><br><span class=\"line\">let g:bookmark_highlight_lines = 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">function! LibrarySorter()</span><br><span class=\"line\">python3 &lt;&lt; EOF</span><br><span class=\"line\">import vim</span><br><span class=\"line\">EOF</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\">nnoremap &lt;c-j&gt; &lt;cmd&gt;call smoothie#do(&quot;\\&lt;C-D&gt;&quot;) &lt;CR&gt;</span><br><span class=\"line\">map &lt;c-d&gt; &lt;cmd&gt;call smoothie#downwards()&lt;CR&gt;</span><br><span class=\"line\">vnoremap &lt;c-j&gt; &lt;cmd&gt;call smoothie#do(&quot;\\&lt;C-D&gt;&quot;) &lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">let g:bookmark_save_per_working_dir = 1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; let g:LanguageClient_serverCommands = &#123;</span><br><span class=\"line\">    &quot; \\ &#x27;rust&#x27;: [&#x27;~/.cargo/bin/rustup&#x27;, &#x27;run&#x27;, &#x27;stable&#x27;, &#x27;rls&#x27;],</span><br><span class=\"line\">    &quot; \\ &#125;</span><br><span class=\"line\">&quot; noremap &lt;silent&gt; gt&lt;Plug&gt;(lcn-definition)</span><br><span class=\"line\"></span><br><span class=\"line\">let g:LanguageClient_serverCommands = &#123;</span><br><span class=\"line\">\\ &#x27;rust&#x27;: [&#x27;rust-analyzer&#x27;],</span><br><span class=\"line\">\\ &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">nmap &lt;silent&gt;ldg :call CocAction(&#x27;diagnosticInfo&#x27;)&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;silent&gt;ldf :call CocAction(&#x27;jumpDefinition&#x27;)&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;silent&gt;ljd :call CocAction(&#x27;jumpDeclaration&#x27;)&lt;CR&gt;</span><br><span class=\"line\">nmap &lt;silent&gt;ltd :call CocAction(&#x27;jumpTypeDefinition&#x27;)&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">let g:material_style = &quot;palenight&quot;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; nnoremap &lt;Leader&gt;dd :call vimspector#Launch()&lt;CR&gt;</span><br><span class=\"line\">&quot; nnoremap &lt;Leader&gt;de :call vimspector#Reset()&lt;CR&gt;</span><br><span class=\"line\">&quot; nnoremap &lt;Leader&gt;dc :call vimspector#Continue()&lt;CR&gt;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; nnoremap &lt;Leader&gt;dt :call vimspector#ToggleBreakpoint()&lt;CR&gt;</span><br><span class=\"line\">&quot; nnoremap &lt;Leader&gt;dT :call vimspector#ClearBreakpoints()&lt;CR&gt;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; nmap &lt;Leader&gt;dk &lt;Plug&gt;VimspectorRestart</span><br><span class=\"line\">&quot; nmap &lt;Leader&gt;dh &lt;Plug&gt;VimspectorStepOut</span><br><span class=\"line\">&quot; nmap &lt;Leader&gt;dl &lt;Plug&gt;VimspectorStepInto</span><br><span class=\"line\">&quot; nmap &lt;Leader&gt;dj &lt;Plug&gt;VimspectorStepOver</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">let g:vimspector_enable_mappings = &#x27;HUMAN&#x27;</span><br><span class=\"line\">map &lt;leader&gt;fdi :setlocal foldmethod=indent&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;fdm :setLocal foldmethod=manual&lt;CR&gt;</span><br><span class=\"line\">map &lt;leader&gt;&lt;leader&gt;m :Mark&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">let g:user_emmet_settings = &#123;</span><br><span class=\"line\">\\  &#x27;php&#x27; : &#123;</span><br><span class=\"line\">\\    &#x27;extends&#x27; : &#x27;html&#x27;,</span><br><span class=\"line\">\\  &#125;,</span><br><span class=\"line\">\\  &#x27;scala&#x27; : &#123;</span><br><span class=\"line\">\\    &#x27;extends&#x27; : &#x27;html&#x27;,</span><br><span class=\"line\">\\  &#125;,</span><br><span class=\"line\">\\  &#x27;java&#x27; : &#123;</span><br><span class=\"line\">\\    &#x27;extends&#x27; : &#x27;html&#x27;,</span><br><span class=\"line\">\\  &#125;,</span><br><span class=\"line\">\\&#125;</span><br><span class=\"line\">let g:user_emmet_install_global = 0</span><br><span class=\"line\">autocmd FileType html,css,java,scala,dot,tsx EmmetInstall</span><br><span class=\"line\"></span><br><span class=\"line\">let g:user_emmet_leader_key=&#x27;&lt;C-Z&gt;&#x27;</span><br><span class=\"line\">let g:typescript_compiler_binary = &#x27;tsc&#x27;</span><br><span class=\"line\">let g:typescript_compiler_options = &#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">autocmd FileType typescript :set makeprg=tsc</span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">function! myspacevim#after() abort</span><br><span class=\"line\"></span><br><span class=\"line\">endfunction</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"AA","date":"2023-09-05T11:33:25.000Z","_content":"","source":"_posts/AA.md","raw":"---\ntitle: AA\ndate: 2023-09-05 19:33:25\ntags:\n---\n","slug":"AA","published":1,"updated":"2023-09-05T11:33:25.645Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clm6ezn4o000dg894gjyz76qv","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clm6ezn4c0005g8948pde0p9q","tag_id":"clm6ezn4j0007g894ezj64ic2","_id":"clm6ezn4o000cg8945dtp8pbz"},{"post_id":"clm6ezn4l0009g894g5ww0qj1","tag_id":"clm6ezn4n000bg894ah2delid","_id":"clm6ezn4p000fg89437mr10bm"},{"post_id":"clm6ezn4m000ag894afti810j","tag_id":"clm6ezn4p000eg894fcvzepth","_id":"clm6ezn4p000gg8943sz1aymx"}],"Tag":[{"name":"A","_id":"clm6ezn4j0007g894ezj64ic2"},{"name":"about","_id":"clm6ezn4n000bg894ah2delid"},{"name":"vim","_id":"clm6ezn4p000eg894fcvzepth"}]}}